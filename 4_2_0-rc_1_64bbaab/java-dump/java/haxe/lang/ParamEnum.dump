@:realPath("java.internal._HxObject.ParamEnum") @:used @:nativeGen @:keep @:native("haxe.lang.ParamEnum") @:nativeGen
private class haxe.lang.ParamEnum extends haxe.lang.Enum {

	@:has_untyped
	public function new(index:Int, params:haxe.ds.Vector<Dynamic>) {
		super(index);
		this.params = params;
	}

	@:readOnly
	var params(default,never):haxe.ds.Vector<Dynamic>;

	public function getParams() {
		if ((this.params == null)) return [] else {
			var this1 = this.params;
			var a = new Array();
			var len = cast this1.length;
			{
				var _g = 0;
				var _g1 = len;
				while ((_g < _g1)) {
					var i = _g ++;
					a[i] = cast this1[i];
				};
			};
			return cast a;
		};
	}

	public function toString() {
		if ((this.params == null || cast this.params.length == 0)) return this.getTag();
		var ret = new StringBuf();
		ret.add(this.getTag());
		ret.add("(");
		var first = true;
		{
			var _g = 0;
			var _g1 = this.params;
			while ((_g < cast _g1.length)) {
				var p = cast _g1[_g];
				++ _g;
				if ((first)) first = false else ret.add(",");
				ret.add(p);
			};
		};
		ret.add(")");
		return ret.toString();
	}

	public function equals(obj:Dynamic) {
		if ((obj == this)) return true;
		var obj1 = if ((Std.isOfType(obj, haxe.lang.ParamEnum))) cast obj else null;
		var ret = obj1 != null && Std.isOfType(obj1, Type.getEnum(cast this)) && obj1.index == this.index;
		if ((! ret)) return false;
		if ((obj1.params == this.params)) return true;
		var len = 0;
		var tmp;
		if ((! (obj1.params == null || this.params == null))) {
			len = cast this.params.length;
			tmp = len != cast obj1.params.length;
		} else tmp = true;
		if ((tmp)) return false;
		{
			var _g = 0;
			var _g1 = len;
			while ((_g < _g1)) {
				var i = _g ++;
				if ((! Type.enumEq(cast obj1.params[i], cast this.params[i]))) return false;
			};
		};
		return true;
	}

	@:has_untyped
	public function hashCode() {
		var h = 19;
		if ((this.params != null)) {
			var _g = 0;
			var _g1 = this.params;
			while ((_g < cast _g1.length)) {
				var p = cast _g1[_g];
				++ _g;
				h *= 31;
				if ((p != null)) h += p.hashCode();
			};
		};
		h += this.index;
		return h;
	}
}