@:realPath("java.util.WeakHashMap_WeakHashMapSpliterator") @:used @:native("java.util.WeakHashMap$WeakHashMapSpliterator") @:libType
extern class java.util.WeakHashMap$WeakHashMapSpliterator<K:Dynamic, V:Dynamic> {

	function new(param1:java.util.WeakHashMap<java.util.WeakHashMap_WeakHashMapSpliterator.K, java.util.WeakHashMap_WeakHashMapSpliterator.V>, param2:Int, param3:Int, param4:Int, param5:Int):Void;

	function getFence():Int;

	function estimateSize():haxe.Int64;

	var map(default,ctor):java.util.WeakHashMap<java.util.WeakHashMap_WeakHashMapSpliterator.K, java.util.WeakHashMap_WeakHashMapSpliterator.V>;

	var current:java.util.WeakHashMap$Entry<java.util.WeakHashMap_WeakHashMapSpliterator.K, java.util.WeakHashMap_WeakHashMapSpliterator.V>;

	var index:Int;

	var fence:Int;

	var est:Int;

	var expectedModCount:Int;
}