// Generated by Haxe 4.2.0-rc.1+64bbaabab
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Writer extends haxe.lang.HxObject
{
	static
	{
		//line 9 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		haxe.root.Writer.directory = haxe.io.Path.normalize("/");
		//line 10 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		haxe.root.Writer.haxever = "4.2.0-rc.1_64bbaab";
		//line 11 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		haxe.root.Writer.file = "java";
		//line 27 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		haxe.root.Writer.lastIndex = 0;
	}
	
	public Writer(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Writer()
	{
		//line 7 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		haxe.root.Writer.__hx_ctor__Writer(this);
	}
	
	
	protected static void __hx_ctor__Writer(haxe.root.Writer __hx_this)
	{
	}
	
	
	public static java.lang.String directory;
	
	public static java.lang.String haxever;
	
	public static java.lang.String file;
	
	public static java.lang.String handle;
	
	public static java.lang.String get_handle()
	{
		//line 15 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		if (( haxe.root.Writer.handle == null )) 
		{
			//line 16 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
			if ( ! (sys.FileSystem.exists(( "./" + haxe.root.Writer.directory ))) ) 
			{
				//line 17 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
				sys.FileSystem.createDirectory(( "./" + haxe.root.Writer.directory ));
			}
			
			//line 20 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
			haxe.root.Writer.handle = sys.io.File.getContent(haxe.io.Path.normalize(( ( ( ( "./" + haxe.root.Writer.directory ) + "/" ) + haxe.root.Writer.file ) + ".md" )));
		}
		
		//line 24 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		return haxe.root.Writer.handle;
	}
	
	
	public static int lastIndex;
	
	public static <T> void writePair(T v1, T v2, java.lang.Object pos)
	{
		//line 29 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		int index = haxe.lang.StringExt.indexOf(haxe.root.Writer.get_handle(), ( ( "| " + ((int) (haxe.lang.Runtime.getField_f(pos, "lineNumber", true)) ) ) + " |" ), haxe.root.Writer.lastIndex);
		//line 30 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		java.lang.String addition = ( ( ( ( "" + haxe.root.Std.string(v1) ) + "|" ) + haxe.root.Std.string(v2) ) + "|\n" );
		//line 32 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		if (( index > -1 )) 
		{
			//line 33 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
			haxe.root.Writer.lastIndex = index;
			//line 34 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
			int nl = haxe.lang.StringExt.indexOf(haxe.root.Writer.get_handle(), "\n", index);
			//line 36 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
			if (( nl > -1 )) 
			{
				//line 37 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
				haxe.root.Writer.handle = ( ( haxe.lang.StringExt.substring(haxe.root.Writer.get_handle(), 0, nl) + addition ) + haxe.lang.StringExt.substring(haxe.root.Writer.get_handle(), ( nl + 1 ), haxe.root.Writer.get_handle().length()) );
			}
			else
			{
				//line 40 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
				throw ((java.lang.RuntimeException) (haxe.Exception.thrown("Unable to find newline.")) );
			}
			
		}
		else
		{
			//line 45 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(( ( ( ( ( "Unable to find line number `" + ((int) (haxe.lang.Runtime.getField_f(pos, "lineNumber", true)) ) ) + "` for values " ) + haxe.root.Std.string(v1) ) + " and " ) + haxe.root.Std.string(v2) ))) );
		}
		
		//line 49 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		haxe.Log.trace.__hx_invoke2_o(((double) (((int) (haxe.lang.Runtime.getField_f(pos, "lineNumber", true)) )) ), haxe.lang.Runtime.undefined, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "customParams", "fileName", "methodName"}, new java.lang.Object[]{"Writer", new haxe.root.Array(new java.lang.Object[]{v1, v2}), "Writer.hx", "writePair"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (49) )) )}));
	}
	
	
	public static void close()
	{
		//line 54 "C:\\haxe issues\\haxe-integer-reporter\\Writer.hx"
		sys.io.File.saveContent(haxe.io.Path.normalize(( ( ( ( "./" + haxe.root.Writer.directory ) + "/" ) + haxe.root.Writer.file ) + ".md" )), haxe.root.Writer.get_handle());
	}
	
	
}


