@:keep @:directlyUsed @:used
class haxe.Log {

	public static function formatOutput(v:Dynamic, infos:haxe.PosInfos) {
		var str = Std.string(v);
		if ((infos == null)) return str;
		var pstr = infos.fileName + ":" + infos.lineNumber;
		if ((infos.customParams != null)) {
			var _g = 0;
			var _g1 = infos.customParams;
			while ((_g < _g1.length)) {
				var v = _g1[_g];
				++ _g;
				str += ", " + Std.string(v);
			};
		};
		return pstr + ": " + str;
	}

	public static dynamic function trace(v:Dynamic, infos:Null<haxe.PosInfos> = null) {
		var str = haxe.Log.formatOutput(v, infos);
		java.lang.System.out.println(cast str);
	}
}