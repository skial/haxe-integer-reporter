@:realPath("java.lang.ref.Reference") @:used @:native("java.lang.ref.Reference") @:libType
extern class java.lang.ref.Reference<T:Dynamic> {

	function new(param1:java.lang.ref.Reference.T):Void;

	function new(param1:java.lang.ref.Reference.T, param2:java.lang.ref.ReferenceQueue<Dynamic>):Void;

	function get():java.lang.ref.Reference.T;

	function clear():Void;

	function isEnqueued():Bool;

	function enqueue():Bool;

	var queue:java.lang.ref.ReferenceQueue<Dynamic>;

	var next:java.lang.ref.Reference<Dynamic>;

	@:realPath("access_100") @:native("access$100")
	static function access$100():java.lang.ref.Reference$Lock;

	@:realPath("access_200") @:native("access$200")
	static function access$200():java.lang.ref.Reference<Dynamic>;

	@:realPath("access_202") @:native("access$202")
	static function access$202(param1:java.lang.ref.Reference<Dynamic>):java.lang.ref.Reference<Dynamic>;

	@:realPath("access_300") @:native("access$300")
	static function access$300(param1:java.lang.ref.Reference<Dynamic>):java.lang.ref.Reference<Dynamic>;

	@:realPath("access_302") @:native("access$302")
	static function access$302(param1:java.lang.ref.Reference<Dynamic>, param2:java.lang.ref.Reference<Dynamic>):java.lang.ref.Reference<Dynamic>;

	static function <clinit>():Void;
}