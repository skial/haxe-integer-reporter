@:directlyUsed @:used @:pythonImport("builtins")
extern class python.lib.Builtins {

	static function abs(x:Float):Float;

	static function abs(f:Int):Int;

	static function all(i:Iterable<Bool>):Bool;

	static function any(i:Iterable<Bool>):Bool;

	static function bool(x:Dynamic):Bool;

	static function issubclass(x:Class<Dynamic>, from:Class<Dynamic>):Bool;

	static function callable(x:Dynamic):Bool;

	static function isinstance(obj:Dynamic, cl:Dynamic):Bool;

	static function isinstance(obj:Dynamic, f:tuple<Dynamic>):Bool;

	static function hasattr(obj:Dynamic, attr:str):Bool;

	static function getattr(obj:Dynamic, attr:str):Dynamic;

	static function len(x:str):Int;

	static function len(f:set<Dynamic>):Int;

	static function len(f:StringBuf):Int;

	static function len(f:list<Dynamic>):Int;

	static function len(f:dict<Dynamic, Dynamic>):Int;

	static function len(f:bytes):Int;

	static function len(f:python.DictView<Dynamic>):Int;

	static function len(f:bytearray):Int;

	static function len(f:tuple<Dynamic>):Int;

	@:value({ encoding : null, buffering : -1 })
	static function open(file:str, mode:str, buffering:Null<Int>, encoding:Null<str>, errors:Null<str>, newline:Null<str>, closefd:Null<Bool>, opener:Null<(str, Int) -> python.lib.FileDescriptor>):python.lib.io.IOBase;

	static function int(x:Dynamic):Int;

	static function int(x:Dynamic, base:Int):Int;

	static function ord(s:str):Int;

	static function str(o:Dynamic):str;

	static function print(o:Dynamic):Void;

	static function iter<X>(d:python.DictView<iter.X>):python.NativeIterator<iter.X>;

	static function type():Void;

	static function float(x:Dynamic):Float;

	static function list<T>(i:python.NativeIterable<list.T>):list<list.T>;

	static function list<T>(f:list<list.T>):list<list.T>;

	static function list<T>(f:tuple<list.T>):list<list.T>;

	static function list<T>(f:python.DictView<list.T>):list<list.T>;

	static function list(f:str):list<str>;

	static function filter<A>(f:filter.A -> Bool, i:list<filter.A>):python.NativeIterator<filter.A>;

	static function filter<A>(f:filter.A -> Bool, i:python.NativeIterable<filter.A>):python.NativeIterator<filter.A>;

	static function chr(c:Int):str;

	static function map<A, B>(fn:map.A -> map.B, it:python.NativeIterable<map.A>):python.NativeIterator<map.B>;

	static function repr(o:Dynamic):str;

	static function max(a1:Int, a2:Int, rest:haxe.extern.Rest<Int>):Int;

	static function max(a1:Float, a2:Float, rest:haxe.extern.Rest<Float>):Float;

	static function round(f:Float):Int;

	static function min(a1:Int, a2:Int, rest:haxe.extern.Rest<Int>):Int;

	static function min(a1:Float, a2:Float, rest:haxe.extern.Rest<Float>):Float;

	static function delattr(o:Dynamic, attr:str):Void;

	static function setattr(o:Dynamic, attr:str, val:Dynamic):Void;

	static function id(x:{ }):Int;
}