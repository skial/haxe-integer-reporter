@:realPath("java.time.ZoneOffset") @:used @:nativeGen @:libType @:javaNative @:native("java.time.ZoneOffset") @:javaCanonical("java.time", "ZoneOffset")
extern class java.time.ZoneOffset extends java.time.ZoneId implements java.io.Serializable implements java.lang.Comparable<java.time.ZoneOffset> implements java.time.temporal.TemporalAdjuster implements java.time.temporal.TemporalAccessor {

	function compareTo(param1:Dynamic):Int;

	function compareTo(param1:java.time.ZoneOffset):Int;

	function toString():String;

	function hashCode():Int;

	function equals(param1:Dynamic):Bool;

	function adjustInto(param1:java.time.temporal.Temporal):java.time.temporal.Temporal;

	function query<R:Dynamic>(param1:java.time.temporal.TemporalQuery<query.R>):query.R;

	function getLong(param1:java.time.temporal.TemporalField):haxe.Int64;

	function get(param1:java.time.temporal.TemporalField):Int;

	function range(param1:java.time.temporal.TemporalField):java.time.temporal.ValueRange;

	function isSupported(param1:java.time.temporal.TemporalField):Bool;

	function getRules():java.time.zone.ZoneRules;

	function getId():String;

	function getTotalSeconds():Int;

	static function ofTotalSeconds(param1:Int):java.time.ZoneOffset;

	static function from(param1:java.time.temporal.TemporalAccessor):java.time.ZoneOffset;

	@:realPath("_from") @:native("from") @:deprecated("This static field `_from` is deprecated and will be removed in later versions. Please use `from` instead")
	static function from(param1:java.time.temporal.TemporalAccessor):java.time.ZoneOffset;

	static function ofHoursMinutesSeconds(param1:Int, param2:Int, param3:Int):java.time.ZoneOffset;

	static function ofHoursMinutes(param1:Int, param2:Int):java.time.ZoneOffset;

	static function ofHours(param1:Int):java.time.ZoneOffset;

	static function of(param1:String):java.time.ZoneOffset;

	@:realPath("_of") @:native("of") @:deprecated("This static field `_of` is deprecated and will be removed in later versions. Please use `of` instead")
	static function of(param1:String):java.time.ZoneOffset;

	static var UTC(default,never):java.time.ZoneOffset;

	static var MIN(default,never):java.time.ZoneOffset;

	static var MAX(default,never):java.time.ZoneOffset;
}