@:keep @:directlyUsed @:used @:nativeGen @:coreApi @:nativeGen
class Std {

	@:has_untyped
	public static function isOfType(v:Dynamic, t:Dynamic) {
		if ((v == null)) return false;
		if ((t == null)) return false;
		var clt = cast t;
		if ((clt == null)) return false;
		var name = clt.getName();
		switch ((name)) {
			case "boolean", "java.lang.Boolean": return __java__("v instanceof java.lang.Boolean");
			case "double", "java.lang.Double": return __java__("haxe.lang.Runtime.isDouble(v)");
			case "int", "java.lang.Integer": return __java__("haxe.lang.Runtime.isInt(v)");
			case "java.lang.Object": return true;
		};
		var clv = __java__("v.getClass()");
		return clt.isAssignableFrom(clv);
	}

	public static function string(s:Dynamic) {
		return cast (s,String) + "";
	}

	public static function int(x:Float) {
		return cast x;
	}
}