@:realPath("java.util.function.BiConsumer") @:used @:nativeGen @:abstract @:libType @:javaNative @:native("java.util.function.BiConsumer") @:javaCanonical("java.util.function", "BiConsumer")
extern interface java.util.function.BiConsumer<T : java.util.function.BiConsumer.T,U : java.util.function.BiConsumer.U> {

	@:overload
	function andThen(param1:java.util.function.BiConsumer<Dynamic, Dynamic>):java.util.function.BiConsumer<java.util.function.BiConsumer.T, java.util.function.BiConsumer.U>;

	@:overload
	function accept(param1:java.util.function.BiConsumer.T, param2:java.util.function.BiConsumer.U):Void;
}