@:realPath("java.lang.System") @:directlyUsed @:used @:nativeGen @:libType @:javaNative @:native("java.lang.System") @:javaCanonical("java.lang", "System")
extern class java.lang.System {

	@:overload
	static function mapLibraryName(param1:String):String;

	@:overload
	static function loadLibrary(param1:String):Void;

	@:overload
	static function load(param1:String):Void;

	@:overload @:deprecated
	static function runFinalizersOnExit(param1:Bool):Void;

	@:overload
	static function runFinalization():Void;

	@:overload
	static function gc():Void;

	@:overload
	static function exit(param1:Int):Void;

	@:overload
	static function getenv():java.util.Map<String, String>;

	@:overload
	static function getenv(param1:String):String;

	@:overload
	static function clearProperty(param1:String):String;

	@:overload
	static function setProperty(param1:String, param2:String):String;

	@:overload
	static function getProperty(param1:String, param2:String):String;

	@:overload
	static function getProperty(param1:String):String;

	@:overload
	static function setProperties(param1:java.util.Properties):Void;

	@:overload
	static function lineSeparator():String;

	@:overload
	static function getProperties():java.util.Properties;

	@:overload
	static function identityHashCode(param1:Dynamic):Int;

	@:overload
	static function arraycopy(param1:Dynamic, param2:Int, param3:Dynamic, param4:Int, param5:Int):Void;

	@:overload
	static function nanoTime():haxe.Int64;

	@:overload
	static function currentTimeMillis():haxe.Int64;

	@:overload
	static function getSecurityManager():java.lang.SecurityManager;

	@:overload
	static function setSecurityManager(param1:java.lang.SecurityManager):Void;

	@:overload @:throws("java.io.IOException")
	static function inheritedChannel():java.nio.channels.Channel;

	@:overload
	static function console():java.io.Console;

	@:overload
	static function setErr(param1:java.io.PrintStream):Void;

	@:overload
	static function setOut(param1:java.io.PrintStream):Void;

	@:overload
	static function setIn(param1:java.io.InputStream):Void;

	@:realPath("_in") @:native("in")
	static var in(default,never):java.io.InputStream;

	static var out(default,never):java.io.PrintStream;

	static var err(default,never):java.io.PrintStream;
}