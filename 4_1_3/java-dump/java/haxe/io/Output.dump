@:keep @:used @:hxGen
class haxe.io.Output {

	public function writeByte(c:Int) {
		throw cast haxe.Exception.thrown("Not implemented");
	}

	@:has_untyped
	public function writeBytes(s:haxe.io.Bytes, pos:Int, len:Int) {
		if ((pos < 0 || len < 0 || pos + len > s.length)) throw cast haxe.Exception.thrown(haxe.io.Error.OutsideBounds);
		var b = s.b;
		var k = len;
		while ((k > 0)) {
			this.writeByte(b[pos]);
			++ pos;
			-- k;
		};
		return len;
	}

	public function writeFullBytes(s:haxe.io.Bytes, pos:Int, len:Int) {
		while ((len > 0)) {
			var k = this.writeBytes(s, pos, len);
			pos += k;
			len -= k;
		};
	}

	public function writeString(s:String, encoding:Null<haxe.io.Encoding> = null) {
		var b = haxe.io.Bytes.ofString(s, encoding);
		this.writeFullBytes(b, 0, b.length);
	}
}