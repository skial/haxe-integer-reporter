@:realPath("java.io.RandomAccessFile") @:directlyUsed @:used @:libType @:javaNative @:native("java.io.RandomAccessFile") @:javaCanonical("java.io", "RandomAccessFile")
extern class java.io.RandomAccessFile implements java.io.DataOutput implements java.io.DataInput implements java.io.Closeable {

	@:overload @:throws("java.io.FileNotFoundException")
	function new(param1:java.io.File, param2:java.lang.String):Void;

	@:overload @:throws("java.io.FileNotFoundException")
	function new(param1:java.lang.String, param2:java.lang.String):Void;

	@:overload @:throws("java.io.IOException")
	function writeUTF(param1:java.lang.String):Void;

	@:overload @:throws("java.io.IOException")
	function writeChars(param1:java.lang.String):Void;

	@:overload @:throws("java.io.IOException")
	function writeBytes(param1:java.lang.String):Void;

	@:overload @:throws("java.io.IOException")
	function writeDouble(param1:Float):Void;

	@:overload @:throws("java.io.IOException")
	function writeFloat(param1:Single):Void;

	@:overload @:throws("java.io.IOException")
	function writeLong(param1:haxe.Int64):Void;

	@:overload @:throws("java.io.IOException")
	function writeInt(param1:Int):Void;

	@:overload @:throws("java.io.IOException")
	function writeChar(param1:Int):Void;

	@:overload @:throws("java.io.IOException")
	function writeShort(param1:Int):Void;

	@:overload @:throws("java.io.IOException")
	function writeByte(param1:Int):Void;

	@:overload @:throws("java.io.IOException")
	function writeBoolean(param1:Bool):Void;

	@:overload @:throws("java.io.IOException")
	function readUTF():java.lang.String;

	@:overload @:throws("java.io.IOException")
	function readLine():java.lang.String;

	@:overload @:throws("java.io.IOException")
	function readDouble():Float;

	@:overload @:throws("java.io.IOException")
	function readFloat():Single;

	@:overload @:throws("java.io.IOException")
	function readLong():haxe.Int64;

	@:overload @:throws("java.io.IOException")
	function readInt():Int;

	@:overload @:throws("java.io.IOException")
	function readChar():java.types.Char16;

	@:overload @:throws("java.io.IOException")
	function readUnsignedShort():Int;

	@:overload @:throws("java.io.IOException")
	function readShort():java.types.Int16;

	@:overload @:throws("java.io.IOException")
	function readUnsignedByte():Int;

	@:overload @:throws("java.io.IOException")
	function readByte():java.types.Int8;

	@:overload @:throws("java.io.IOException")
	function readBoolean():Bool;

	@:overload @:throws("java.io.IOException")
	function close():Void;

	@:overload @:throws("java.io.IOException")
	function setLength(param1:haxe.Int64):Void;

	@:overload @:throws("java.io.IOException")
	function length():haxe.Int64;

	@:overload @:throws("java.io.IOException")
	function seek(param1:haxe.Int64):Void;

	@:overload @:throws("java.io.IOException")
	function getFilePointer():haxe.Int64;

	@:overload @:throws("java.io.IOException")
	function write(param1:java.NativeArray<java.types.Int8>, param2:Int, param3:Int):Void;

	@:overload @:throws("java.io.IOException")
	function write(param1:Int):Void;

	@:overload @:throws("java.io.IOException")
	function write(param1:java.NativeArray<java.types.Int8>):Void;

	@:overload @:throws("java.io.IOException")
	function skipBytes(param1:Int):Int;

	@:overload @:throws("java.io.IOException")
	function readFully(param1:java.NativeArray<java.types.Int8>, param2:Int, param3:Int):Void;

	@:overload @:throws("java.io.IOException")
	function readFully(param1:java.NativeArray<java.types.Int8>):Void;

	@:overload @:throws("java.io.IOException")
	function read(param1:java.NativeArray<java.types.Int8>):Int;

	@:overload @:throws("java.io.IOException")
	function read():Int;

	@:overload @:throws("java.io.IOException")
	function read(param1:java.NativeArray<java.types.Int8>, param2:Int, param3:Int):Int;

	@:overload
	function getChannel():java.nio.channels.FileChannel;

	@:overload @:throws("java.io.IOException")
	function getFD():java.io.FileDescriptor;
}