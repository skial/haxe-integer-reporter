@:realPath("java.lang.Package") @:used @:libType @:javaNative @:native("java.lang.Package") @:javaCanonical("java.lang", "Package")
extern class java.lang.Package implements java.lang.reflect.AnnotatedElement {

	@:overload
	function getDeclaredAnnotations():java.NativeArray<java.lang.annotation.Annotation>;

	@:overload
	function getDeclaredAnnotationsByType<A : getDeclaredAnnotationsByType.A>(param1:java.lang.Class<getDeclaredAnnotationsByType.A>):java.NativeArray<getDeclaredAnnotationsByType.A>;

	@:overload
	function getDeclaredAnnotation<A : getDeclaredAnnotation.A>(param1:java.lang.Class<getDeclaredAnnotation.A>):getDeclaredAnnotation.A;

	@:overload
	function getAnnotations():java.NativeArray<java.lang.annotation.Annotation>;

	@:overload
	function getAnnotationsByType<A : getAnnotationsByType.A>(param1:java.lang.Class<getAnnotationsByType.A>):java.NativeArray<getAnnotationsByType.A>;

	@:overload
	function isAnnotationPresent(param1:java.lang.Class<java.lang.annotation.Annotation>):Bool;

	@:overload
	function getAnnotation<A : getAnnotation.A>(param1:java.lang.Class<getAnnotation.A>):getAnnotation.A;

	@:overload
	function toString():java.lang.String;

	@:overload
	function hashCode():Int;

	@:overload @:throws("java.lang.NumberFormatException")
	function isCompatibleWith(param1:java.lang.String):Bool;

	@:overload
	function isSealed(param1:java.net.URL):Bool;

	@:overload
	function isSealed():Bool;

	@:overload
	function getImplementationVendor():java.lang.String;

	@:overload
	function getImplementationVersion():java.lang.String;

	@:overload
	function getImplementationTitle():java.lang.String;

	@:overload
	function getSpecificationVendor():java.lang.String;

	@:overload
	function getSpecificationVersion():java.lang.String;

	@:overload
	function getSpecificationTitle():java.lang.String;

	@:overload
	function getName():java.lang.String;

	@:overload
	static function getPackages():java.NativeArray<java.lang.Package>;

	@:overload
	static function getPackage(param1:java.lang.String):java.lang.Package;
}