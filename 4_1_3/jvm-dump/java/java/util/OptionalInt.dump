@:realPath("java.util.OptionalInt") @:used @:libType @:javaNative @:native("java.util.OptionalInt") @:javaCanonical("java.util", "OptionalInt")
extern class java.util.OptionalInt {

	@:overload
	function toString():java.lang.String;

	@:overload
	function hashCode():Int;

	@:overload
	function equals(param1:Dynamic):Bool;

	@:overload @:throws("StdTypes")
	function orElseThrow<X : orElseThrow.X>(param1:java.util.function.Supplier<orElseThrow.X>):Int;

	@:overload
	function orElseGet(param1:java.util.function.IntSupplier):Int;

	@:overload
	function orElse(param1:Int):Int;

	@:overload
	function ifPresent(param1:java.util.function.IntConsumer):Void;

	@:overload
	function isPresent():Bool;

	@:overload
	function getAsInt():Int;

	@:overload
	static function of(param1:Int):java.util.OptionalInt;

	@:overload
	static function empty():java.util.OptionalInt;
}