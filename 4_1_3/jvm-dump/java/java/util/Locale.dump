@:realPath("java.util.Locale") @:used @:libType @:javaNative @:native("java.util.Locale") @:javaCanonical("java.util", "Locale")
extern class java.util.Locale implements java.lang.Cloneable implements java.io.Serializable {

	@:overload
	function new(param1:java.lang.String):Void;

	@:overload
	function new(param1:java.lang.String, param2:java.lang.String, param3:java.lang.String):Void;

	@:overload
	function new(param1:java.lang.String, param2:java.lang.String):Void;

	@:overload
	function equals(param1:Dynamic):Bool;

	@:overload
	function hashCode():Int;

	@:overload
	function clone():Dynamic;

	@:overload
	function getDisplayName(param1:java.util.Locale):java.lang.String;

	@:overload
	function getDisplayName():java.lang.String;

	@:overload
	function getDisplayVariant(param1:java.util.Locale):java.lang.String;

	@:overload
	function getDisplayVariant():java.lang.String;

	@:overload
	function getDisplayCountry(param1:java.util.Locale):java.lang.String;

	@:overload
	function getDisplayCountry():java.lang.String;

	@:overload
	function getDisplayScript(param1:java.util.Locale):java.lang.String;

	@:overload
	function getDisplayScript():java.lang.String;

	@:overload
	function getDisplayLanguage(param1:java.util.Locale):java.lang.String;

	@:overload
	function getDisplayLanguage():java.lang.String;

	@:overload @:throws("java.util.MissingResourceException")
	function getISO3Country():java.lang.String;

	@:overload @:throws("java.util.MissingResourceException")
	function getISO3Language():java.lang.String;

	@:overload
	function toLanguageTag():java.lang.String;

	@:overload
	function toString():java.lang.String;

	@:overload
	function getUnicodeLocaleKeys():java.util.Set<java.lang.String>;

	@:overload
	function getUnicodeLocaleType(param1:java.lang.String):java.lang.String;

	@:overload
	function getUnicodeLocaleAttributes():java.util.Set<java.lang.String>;

	@:overload
	function getExtensionKeys():java.util.Set<java.lang.Character>;

	@:overload
	function getExtension(param1:java.types.Char16):java.lang.String;

	@:overload
	function stripExtensions():java.util.Locale;

	@:overload
	function hasExtensions():Bool;

	@:overload
	function getVariant():java.lang.String;

	@:overload
	function getCountry():java.lang.String;

	@:overload
	function getScript():java.lang.String;

	@:overload
	function getLanguage():java.lang.String;

	@:overload
	static function lookupTag(param1:java.util.List<java.util.Locale$LanguageRange>, param2:java.util.Collection<java.lang.String>):java.lang.String;

	@:overload
	static function lookup(param1:java.util.List<java.util.Locale$LanguageRange>, param2:java.util.Collection<java.util.Locale>):java.util.Locale;

	@:overload
	static function filterTags(param1:java.util.List<java.util.Locale$LanguageRange>, param2:java.util.Collection<java.lang.String>):java.util.List<java.lang.String>;

	@:overload
	static function filterTags(param1:java.util.List<java.util.Locale$LanguageRange>, param2:java.util.Collection<java.lang.String>, param3:java.util.Locale$FilteringMode):java.util.List<java.lang.String>;

	@:overload
	static function filter(param1:java.util.List<java.util.Locale$LanguageRange>, param2:java.util.Collection<java.util.Locale>):java.util.List<java.util.Locale>;

	@:overload
	static function filter(param1:java.util.List<java.util.Locale$LanguageRange>, param2:java.util.Collection<java.util.Locale>, param3:java.util.Locale$FilteringMode):java.util.List<java.util.Locale>;

	@:overload
	static function forLanguageTag(param1:java.lang.String):java.util.Locale;

	@:overload
	static function getISOLanguages():java.NativeArray<java.lang.String>;

	@:overload
	static function getISOCountries():java.NativeArray<java.lang.String>;

	@:overload
	static function getAvailableLocales():java.NativeArray<java.util.Locale>;

	@:overload
	static function setDefault(param1:java.util.Locale$Category, param2:java.util.Locale):Void;

	@:overload
	static function setDefault(param1:java.util.Locale):Void;

	@:overload
	static function getDefault(param1:java.util.Locale$Category):java.util.Locale;

	@:overload
	static function getDefault():java.util.Locale;

	static var ENGLISH(default,never):java.util.Locale;

	static var FRENCH(default,never):java.util.Locale;

	static var GERMAN(default,never):java.util.Locale;

	static var ITALIAN(default,never):java.util.Locale;

	static var JAPANESE(default,never):java.util.Locale;

	static var KOREAN(default,never):java.util.Locale;

	static var CHINESE(default,never):java.util.Locale;

	static var SIMPLIFIED_CHINESE(default,never):java.util.Locale;

	static var TRADITIONAL_CHINESE(default,never):java.util.Locale;

	static var FRANCE(default,never):java.util.Locale;

	static var GERMANY(default,never):java.util.Locale;

	static var ITALY(default,never):java.util.Locale;

	static var JAPAN(default,never):java.util.Locale;

	static var KOREA(default,never):java.util.Locale;

	static var CHINA(default,never):java.util.Locale;

	static var PRC(default,never):java.util.Locale;

	static var TAIWAN(default,never):java.util.Locale;

	static var UK(default,never):java.util.Locale;

	static var US(default,never):java.util.Locale;

	static var CANADA(default,never):java.util.Locale;

	static var CANADA_FRENCH(default,never):java.util.Locale;

	static var ROOT(default,never):java.util.Locale;

	static var PRIVATE_USE_EXTENSION(default,null):java.types.Char16;

	static var UNICODE_LOCALE_EXTENSION(default,null):java.types.Char16;
}