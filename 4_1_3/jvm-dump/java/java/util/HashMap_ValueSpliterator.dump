@:realPath("java.util.HashMap_ValueSpliterator") @:used @:libType @:javaNative @:native("java.util.HashMap$ValueSpliterator") @:javaCanonical("java.util", "HashMap.ValueSpliterator")
extern class java.util.HashMap$ValueSpliterator<K : java.util.HashMap_ValueSpliterator.K,V : java.util.HashMap_ValueSpliterator.V> extends java.util.HashMap$HashMapSpliterator<java.util.HashMap_ValueSpliterator.K, java.util.HashMap_ValueSpliterator.V> implements java.util.Spliterator<java.util.HashMap_ValueSpliterator.V> {

	@:overload
	function trySplit():java.util.HashMap$ValueSpliterator<java.util.HashMap_ValueSpliterator.K, java.util.HashMap_ValueSpliterator.V>;

	@:overload
	function characteristics():Int;

	@:overload
	function tryAdvance(param1:java.util.function.Consumer<Dynamic>):Bool;

	@:overload
	function forEachRemaining(param1:java.util.function.Consumer<Dynamic>):Void;

	@:overload
	function getExactSizeIfKnown():haxe.Int64;

	@:overload
	function hasCharacteristics(param1:Int):Bool;

	@:overload
	function getComparator():java.util.Comparator<Dynamic>;
}