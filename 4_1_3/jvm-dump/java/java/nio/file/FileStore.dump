@:realPath("java.nio.file.FileStore") @:abstract @:libType @:javaNative @:native("java.nio.file.FileStore") @:javaCanonical("java.nio.file", "FileStore")
extern class java.nio.file.FileStore {

	@:overload @:protected
	function new():Void;

	@:overload @:throws("java.io.IOException")
	function getAttribute(param1:java.lang.String):Dynamic;

	@:overload
	function getFileStoreAttributeView<V : getFileStoreAttributeView.V>(param1:java.lang.Class<getFileStoreAttributeView.V>):getFileStoreAttributeView.V;

	@:overload
	function supportsFileAttributeView(param1:java.lang.String):Bool;

	@:overload
	function supportsFileAttributeView(param1:java.lang.Class<java.nio.file.attribute.FileAttributeView>):Bool;

	@:overload @:throws("java.io.IOException")
	function getUnallocatedSpace():haxe.Int64;

	@:overload @:throws("java.io.IOException")
	function getUsableSpace():haxe.Int64;

	@:overload @:throws("java.io.IOException")
	function getTotalSpace():haxe.Int64;

	@:overload
	function isReadOnly():Bool;

	@:overload
	function type():java.lang.String;

	@:overload
	function name():java.lang.String;
}