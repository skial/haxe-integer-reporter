class IntIterator {

	public inline function new[Function:(min : Int, max : Int) -> Void]
		[Arg:Int] [Local min(109448):Int]
		[Arg:Int] [Local max(109449):Int]
		[Block:Int]
			[Binop:Int]
				[Field:Int]
					[Const:IntIterator] this
					[FInstance:Int]
						IntIterator
						min:Int
				=
				[Local min(109448):Int:Int]
			[Binop:Int]
				[Field:Int]
					[Const:IntIterator] this
					[FInstance:Int]
						IntIterator
						max:Int
				=
				[Local max(109449):Int:Int]

	var min:Int;

	var max:Int;

	public inline function hasNext[Function:Void -> Bool]
		[Block:Dynamic]
			[Return:Dynamic]
				[Binop:Bool]
					[Field:Int]
						[Const:IntIterator] this
						[FInstance:Int]
							IntIterator
							min:Int
					<
					[Field:Int]
						[Const:IntIterator] this
						[FInstance:Int]
							IntIterator
							max:Int

	public inline function next[Function:Void -> Int]
		[Block:Dynamic]
			[Return:Dynamic]
				[Unop:Int]
					++
					Postfix
					[Field:Int]
						[Const:IntIterator] this
						[FInstance:Int]
							IntIterator
							min:Int
}