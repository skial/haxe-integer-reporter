class haxe.macro.Error extends haxe.Exception {

	public function new[Function:(message : String, pos : haxe.macro.Position, ?previous : Null<haxe.Exception>) -> Void]
		[Arg:String] [Local message(109502):String]
		[Arg:haxe.macro.Position] [Local pos(109503):haxe.macro.Position]
		[Arg:Null<haxe.Exception>]
			[Local previous(109504):Null<haxe.Exception>]
			[Const:Null<haxe.Exception>] null
		[Block:Void]
			[Block:haxe.macro.Position]
				[Call:Void]
					[Const:haxe.Exception] super
					[Local message(109502):String:String]
					[Local previous(109504):Null<haxe.Exception>:Null<haxe.Exception>]
					[Const:Null<Any>] null
				[Binop:haxe.macro.Position]
					[Field:haxe.macro.Position]
						[Const:haxe.macro.Error] this
						[FInstance:haxe.macro.Position]
							haxe.macro.Error
							pos:haxe.macro.Position
					=
					[Local pos(109503):haxe.macro.Position:haxe.macro.Position]
			[Block:Void]
				[Unop:Int]
					++
					Postfix
					[Field:Int]
						[Const:haxe.macro.Error] this
						[FInstance:Int]
							haxe.Exception
							__skipStack:Int

	public var pos:haxe.macro.Position;
}