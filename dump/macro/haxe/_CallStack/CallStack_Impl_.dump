@:using(haxe.CallStack) @:allow(haxe.Exception)
private class haxe._CallStack.CallStack_Impl_ {

	@:impl
	public static var length(get,never):Int;

	@:impl
	static inline function get_length[Function:(this : Array<haxe.StackItem>) -> Int]
		[Arg:Array<haxe.StackItem>] [Local this(109315):Array<haxe.StackItem>]
		[Return:Dynamic]
			[Field:Int]
				[Local this(109315):Array<haxe.StackItem>:Array<haxe.StackItem>]
				[FInstance:Int]
					Array<haxe.StackItem>
					length:Int

	public static function callStack[Function:Void -> Array<haxe.StackItem>]
		[Block:Dynamic]
			[Return:Dynamic]
				[Block:Array<haxe.StackItem>]
					[Var stack(109355):Array<haxe.StackItem>]
						[Call:Array<haxe.StackItem>]
							[Field:Void -> Array<haxe.StackItem>]
								[TypeExpr haxe.NativeStackTrace:Class<haxe.NativeStackTrace>]
								[FStatic:Void -> Array<haxe.StackItem>]
									haxe.NativeStackTrace
									callStack:Void -> Array<haxe.StackItem>
					[If:Array<haxe.StackItem>]
						[Binop:Bool]
							[Const:Int] 0
							>
							[Const:Int] 0
						[Then:Array<haxe.StackItem>] [Block:Array<haxe.StackItem>]
							[Call:Array<haxe.StackItem>]
								[Field:(pos : Int, ?end : Null<Int>) -> Array<haxe.StackItem>]
									[Local stack(109355):Array<haxe.StackItem>:Array<haxe.StackItem>]
									[FInstance:(pos : Int, ?end : Null<Int>) -> Array<haxe.StackItem>]
										Array<haxe.StackItem>
										slice:(pos : Int, ?end : Null<Int>) -> Array<Array.T>
								[Const:Int] 0
								[Const:Null<Int>] null
						[Else:Array<haxe.StackItem>] [Block:Array<haxe.StackItem>] [Local stack(109355):Array<haxe.StackItem>:Array<haxe.StackItem>]

	public static function exceptionStack[Function:Void -> Array<haxe.StackItem>]
		[Block:Dynamic]
			[Var eStack(109362):haxe.CallStack]
				[Block:Array<haxe.StackItem>]
					[Var stack(109360):Array<haxe.StackItem>]
						[Call:Array<haxe.StackItem>]
							[Field:Void -> Array<haxe.StackItem>]
								[TypeExpr haxe.NativeStackTrace:Class<haxe.NativeStackTrace>]
								[FStatic:Void -> Array<haxe.StackItem>]
									haxe.NativeStackTrace
									exceptionStack:Void -> Array<haxe.StackItem>
					[If:Array<haxe.StackItem>]
						[Binop:Bool]
							[Const:Int] 0
							>
							[Const:Int] 0
						[Then:Array<haxe.StackItem>] [Block:Array<haxe.StackItem>]
							[Call:Array<haxe.StackItem>]
								[Field:(pos : Int, ?end : Null<Int>) -> Array<haxe.StackItem>]
									[Local stack(109360):Array<haxe.StackItem>:Array<haxe.StackItem>]
									[FInstance:(pos : Int, ?end : Null<Int>) -> Array<haxe.StackItem>]
										Array<haxe.StackItem>
										slice:(pos : Int, ?end : Null<Int>) -> Array<Array.T>
								[Const:Int] 0
								[Const:Null<Int>] null
						[Else:Array<haxe.StackItem>] [Block:Array<haxe.StackItem>] [Local stack(109360):Array<haxe.StackItem>:Array<haxe.StackItem>]
			[Return:Dynamic]
				[Block:Array<haxe.StackItem>]
					[Var this(109447):Array<haxe.StackItem>]
						[Call:haxe.CallStack]
							[Field:(this : Array<haxe.StackItem>, stack : haxe.CallStack) -> haxe.CallStack]
								[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
								[FStatic:(this : Array<haxe.StackItem>, stack : haxe.CallStack) -> haxe.CallStack]
									haxe._CallStack.CallStack_Impl_
									subtract:(this : Array<haxe.StackItem>, stack : haxe.CallStack) -> haxe.CallStack
							[Local eStack(109362):haxe.CallStack:haxe.CallStack]
							[Call:Array<haxe.StackItem>]
								[Field:Void -> Array<haxe.StackItem>]
									[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
									[FStatic:Void -> Array<haxe.StackItem>]
										haxe._CallStack.CallStack_Impl_
										callStack:Void -> Array<haxe.StackItem>
					[Cast:Array<haxe.StackItem>] [Local this(109447):Array<haxe.StackItem>:Array<haxe.StackItem>]

	public static function toString[Function:(stack : haxe.CallStack) -> String]
		[Arg:haxe.CallStack] [Local stack(109450):haxe.CallStack]
		[Block:Dynamic]
			[Var b(109451):StringBuf] [New:StringBuf] StringBuf
			[Block:Void]
				[Var `(109490):Int] [Const:Int] 0
				[Var `1(109491):Array<haxe.StackItem>] [Cast:Array<haxe.StackItem>] [Local stack(109450):haxe.CallStack:haxe.CallStack]
				[While:Void]
					[Binop:Bool]
						[Local `(109490):Int:Int]
						<
						[Field:Int]
							[Local `1(109491):Array<haxe.StackItem>:Array<haxe.StackItem>]
							[FInstance:Int]
								Array<haxe.StackItem>
								length:Int
					[Block:Void]
						[Var s(109455):haxe.StackItem]
							[Array:haxe.StackItem]
								[Local `1(109491):Array<haxe.StackItem>:Array<haxe.StackItem>]
								[Local `(109490):Int:Int]
						[Unop:Int]
							++
							Prefix
							[Local `(109490):Int:Int]
						[Call:Void]
							[Field:(x : String) -> Void]
								[Local b(109451):StringBuf:StringBuf]
								[FInstance:(x : String) -> Void]
									StringBuf
									add:(x : add.T) -> Void
							[Const:String] "\nCalled from "
						[Call:Void]
							[Field:(b : StringBuf, s : haxe.StackItem) -> Void]
								[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
								[FStatic:(b : StringBuf, s : haxe.StackItem) -> Void]
									haxe._CallStack.CallStack_Impl_
									itemToString:(b : StringBuf, s : haxe.StackItem) -> Void
							[Local b(109451):StringBuf:StringBuf]
							[Local s(109455):haxe.StackItem:haxe.StackItem]
			[Return:Dynamic]
				[Call:String]
					[Field:Void -> String]
						[Local b(109451):StringBuf:StringBuf]
						[FInstance:Void -> String]
							StringBuf
							toString:Void -> String

	@:impl
	public static function subtract[Function:(this : Array<haxe.StackItem>, stack : haxe.CallStack) -> haxe.CallStack]
		[Arg:Array<haxe.StackItem>] [Local this(109363):Array<haxe.StackItem>]
		[Arg:haxe.CallStack] [Local stack(109364):haxe.CallStack]
		[Block:Dynamic]
			[Var startIndex(109365):Int] [Const:Int] -1
			[Var i(109366):Int] [Const:Int] -1
			[While:Void]
				[Binop:Bool]
					[Unop:Int]
						++
						Prefix
						[Local i(109366):Int:Int]
					<
					[Field:Int]
						[Local this(109363):Array<haxe.StackItem>:Array<haxe.StackItem>]
						[FInstance:Int]
							Array<haxe.StackItem>
							length:Int
				[Block:Void]
					[Block:Void]
						[Var `(109443):Int] [Const:Int] 0
						[Var `1(109444):Int]
							[Field:Int]
								[Cast:Array<haxe.StackItem>] [Local stack(109364):haxe.CallStack:haxe.CallStack]
								[FInstance:Int]
									Array<haxe.StackItem>
									length:Int
						[While:Void]
							[Binop:Bool]
								[Local `(109443):Int:Int]
								<
								[Local `1(109444):Int:Int]
							[Block:Void]
								[Var j(109370):Int]
									[Unop:Int]
										++
										Postfix
										[Local `(109443):Int:Int]
								[If:Void]
									[Call:Bool]
										[Field:(item1 : Null<haxe.StackItem>, item2 : Null<haxe.StackItem>) -> Bool]
											[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
											[FStatic:(item1 : Null<haxe.StackItem>, item2 : Null<haxe.StackItem>) -> Bool]
												haxe._CallStack.CallStack_Impl_
												equalItems:(item1 : Null<haxe.StackItem>, item2 : Null<haxe.StackItem>) -> Bool
										[Array:haxe.StackItem]
											[Local this(109363):Array<haxe.StackItem>:Array<haxe.StackItem>]
											[Local i(109366):Int:Int]
										[Array:haxe.StackItem]
											[Cast:Array<haxe.StackItem>] [Local stack(109364):haxe.CallStack:haxe.CallStack]
											[Local j(109370):Int:Int]
									[Then:Void] [Block:Void]
										[If:Void]
											[Binop:Bool]
												[Local startIndex(109365):Int:Int]
												<
												[Const:Int] 0
											[Then:Int] [Block:Int]
												[Binop:Int]
													[Local startIndex(109365):Int:Int]
													=
													[Local i(109366):Int:Int]
										[Unop:Int]
											++
											Prefix
											[Local i(109366):Int:Int]
										[If:Void]
											[Binop:Bool]
												[Local i(109366):Int:Int]
												>=
												[Field:Int]
													[Local this(109363):Array<haxe.StackItem>:Array<haxe.StackItem>]
													[FInstance:Int]
														Array<haxe.StackItem>
														length:Int
											[Then:Dynamic] [Block:Dynamic] [Break:Dynamic]
									[Else:Int] [Block:Int]
										[Binop:Int]
											[Local startIndex(109365):Int:Int]
											=
											[Const:Int] -1
					[If:Void]
						[Binop:Bool]
							[Local startIndex(109365):Int:Int]
							>=
							[Const:Int] 0
						[Then:Dynamic] [Block:Dynamic] [Break:Dynamic]
			[Return:Dynamic]
				[If:haxe.CallStack]
					[Binop:Bool]
						[Local startIndex(109365):Int:Int]
						>=
						[Const:Int] 0
					[Then:Array<haxe.StackItem>] [Block:Array<haxe.StackItem>]
						[Call:Array<haxe.StackItem>]
							[Field:(pos : Int, ?end : Null<Int>) -> Array<haxe.StackItem>]
								[Local this(109363):Array<haxe.StackItem>:Array<haxe.StackItem>]
								[FInstance:(pos : Int, ?end : Null<Int>) -> Array<haxe.StackItem>]
									Array<haxe.StackItem>
									slice:(pos : Int, ?end : Null<Int>) -> Array<Array.T>
							[Const:Int] 0
							[Local startIndex(109365):Int:Int]
					[Else:Array<haxe.StackItem>] [Block:Array<haxe.StackItem>] [Local this(109363):Array<haxe.StackItem>:Array<haxe.StackItem>]

	@:impl
	public static inline function copy[Function:(this : Array<haxe.StackItem>) -> haxe.CallStack]
		[Arg:Array<haxe.StackItem>] [Local this(109492):Array<haxe.StackItem>]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:Array<haxe.StackItem>]
					[Field:Void -> Array<haxe.StackItem>]
						[Local this(109492):Array<haxe.StackItem>:Array<haxe.StackItem>]
						[FInstance:Void -> Array<haxe.StackItem>]
							Array<haxe.StackItem>
							copy:Void -> Array<Array.T>

	@:impl @:arrayAccess
	public static inline function get[Function:(this : Array<haxe.StackItem>, index : Int) -> haxe.StackItem]
		[Arg:Array<haxe.StackItem>] [Local this(109437):Array<haxe.StackItem>]
		[Arg:Int] [Local index(109438):Int]
		[Block:Dynamic]
			[Return:Dynamic]
				[Array:haxe.StackItem]
					[Local this(109437):Array<haxe.StackItem>:Array<haxe.StackItem>]
					[Local index(109438):Int:Int]

	@:impl
	static inline function asArray[Function:(this : Array<haxe.StackItem>) -> Array<haxe.StackItem>]
		[Arg:Array<haxe.StackItem>] [Local this(109317):Array<haxe.StackItem>]
		[Block:Dynamic] [Return:Dynamic] [Local this(109317):Array<haxe.StackItem>:Array<haxe.StackItem>]

	static function equalItems[Function:(item1 : Null<haxe.StackItem>, item2 : Null<haxe.StackItem>) -> Bool]
		[Arg:Null<haxe.StackItem>] [Local item1(109371):Null<haxe.StackItem>]
		[Arg:Null<haxe.StackItem>] [Local item2(109372):Null<haxe.StackItem>]
		[Block:Dynamic]
			[Return:Dynamic]
				[Meta:Bool]
					:ast(switch ([item1, item2]) {
	case [null, null]:
		true;	
	case [CFunction, CFunction]:
		true;	
	case [Module(m1), Module(m2)]:
		m1 == m2;	
	case [FilePos(item1, file1, line1, col1), FilePos(item2, file2, line2, col2)]:
		file1 == file2 && line1 == line2 && col1 == col2 && equalItems(item1, item2);	
	case [Method(class1, method1), Method(class2, method2)]:
		class1 == class2 && method1 == method2;	
	case [LocalFunction(v1), LocalFunction(v2)]:
		v1 == v2;	
	case _:
		false;	
})
					[If:Bool]
						[Binop:Bool]
							[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
							==
							[Const:Null<haxe.StackItem>] null
						[Then:Bool] [If:Bool]
							[Binop:Bool]
								[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
								==
								[Const:Null<haxe.StackItem>] null
							[Then:Bool] [Block:Bool] [Const:Bool] true
							[Else:Bool] [Block:Bool] [Const:Bool] false
						[Else:Bool] [Switch:Bool]
							[Meta:Int]
								:exhaustive
								[EnumIndex:Int] [Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
							[Case:Bool]
								[Const:Int] 0
								[Block:Bool]
									[If:Bool]
										[Binop:Bool]
											[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
											==
											[Const:Null<haxe.StackItem>] null
										[Then:Bool] [Block:Bool] [Const:Bool] false
										[Else:Bool] [If:Bool]
											[Binop:Bool]
												[EnumIndex:Int] [Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
												==
												[Const:Int] 0
											[Then:Bool] [Block:Bool] [Block:Bool] [Const:Bool] true
											[Else:Bool] [Block:Bool] [Const:Bool] false
							[Case:Bool]
								[Const:Int] 1
								[Block:Bool]
									[Var `(109405):String]
										[EnumParameter:String]
											[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
											Module
											0
									[If:Bool]
										[Binop:Bool]
											[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
											==
											[Const:Null<haxe.StackItem>] null
										[Then:Bool] [Block:Bool] [Const:Bool] false
										[Else:Bool] [If:Bool]
											[Binop:Bool]
												[EnumIndex:Int] [Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
												==
												[Const:Int] 1
											[Then:Bool] [Block:Bool]
												[Var `1(109406):String]
													[EnumParameter:String]
														[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
														Module
														0
												[Block:Bool]
													[Var m1(109407):String] [Local `(109405):String:String]
													[Var m2(109408):String] [Local `1(109406):String:String]
													[Block:Bool]
														[Binop:Bool]
															[Local m1(109407):String:String]
															==
															[Local m2(109408):String:String]
											[Else:Bool] [Block:Bool] [Const:Bool] false
							[Case:Bool]
								[Const:Int] 2
								[Block:Bool]
									[Var `5(109409):Null<Int>]
										[EnumParameter:Null<Int>]
											[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
											FilePos
											3
									[Var `4(109410):Int]
										[EnumParameter:Int]
											[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
											FilePos
											2
									[Var `3(109411):String]
										[EnumParameter:String]
											[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
											FilePos
											1
									[Var `2(109412):Null<haxe.StackItem>]
										[EnumParameter:Null<haxe.StackItem>]
											[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
											FilePos
											0
									[If:Bool]
										[Binop:Bool]
											[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
											==
											[Const:Null<haxe.StackItem>] null
										[Then:Bool] [Block:Bool] [Const:Bool] false
										[Else:Bool] [If:Bool]
											[Binop:Bool]
												[EnumIndex:Int] [Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
												==
												[Const:Int] 2
											[Then:Bool] [Block:Bool]
												[Var `9(109413):Null<Int>]
													[EnumParameter:Null<Int>]
														[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
														FilePos
														3
												[Var `8(109414):Int]
													[EnumParameter:Int]
														[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
														FilePos
														2
												[Var `7(109415):String]
													[EnumParameter:String]
														[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
														FilePos
														1
												[Var `6(109416):Null<haxe.StackItem>]
													[EnumParameter:Null<haxe.StackItem>]
														[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
														FilePos
														0
												[Block:Bool]
													[Var item1(109417):Null<haxe.StackItem>] [Local `2(109412):Null<haxe.StackItem>:Null<haxe.StackItem>]
													[Var file1(109418):String] [Local `3(109411):String:String]
													[Var line1(109419):Int] [Local `4(109410):Int:Int]
													[Var col1(109420):Null<Int>] [Local `5(109409):Null<Int>:Null<Int>]
													[Var col2(109421):Null<Int>] [Local `9(109413):Null<Int>:Null<Int>]
													[Var line2(109422):Int] [Local `8(109414):Int:Int]
													[Var file2(109423):String] [Local `7(109415):String:String]
													[Var item2(109424):Null<haxe.StackItem>] [Local `6(109416):Null<haxe.StackItem>:Null<haxe.StackItem>]
													[Block:Bool]
														[Binop:Bool]
															[Binop:Bool]
																[Binop:Bool]
																	[Binop:Bool]
																		[Local file1(109418):String:String]
																		==
																		[Local file2(109423):String:String]
																	&&
																	[Binop:Bool]
																		[Local line1(109419):Int:Int]
																		==
																		[Local line2(109422):Int:Int]
																&&
																[Binop:Bool]
																	[Local col1(109420):Null<Int>:Null<Int>]
																	==
																	[Local col2(109421):Null<Int>:Null<Int>]
															&&
															[Call:Bool]
																[Field:(item1 : Null<haxe.StackItem>, item2 : Null<haxe.StackItem>) -> Bool]
																	[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
																	[FStatic:(item1 : Null<haxe.StackItem>, item2 : Null<haxe.StackItem>) -> Bool]
																		haxe._CallStack.CallStack_Impl_
																		equalItems:(item1 : Null<haxe.StackItem>, item2 : Null<haxe.StackItem>) -> Bool
																[Local item1(109417):Null<haxe.StackItem>:Null<haxe.StackItem>]
																[Local item2(109424):Null<haxe.StackItem>:Null<haxe.StackItem>]
											[Else:Bool] [Block:Bool] [Const:Bool] false
							[Case:Bool]
								[Const:Int] 3
								[Block:Bool]
									[Var `13(109425):String]
										[EnumParameter:String]
											[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
											Method
											1
									[Var `12(109426):Null<String>]
										[EnumParameter:Null<String>]
											[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
											Method
											0
									[If:Bool]
										[Binop:Bool]
											[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
											==
											[Const:Null<haxe.StackItem>] null
										[Then:Bool] [Block:Bool] [Const:Bool] false
										[Else:Bool] [If:Bool]
											[Binop:Bool]
												[EnumIndex:Int] [Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
												==
												[Const:Int] 3
											[Then:Bool] [Block:Bool]
												[Var `15(109427):String]
													[EnumParameter:String]
														[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
														Method
														1
												[Var `14(109428):Null<String>]
													[EnumParameter:Null<String>]
														[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
														Method
														0
												[Block:Bool]
													[Var class1(109429):Null<String>] [Local `12(109426):Null<String>:Null<String>]
													[Var method1(109430):String] [Local `13(109425):String:String]
													[Var method2(109431):String] [Local `15(109427):String:String]
													[Var class2(109432):Null<String>] [Local `14(109428):Null<String>:Null<String>]
													[Block:Bool]
														[Binop:Bool]
															[Binop:Bool]
																[Local class1(109429):Null<String>:Null<String>]
																==
																[Local class2(109432):Null<String>:Null<String>]
															&&
															[Binop:Bool]
																[Local method1(109430):String:String]
																==
																[Local method2(109431):String:String]
											[Else:Bool] [Block:Bool] [Const:Bool] false
							[Case:Bool]
								[Const:Int] 4
								[Block:Bool]
									[Var `10(109433):Null<Int>]
										[EnumParameter:Null<Int>]
											[Local item1(109371):Null<haxe.StackItem>:Null<haxe.StackItem>]
											LocalFunction
											0
									[If:Bool]
										[Binop:Bool]
											[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
											==
											[Const:Null<haxe.StackItem>] null
										[Then:Bool] [Block:Bool] [Const:Bool] false
										[Else:Bool] [If:Bool]
											[Binop:Bool]
												[EnumIndex:Int] [Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
												==
												[Const:Int] 4
											[Then:Bool] [Block:Bool]
												[Var `11(109434):Null<Int>]
													[EnumParameter:Null<Int>]
														[Local item2(109372):Null<haxe.StackItem>:Null<haxe.StackItem>]
														LocalFunction
														0
												[Block:Bool]
													[Var v1(109435):Null<Int>] [Local `10(109433):Null<Int>:Null<Int>]
													[Var v2(109436):Null<Int>] [Local `11(109434):Null<Int>:Null<Int>]
													[Block:Bool]
														[Binop:Bool]
															[Local v1(109435):Null<Int>:Null<Int>]
															==
															[Local v2(109436):Null<Int>:Null<Int>]
											[Else:Bool] [Block:Bool] [Const:Bool] false

	static function exceptionToString[Function:(e : haxe.Exception) -> String]
		[Arg:haxe.Exception] [Local e(109493):haxe.Exception]
		[Block:Dynamic]
			[If:Void]
				[Binop:Bool]
					[Call:Null<haxe.Exception>]
						[Field:Void -> Null<haxe.Exception>]
							[Local e(109493):haxe.Exception:haxe.Exception]
							[FInstance:Void -> Null<haxe.Exception>]
								haxe.Exception
								get_previous:Void -> Null<haxe.Exception>
					==
					[Const:Null<haxe.Exception>] null
				[Then:Dynamic] [Block:Dynamic]
					[Return:Dynamic]
						[Binop:String]
							[Binop:String]
								[Const:String] "Exception: "
								+
								[Call:String]
									[Field:Void -> String]
										[Local e(109493):haxe.Exception:haxe.Exception]
										[FInstance:Void -> String]
											haxe.Exception
											get_message:Void -> String
							+
							[Block:String]
								[Var tmp(109494):haxe.CallStack]
									[Call:haxe.CallStack]
										[Field:Void -> haxe.CallStack]
											[Local e(109493):haxe.Exception:haxe.Exception]
											[FInstance:Void -> haxe.CallStack]
												haxe.Exception
												get_stack:Void -> haxe.CallStack
								[If:String]
									[Binop:Bool]
										[Local tmp(109494):haxe.CallStack:haxe.CallStack]
										==
										[Const:haxe.CallStack] null
									[Then:String] [Const:String] "null"
									[Else:String] [Call:String]
										[Field:(stack : haxe.CallStack) -> String]
											[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
											[FStatic:(stack : haxe.CallStack) -> String]
												haxe._CallStack.CallStack_Impl_
												toString:(stack : haxe.CallStack) -> String
										[Local tmp(109494):haxe.CallStack:haxe.CallStack]
			[Var result(109495):String] [Const:String] ""
			[Var e(109496):Null<haxe.Exception>] [Local e(109493):haxe.Exception:haxe.Exception]
			[Var prev(109497):Null<haxe.Exception>] [Const:Null<haxe.Exception>] null
			[While:Void]
				[Binop:Bool]
					[Local e(109496):Null<haxe.Exception>:Null<haxe.Exception>]
					!=
					[Const:Null<haxe.Exception>] null
				[Block:Null<haxe.Exception>]
					[If:Void]
						[Binop:Bool]
							[Local prev(109497):Null<haxe.Exception>:Null<haxe.Exception>]
							==
							[Const:Null<haxe.Exception>] null
						[Then:String] [Block:String]
							[Binop:String]
								[Local result(109495):String:String]
								=
								[Binop:String]
									[Binop:String]
										[Binop:String]
											[Const:String] "Exception: "
											+
											[Call:String]
												[Field:Void -> String]
													[Local e(109496):Null<haxe.Exception>:Null<haxe.Exception>]
													[FInstance:Void -> String]
														haxe.Exception
														get_message:Void -> String
										+
										[Block:String]
											[Var tmp(109498):haxe.CallStack]
												[Call:haxe.CallStack]
													[Field:Void -> haxe.CallStack]
														[Local e(109496):Null<haxe.Exception>:Null<haxe.Exception>]
														[FInstance:Void -> haxe.CallStack]
															haxe.Exception
															get_stack:Void -> haxe.CallStack
											[If:String]
												[Binop:Bool]
													[Local tmp(109498):haxe.CallStack:haxe.CallStack]
													==
													[Const:haxe.CallStack] null
												[Then:String] [Const:String] "null"
												[Else:String] [Call:String]
													[Field:(stack : haxe.CallStack) -> String]
														[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
														[FStatic:(stack : haxe.CallStack) -> String]
															haxe._CallStack.CallStack_Impl_
															toString:(stack : haxe.CallStack) -> String
													[Local tmp(109498):haxe.CallStack:haxe.CallStack]
									+
									[Local result(109495):String:String]
						[Else:String] [Block:String]
							[Var prevStack(109499):haxe.CallStack]
								[Call:haxe.CallStack]
									[Field:(this : Array<haxe.StackItem>, stack : haxe.CallStack) -> haxe.CallStack]
										[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
										[FStatic:(this : Array<haxe.StackItem>, stack : haxe.CallStack) -> haxe.CallStack]
											haxe._CallStack.CallStack_Impl_
											subtract:(this : Array<haxe.StackItem>, stack : haxe.CallStack) -> haxe.CallStack
									[Call:haxe.CallStack]
										[Field:Void -> haxe.CallStack]
											[Local e(109496):Null<haxe.Exception>:Null<haxe.Exception>]
											[FInstance:Void -> haxe.CallStack]
												haxe.Exception
												get_stack:Void -> haxe.CallStack
									[Call:haxe.CallStack]
										[Field:Void -> haxe.CallStack]
											[Local prev(109497):Null<haxe.Exception>:Null<haxe.Exception>]
											[FInstance:Void -> haxe.CallStack]
												haxe.Exception
												get_stack:Void -> haxe.CallStack
							[Binop:String]
								[Local result(109495):String:String]
								=
								[Binop:String]
									[Binop:String]
										[Binop:String]
											[Binop:String]
												[Const:String] "Exception: "
												+
												[Call:String]
													[Field:Void -> String]
														[Local e(109496):Null<haxe.Exception>:Null<haxe.Exception>]
														[FInstance:Void -> String]
															haxe.Exception
															get_message:Void -> String
											+
											[If:String]
												[Binop:Bool]
													[Local prevStack(109499):haxe.CallStack:haxe.CallStack]
													==
													[Const:haxe.CallStack] null
												[Then:String] [Const:String] "null"
												[Else:String] [Call:String]
													[Field:(stack : haxe.CallStack) -> String]
														[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
														[FStatic:(stack : haxe.CallStack) -> String]
															haxe._CallStack.CallStack_Impl_
															toString:(stack : haxe.CallStack) -> String
													[Local prevStack(109499):haxe.CallStack:haxe.CallStack]
										+
										[Const:String] "\n\nNext "
									+
									[Local result(109495):String:String]
					[Binop:Null<haxe.Exception>]
						[Local prev(109497):Null<haxe.Exception>:Null<haxe.Exception>]
						=
						[Local e(109496):Null<haxe.Exception>:Null<haxe.Exception>]
					[Binop:Null<haxe.Exception>]
						[Local e(109496):Null<haxe.Exception>:Null<haxe.Exception>]
						=
						[Call:Null<haxe.Exception>]
							[Field:Void -> Null<haxe.Exception>]
								[Local e(109496):Null<haxe.Exception>:Null<haxe.Exception>]
								[FInstance:Void -> Null<haxe.Exception>]
									haxe.Exception
									get_previous:Void -> Null<haxe.Exception>
			[Return:Dynamic] [Local result(109495):String:String]

	static function itemToString[Function:(b : StringBuf, s : haxe.StackItem) -> Void]
		[Arg:StringBuf] [Local b(109456):StringBuf]
		[Arg:haxe.StackItem] [Local s(109457):haxe.StackItem]
		[Block:Void]
			[Meta:Void]
				:ast(switch (s) {
	case CFunction:
		b.add("a C function");	
	case Module(m):
		b.add("module ");
		b.add(m);	
	case FilePos(s, file, line, col):
		if (s != null) {
			itemToString(b, s);
			b.add(" (");
		};
		b.add(file);
		b.add(" line ");
		b.add(line);
		if (col != null) {
			b.add(" column ");
			b.add(col);
		};
		if (s != null) b.add(")");	
	case Method(cname, meth):
		b.add(cname == null ? "<unknown>" : cname);
		b.add(".");
		b.add(meth);	
	case LocalFunction(n):
		b.add("local function #");
		b.add(n);	
})
				[Switch:Void]
					[Meta:Int]
						:exhaustive
						[EnumIndex:Int] [Local s(109457):haxe.StackItem:haxe.StackItem]
					[Case:Void]
						[Const:Int] 0
						[Block:Void]
							[Block:Void]
								[Call:Void]
									[Field:(x : String) -> Void]
										[Local b(109456):StringBuf:StringBuf]
										[FInstance:(x : String) -> Void]
											StringBuf
											add:(x : add.T) -> Void
									[Const:String] "a C function"
					[Case:Void]
						[Const:Int] 1
						[Block:Void]
							[Var `(109474):String]
								[EnumParameter:String]
									[Local s(109457):haxe.StackItem:haxe.StackItem]
									Module
									0
							[Block:Void]
								[Var m(109475):String] [Local `(109474):String:String]
								[Block:Void]
									[Call:Void]
										[Field:(x : String) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : String) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Const:String] "module "
									[Call:Void]
										[Field:(x : String) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : String) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Local m(109475):String:String]
					[Case:Void]
						[Const:Int] 2
						[Block:Void]
							[Var `4(109476):Null<Int>]
								[EnumParameter:Null<Int>]
									[Local s(109457):haxe.StackItem:haxe.StackItem]
									FilePos
									3
							[Var `3(109477):Int]
								[EnumParameter:Int]
									[Local s(109457):haxe.StackItem:haxe.StackItem]
									FilePos
									2
							[Var `2(109478):String]
								[EnumParameter:String]
									[Local s(109457):haxe.StackItem:haxe.StackItem]
									FilePos
									1
							[Var `1(109479):Null<haxe.StackItem>]
								[EnumParameter:Null<haxe.StackItem>]
									[Local s(109457):haxe.StackItem:haxe.StackItem]
									FilePos
									0
							[Block:Void]
								[Var col(109480):Null<Int>] [Local `4(109476):Null<Int>:Null<Int>]
								[Var line(109481):Int] [Local `3(109477):Int:Int]
								[Var file(109482):String] [Local `2(109478):String:String]
								[Var s(109483):Null<haxe.StackItem>] [Local `1(109479):Null<haxe.StackItem>:Null<haxe.StackItem>]
								[Block:Void]
									[If:Void]
										[Binop:Bool]
											[Local s(109483):Null<haxe.StackItem>:Null<haxe.StackItem>]
											!=
											[Const:Null<haxe.StackItem>] null
										[Then:Void] [Block:Void]
											[Call:Void]
												[Field:(b : StringBuf, s : haxe.StackItem) -> Void]
													[TypeExpr haxe._CallStack.CallStack_Impl_:Abstract<haxe.CallStack>]
													[FStatic:(b : StringBuf, s : haxe.StackItem) -> Void]
														haxe._CallStack.CallStack_Impl_
														itemToString:(b : StringBuf, s : haxe.StackItem) -> Void
												[Local b(109456):StringBuf:StringBuf]
												[Local s(109483):Null<haxe.StackItem>:Null<haxe.StackItem>]
											[Call:Void]
												[Field:(x : String) -> Void]
													[Local b(109456):StringBuf:StringBuf]
													[FInstance:(x : String) -> Void]
														StringBuf
														add:(x : add.T) -> Void
												[Const:String] " ("
									[Call:Void]
										[Field:(x : String) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : String) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Local file(109482):String:String]
									[Call:Void]
										[Field:(x : String) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : String) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Const:String] " line "
									[Call:Void]
										[Field:(x : Int) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : Int) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Local line(109481):Int:Int]
									[If:Void]
										[Binop:Bool]
											[Local col(109480):Null<Int>:Null<Int>]
											!=
											[Const:Null<Int>] null
										[Then:Void] [Block:Void]
											[Call:Void]
												[Field:(x : String) -> Void]
													[Local b(109456):StringBuf:StringBuf]
													[FInstance:(x : String) -> Void]
														StringBuf
														add:(x : add.T) -> Void
												[Const:String] " column "
											[Call:Void]
												[Field:(x : Null<Int>) -> Void]
													[Local b(109456):StringBuf:StringBuf]
													[FInstance:(x : Null<Int>) -> Void]
														StringBuf
														add:(x : add.T) -> Void
												[Local col(109480):Null<Int>:Null<Int>]
									[If:Void]
										[Binop:Bool]
											[Local s(109483):Null<haxe.StackItem>:Null<haxe.StackItem>]
											!=
											[Const:Null<haxe.StackItem>] null
										[Then:Void] [Block:Void]
											[Call:Void]
												[Field:(x : String) -> Void]
													[Local b(109456):StringBuf:StringBuf]
													[FInstance:(x : String) -> Void]
														StringBuf
														add:(x : add.T) -> Void
												[Const:String] ")"
					[Case:Void]
						[Const:Int] 3
						[Block:Void]
							[Var `7(109484):String]
								[EnumParameter:String]
									[Local s(109457):haxe.StackItem:haxe.StackItem]
									Method
									1
							[Var `6(109485):Null<String>]
								[EnumParameter:Null<String>]
									[Local s(109457):haxe.StackItem:haxe.StackItem]
									Method
									0
							[Block:Void]
								[Var meth(109486):String] [Local `7(109484):String:String]
								[Var cname(109487):Null<String>] [Local `6(109485):Null<String>:Null<String>]
								[Block:Void]
									[Call:Void]
										[Field:(x : Null<String>) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : Null<String>) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[If:Null<String>]
											[Binop:Bool]
												[Local cname(109487):Null<String>:Null<String>]
												==
												[Const:Null<String>] null
											[Then:String] [Block:String] [Const:String] "<unknown>"
											[Else:Null<String>] [Block:Null<String>] [Local cname(109487):Null<String>:Null<String>]
									[Call:Void]
										[Field:(x : String) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : String) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Const:String] "."
									[Call:Void]
										[Field:(x : String) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : String) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Local meth(109486):String:String]
					[Case:Void]
						[Const:Int] 4
						[Block:Void]
							[Var `5(109488):Null<Int>]
								[EnumParameter:Null<Int>]
									[Local s(109457):haxe.StackItem:haxe.StackItem]
									LocalFunction
									0
							[Block:Void]
								[Var n(109489):Null<Int>] [Local `5(109488):Null<Int>:Null<Int>]
								[Block:Void]
									[Call:Void]
										[Field:(x : String) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : String) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Const:String] "local function #"
									[Call:Void]
										[Field:(x : Null<Int>) -> Void]
											[Local b(109456):StringBuf:StringBuf]
											[FInstance:(x : Null<Int>) -> Void]
												StringBuf
												add:(x : add.T) -> Void
										[Local n(109489):Null<Int>:Null<Int>]
}