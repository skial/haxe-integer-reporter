class haxe.Int64Helper {

	public static function parseString[Function:(sParam : String) -> haxe.Int64]
		[Arg:String] [Local sParam(111181):String]
		[Block:Dynamic]
			[Var base(111187):haxe.Int64]
				[Block:haxe.Int64]
					[Var x(111185):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Binop:Int]
								[Const:Int] 10
								>>
								[Const:Int] 31
							[Const:Int] 10
					[Var this(111186):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111186):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111185):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111186):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Var current(111193):haxe.Int64]
				[Block:haxe.Int64]
					[Var x(111191):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Binop:Int]
								[Const:Int] 0
								>>
								[Const:Int] 31
							[Const:Int] 0
					[Var this(111192):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111192):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111191):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111192):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Var multiplier(111199):haxe.Int64]
				[Block:haxe.Int64]
					[Var x(111197):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Binop:Int]
								[Const:Int] 1
								>>
								[Const:Int] 31
							[Const:Int] 1
					[Var this(111198):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111198):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111197):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111198):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Var sIsNegative(111200):Bool] [Const:Bool] false
			[Var s(111211):String]
				[Call:String]
					[Field:(s : String) -> String]
						[TypeExpr StringTools:Class<StringTools>]
						[FStatic:(s : String) -> String]
							StringTools
							trim:(s : String) -> String
					[Local sParam(111181):String:String]
			[If:Void]
				[Binop:Bool]
					[Call:String]
						[Field:(index : Int) -> String]
							[Local s(111211):String:String]
							[FInstance:(index : Int) -> String]
								String
								charAt:(index : Int) -> String
						[Const:Int] 0
					==
					[Const:String] "-"
				[Then:String] [Block:String]
					[Binop:Bool]
						[Local sIsNegative(111200):Bool:Bool]
						=
						[Const:Bool] true
					[Binop:String]
						[Local s(111211):String:String]
						=
						[Call:String]
							[Field:(startIndex : Int, ?endIndex : Null<Int>) -> String]
								[Local s(111211):String:String]
								[FInstance:(startIndex : Int, ?endIndex : Null<Int>) -> String]
									String
									substring:(startIndex : Int, ?endIndex : Null<Int>) -> String
							[Const:Int] 1
							[Field:Int]
								[Local s(111211):String:String]
								[FInstance:Int]
									String
									length:Int
			[Var len(111212):Int]
				[Field:Int]
					[Local s(111211):String:String]
					[FInstance:Int]
						String
						length:Int
			[Block:Void]
				[Var `(111419):Int] [Const:Int] 0
				[Var `1(111420):Int] [Local len(111212):Int:Int]
				[While:Void]
					[Binop:Bool]
						[Local `(111419):Int:Int]
						<
						[Local `1(111420):Int:Int]
					[Block:haxe.Int64]
						[Var i(111213):Int]
							[Unop:Int]
								++
								Postfix
								[Local `(111419):Int:Int]
						[Var digitInt(111214):Int]
							[Binop:Int]
								[Call:Null<Int>]
									[Field:(index : Int) -> Null<Int>]
										[Local s(111211):String:String]
										[FInstance:(index : Int) -> Null<Int>]
											String
											charCodeAt:(index : Int) -> Null<Int>
									[Binop:Int]
										[Binop:Int]
											[Local len(111212):Int:Int]
											-
											[Const:Int] 1
										-
										[Local i(111213):Int:Int]
								-
								[Const:Int] 48
						[If:Void]
							[Binop:Bool]
								[Binop:Bool]
									[Local digitInt(111214):Int:Int]
									<
									[Const:Int] 0
								||
								[Binop:Bool]
									[Local digitInt(111214):Int:Int]
									>
									[Const:Int] 9
							[Then:Unknown<30>] [Block:Unknown<30>]
								[Throw:Unknown<30>]
									[Throw:Unknown<30>]
										[Call:Any]
											[Field:(value : Any) -> Any]
												[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
												[FStatic:(value : Any) -> Any]
													haxe.Exception
													thrown:(value : Any) -> Any
											[Const:String] "NumberFormatError"
						[If:Void]
							[Binop:Bool]
								[Local digitInt(111214):Int:Int]
								!=
								[Const:Int] 0
							[Then:Void] [Block:Void]
								[Var digit(111220):haxe.Int64]
									[Block:haxe.Int64]
										[Var x(111218):haxe._Int64.__Int64]
											[New:haxe._Int64.___Int64]
												haxe._Int64.___Int64
												[Binop:Int]
													[Local digitInt(111214):Int:Int]
													>>
													[Const:Int] 31
												[Local digitInt(111214):Int:Int]
										[Var this(111219):haxe._Int64.__Int64]
										[Binop:haxe._Int64.__Int64]
											[Local this(111219):haxe._Int64.__Int64:haxe._Int64.__Int64]
											=
											[Local x(111218):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Cast:haxe.Int64] [Local this(111219):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[If:Void]
									[Local sIsNegative(111200):Bool:Bool]
									[Then:Void] [Block:Void]
										[Binop:haxe.Int64]
											[Local current(111193):haxe.Int64:haxe.Int64]
											=
											[Block:haxe.Int64]
												[Var b(111323):haxe.Int64]
													[Block:haxe.Int64]
														[Var mask(111305):Int] [Const:Int] 65535
														[Var al(111306):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																&
																[Local mask(111305):Int:Int]
														[Var ah(111307):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																>>>
																[Const:Int] 16
														[Var bl(111308):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local digit(111220):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																&
																[Local mask(111305):Int:Int]
														[Var bh(111309):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local digit(111220):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																>>>
																[Const:Int] 16
														[Var p00(111310):haxe.Int32]
															[Binop:haxe.Int32]
																[Local al(111306):haxe.Int32:haxe.Int32]
																*
																[Local bl(111308):haxe.Int32:haxe.Int32]
														[Var p10(111311):haxe.Int32]
															[Binop:haxe.Int32]
																[Local ah(111307):haxe.Int32:haxe.Int32]
																*
																[Local bl(111308):haxe.Int32:haxe.Int32]
														[Var p01(111312):haxe.Int32]
															[Binop:haxe.Int32]
																[Local al(111306):haxe.Int32:haxe.Int32]
																*
																[Local bh(111309):haxe.Int32:haxe.Int32]
														[Var p11(111313):haxe.Int32]
															[Binop:haxe.Int32]
																[Local ah(111307):haxe.Int32:haxe.Int32]
																*
																[Local bh(111309):haxe.Int32:haxe.Int32]
														[Var low(111314):haxe.Int32] [Local p00(111310):haxe.Int32:haxe.Int32]
														[Var high(111315):haxe.Int32]
															[Cast:haxe.Int32]
																[Binop:Int]
																	[Cast:Int]
																		[Cast:haxe.Int32]
																			[Binop:Int]
																				[Cast:Int] [Local p11(111313):haxe.Int32:haxe.Int32]
																				+
																				[Parenthesis:Int]
																					[Cast:Int]
																						[Binop:haxe.Int32]
																							[Local p01(111312):haxe.Int32:haxe.Int32]
																							>>>
																							[Const:Int] 16
																	+
																	[Parenthesis:Int]
																		[Cast:Int]
																			[Binop:haxe.Int32]
																				[Local p10(111311):haxe.Int32:haxe.Int32]
																				>>>
																				[Const:Int] 16
														[Binop:haxe.Int32]
															[Local p01(111312):haxe.Int32:haxe.Int32]
															=
															[Binop:haxe.Int32]
																[Local p01(111312):haxe.Int32:haxe.Int32]
																<<
																[Const:Int] 16
														[Binop:haxe.Int32]
															[Local low(111314):haxe.Int32:haxe.Int32]
															=
															[Cast:haxe.Int32]
																[Binop:Int]
																	[Cast:Int] [Local low(111314):haxe.Int32:haxe.Int32]
																	+
																	[Cast:Int] [Local p01(111312):haxe.Int32:haxe.Int32]
														[If:Void]
															[Parenthesis:Bool]
																[Binop:Bool]
																	[Call:Int]
																		[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
																			[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
																			[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
																				haxe._Int32.Int32_Impl_
																				ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
																		[Local low(111314):haxe.Int32:haxe.Int32]
																		[Local p01(111312):haxe.Int32:haxe.Int32]
																	<
																	[Const:Int] 0
															[Then:haxe.Int32] [Cast:haxe.Int32]
																[Block:Int]
																	[Var ret(111316):Int]
																		[Unop:Int]
																			++
																			Postfix
																			[Local high(111315):haxe.Int32:haxe.Int32]
																	[Binop:Int]
																		[Local high(111315):haxe.Int32:haxe.Int32]
																		=
																		[Cast:Int] [Local high(111315):haxe.Int32:haxe.Int32]
																	[Local ret(111316):Int:Int]
														[Binop:haxe.Int32]
															[Local p10(111311):haxe.Int32:haxe.Int32]
															=
															[Binop:haxe.Int32]
																[Local p10(111311):haxe.Int32:haxe.Int32]
																<<
																[Const:Int] 16
														[Binop:haxe.Int32]
															[Local low(111314):haxe.Int32:haxe.Int32]
															=
															[Cast:haxe.Int32]
																[Binop:Int]
																	[Cast:Int] [Local low(111314):haxe.Int32:haxe.Int32]
																	+
																	[Cast:Int] [Local p10(111311):haxe.Int32:haxe.Int32]
														[If:Void]
															[Parenthesis:Bool]
																[Binop:Bool]
																	[Call:Int]
																		[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
																			[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
																			[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
																				haxe._Int32.Int32_Impl_
																				ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
																		[Local low(111314):haxe.Int32:haxe.Int32]
																		[Local p10(111311):haxe.Int32:haxe.Int32]
																	<
																	[Const:Int] 0
															[Then:haxe.Int32] [Cast:haxe.Int32]
																[Block:Int]
																	[Var ret(111317):Int]
																		[Unop:Int]
																			++
																			Postfix
																			[Local high(111315):haxe.Int32:haxe.Int32]
																	[Binop:Int]
																		[Local high(111315):haxe.Int32:haxe.Int32]
																		=
																		[Cast:Int] [Local high(111315):haxe.Int32:haxe.Int32]
																	[Local ret(111317):Int:Int]
														[Binop:haxe.Int32]
															[Local high(111315):haxe.Int32:haxe.Int32]
															=
															[Cast:haxe.Int32]
																[Binop:Int]
																	[Cast:Int] [Local high(111315):haxe.Int32:haxe.Int32]
																	+
																	[Parenthesis:Int]
																		[Cast:Int]
																			[Cast:haxe.Int32]
																				[Binop:Int]
																					[Cast:Int]
																						[Binop:haxe.Int32]
																							[Field:haxe.Int32]
																								[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																								[FInstance:haxe.Int32]
																									haxe._Int64.___Int64
																									low:haxe.Int32
																							*
																							[Field:haxe.Int32]
																								[Cast:haxe._Int64.__Int64] [Local digit(111220):haxe.Int64:haxe.Int64]
																								[FInstance:haxe.Int32]
																									haxe._Int64.___Int64
																									high:haxe.Int32
																					+
																					[Cast:Int]
																						[Binop:haxe.Int32]
																							[Field:haxe.Int32]
																								[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																								[FInstance:haxe.Int32]
																									haxe._Int64.___Int64
																									high:haxe.Int32
																							*
																							[Field:haxe.Int32]
																								[Cast:haxe._Int64.__Int64] [Local digit(111220):haxe.Int64:haxe.Int64]
																								[FInstance:haxe.Int32]
																									haxe._Int64.___Int64
																									low:haxe.Int32
														[Block:haxe.Int64]
															[Var x(111318):haxe._Int64.__Int64]
																[New:haxe._Int64.___Int64]
																	haxe._Int64.___Int64
																	[Local high(111315):haxe.Int32:haxe.Int32]
																	[Local low(111314):haxe.Int32:haxe.Int32]
															[Var this(111319):haxe._Int64.__Int64]
															[Binop:haxe._Int64.__Int64]
																[Local this(111319):haxe._Int64.__Int64:haxe._Int64.__Int64]
																=
																[Local x(111318):haxe._Int64.__Int64:haxe._Int64.__Int64]
															[Cast:haxe.Int64] [Local this(111319):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Var high(111324):haxe.Int32]
													[Cast:haxe.Int32]
														[Parenthesis:Int]
															[Binop:Int]
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local current(111193):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			high:haxe.Int32
																-
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local b(111323):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			high:haxe.Int32
												[Var low(111325):haxe.Int32]
													[Cast:haxe.Int32]
														[Parenthesis:Int]
															[Binop:Int]
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local current(111193):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			low:haxe.Int32
																-
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local b(111323):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			low:haxe.Int32
												[If:Void]
													[Binop:Bool]
														[Call:Int]
															[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
																[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
																[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
																	haxe._Int32.Int32_Impl_
																	ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local current(111193):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local b(111323):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
														<
														[Const:Int] 0
													[Then:haxe.Int32] [Block:haxe.Int32]
														[Cast:haxe.Int32]
															[Block:Int]
																[Var ret(111326):Int]
																	[Unop:Int]
																		--
																		Postfix
																		[Local high(111324):haxe.Int32:haxe.Int32]
																[Binop:Int]
																	[Local high(111324):haxe.Int32:haxe.Int32]
																	=
																	[Parenthesis:Int] [Cast:Int] [Local high(111324):haxe.Int32:haxe.Int32]
																[Local ret(111326):Int:Int]
												[Block:haxe.Int64]
													[Var x(111327):haxe._Int64.__Int64]
														[New:haxe._Int64.___Int64]
															haxe._Int64.___Int64
															[Local high(111324):haxe.Int32:haxe.Int32]
															[Local low(111325):haxe.Int32:haxe.Int32]
													[Var this(111328):haxe._Int64.__Int64]
													[Binop:haxe._Int64.__Int64]
														[Local this(111328):haxe._Int64.__Int64:haxe._Int64.__Int64]
														=
														[Local x(111327):haxe._Int64.__Int64:haxe._Int64.__Int64]
													[Cast:haxe.Int64] [Local this(111328):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[If:Void]
											[Unop:Bool]
												!
												Prefix
												[Cast:Bool]
													[Binop:Bool]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local current(111193):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
														<
														[Const:Int] 0
											[Then:Unknown<32>] [Block:Unknown<32>]
												[Throw:Unknown<32>]
													[Throw:Unknown<32>]
														[Call:Any]
															[Field:(value : Any) -> Any]
																[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
																[FStatic:(value : Any) -> Any]
																	haxe.Exception
																	thrown:(value : Any) -> Any
															[Const:String] "NumberFormatError: Underflow"
									[Else:Void] [Block:Void]
										[Binop:haxe.Int64]
											[Local current(111193):haxe.Int64:haxe.Int64]
											=
											[Block:haxe.Int64]
												[Var b(111391):haxe.Int64]
													[Block:haxe.Int64]
														[Var mask(111373):Int] [Const:Int] 65535
														[Var al(111374):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																&
																[Local mask(111373):Int:Int]
														[Var ah(111375):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																>>>
																[Const:Int] 16
														[Var bl(111376):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local digit(111220):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																&
																[Local mask(111373):Int:Int]
														[Var bh(111377):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local digit(111220):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																>>>
																[Const:Int] 16
														[Var p00(111378):haxe.Int32]
															[Binop:haxe.Int32]
																[Local al(111374):haxe.Int32:haxe.Int32]
																*
																[Local bl(111376):haxe.Int32:haxe.Int32]
														[Var p10(111379):haxe.Int32]
															[Binop:haxe.Int32]
																[Local ah(111375):haxe.Int32:haxe.Int32]
																*
																[Local bl(111376):haxe.Int32:haxe.Int32]
														[Var p01(111380):haxe.Int32]
															[Binop:haxe.Int32]
																[Local al(111374):haxe.Int32:haxe.Int32]
																*
																[Local bh(111377):haxe.Int32:haxe.Int32]
														[Var p11(111381):haxe.Int32]
															[Binop:haxe.Int32]
																[Local ah(111375):haxe.Int32:haxe.Int32]
																*
																[Local bh(111377):haxe.Int32:haxe.Int32]
														[Var low(111382):haxe.Int32] [Local p00(111378):haxe.Int32:haxe.Int32]
														[Var high(111383):haxe.Int32]
															[Cast:haxe.Int32]
																[Binop:Int]
																	[Cast:Int]
																		[Cast:haxe.Int32]
																			[Binop:Int]
																				[Cast:Int] [Local p11(111381):haxe.Int32:haxe.Int32]
																				+
																				[Parenthesis:Int]
																					[Cast:Int]
																						[Binop:haxe.Int32]
																							[Local p01(111380):haxe.Int32:haxe.Int32]
																							>>>
																							[Const:Int] 16
																	+
																	[Parenthesis:Int]
																		[Cast:Int]
																			[Binop:haxe.Int32]
																				[Local p10(111379):haxe.Int32:haxe.Int32]
																				>>>
																				[Const:Int] 16
														[Binop:haxe.Int32]
															[Local p01(111380):haxe.Int32:haxe.Int32]
															=
															[Binop:haxe.Int32]
																[Local p01(111380):haxe.Int32:haxe.Int32]
																<<
																[Const:Int] 16
														[Binop:haxe.Int32]
															[Local low(111382):haxe.Int32:haxe.Int32]
															=
															[Cast:haxe.Int32]
																[Binop:Int]
																	[Cast:Int] [Local low(111382):haxe.Int32:haxe.Int32]
																	+
																	[Cast:Int] [Local p01(111380):haxe.Int32:haxe.Int32]
														[If:Void]
															[Parenthesis:Bool]
																[Binop:Bool]
																	[Call:Int]
																		[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
																			[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
																			[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
																				haxe._Int32.Int32_Impl_
																				ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
																		[Local low(111382):haxe.Int32:haxe.Int32]
																		[Local p01(111380):haxe.Int32:haxe.Int32]
																	<
																	[Const:Int] 0
															[Then:haxe.Int32] [Cast:haxe.Int32]
																[Block:Int]
																	[Var ret(111384):Int]
																		[Unop:Int]
																			++
																			Postfix
																			[Local high(111383):haxe.Int32:haxe.Int32]
																	[Binop:Int]
																		[Local high(111383):haxe.Int32:haxe.Int32]
																		=
																		[Cast:Int] [Local high(111383):haxe.Int32:haxe.Int32]
																	[Local ret(111384):Int:Int]
														[Binop:haxe.Int32]
															[Local p10(111379):haxe.Int32:haxe.Int32]
															=
															[Binop:haxe.Int32]
																[Local p10(111379):haxe.Int32:haxe.Int32]
																<<
																[Const:Int] 16
														[Binop:haxe.Int32]
															[Local low(111382):haxe.Int32:haxe.Int32]
															=
															[Cast:haxe.Int32]
																[Binop:Int]
																	[Cast:Int] [Local low(111382):haxe.Int32:haxe.Int32]
																	+
																	[Cast:Int] [Local p10(111379):haxe.Int32:haxe.Int32]
														[If:Void]
															[Parenthesis:Bool]
																[Binop:Bool]
																	[Call:Int]
																		[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
																			[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
																			[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
																				haxe._Int32.Int32_Impl_
																				ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
																		[Local low(111382):haxe.Int32:haxe.Int32]
																		[Local p10(111379):haxe.Int32:haxe.Int32]
																	<
																	[Const:Int] 0
															[Then:haxe.Int32] [Cast:haxe.Int32]
																[Block:Int]
																	[Var ret(111385):Int]
																		[Unop:Int]
																			++
																			Postfix
																			[Local high(111383):haxe.Int32:haxe.Int32]
																	[Binop:Int]
																		[Local high(111383):haxe.Int32:haxe.Int32]
																		=
																		[Cast:Int] [Local high(111383):haxe.Int32:haxe.Int32]
																	[Local ret(111385):Int:Int]
														[Binop:haxe.Int32]
															[Local high(111383):haxe.Int32:haxe.Int32]
															=
															[Cast:haxe.Int32]
																[Binop:Int]
																	[Cast:Int] [Local high(111383):haxe.Int32:haxe.Int32]
																	+
																	[Parenthesis:Int]
																		[Cast:Int]
																			[Cast:haxe.Int32]
																				[Binop:Int]
																					[Cast:Int]
																						[Binop:haxe.Int32]
																							[Field:haxe.Int32]
																								[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																								[FInstance:haxe.Int32]
																									haxe._Int64.___Int64
																									low:haxe.Int32
																							*
																							[Field:haxe.Int32]
																								[Cast:haxe._Int64.__Int64] [Local digit(111220):haxe.Int64:haxe.Int64]
																								[FInstance:haxe.Int32]
																									haxe._Int64.___Int64
																									high:haxe.Int32
																					+
																					[Cast:Int]
																						[Binop:haxe.Int32]
																							[Field:haxe.Int32]
																								[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																								[FInstance:haxe.Int32]
																									haxe._Int64.___Int64
																									high:haxe.Int32
																							*
																							[Field:haxe.Int32]
																								[Cast:haxe._Int64.__Int64] [Local digit(111220):haxe.Int64:haxe.Int64]
																								[FInstance:haxe.Int32]
																									haxe._Int64.___Int64
																									low:haxe.Int32
														[Block:haxe.Int64]
															[Var x(111386):haxe._Int64.__Int64]
																[New:haxe._Int64.___Int64]
																	haxe._Int64.___Int64
																	[Local high(111383):haxe.Int32:haxe.Int32]
																	[Local low(111382):haxe.Int32:haxe.Int32]
															[Var this(111387):haxe._Int64.__Int64]
															[Binop:haxe._Int64.__Int64]
																[Local this(111387):haxe._Int64.__Int64:haxe._Int64.__Int64]
																=
																[Local x(111386):haxe._Int64.__Int64:haxe._Int64.__Int64]
															[Cast:haxe.Int64] [Local this(111387):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Var high(111392):haxe.Int32]
													[Cast:haxe.Int32]
														[Parenthesis:Int]
															[Binop:Int]
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local current(111193):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			high:haxe.Int32
																+
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local b(111391):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			high:haxe.Int32
												[Var low(111393):haxe.Int32]
													[Cast:haxe.Int32]
														[Parenthesis:Int]
															[Binop:Int]
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local current(111193):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			low:haxe.Int32
																+
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local b(111391):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			low:haxe.Int32
												[If:Void]
													[Binop:Bool]
														[Call:Int]
															[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
																[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
																[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
																	haxe._Int32.Int32_Impl_
																	ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
															[Local low(111393):haxe.Int32:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local current(111193):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
														<
														[Const:Int] 0
													[Then:haxe.Int32] [Block:haxe.Int32]
														[Cast:haxe.Int32]
															[Block:Int]
																[Var ret(111394):Int]
																	[Unop:Int]
																		++
																		Postfix
																		[Local high(111392):haxe.Int32:haxe.Int32]
																[Binop:Int]
																	[Local high(111392):haxe.Int32:haxe.Int32]
																	=
																	[Parenthesis:Int] [Cast:Int] [Local high(111392):haxe.Int32:haxe.Int32]
																[Local ret(111394):Int:Int]
												[Block:haxe.Int64]
													[Var x(111395):haxe._Int64.__Int64]
														[New:haxe._Int64.___Int64]
															haxe._Int64.___Int64
															[Local high(111392):haxe.Int32:haxe.Int32]
															[Local low(111393):haxe.Int32:haxe.Int32]
													[Var this(111396):haxe._Int64.__Int64]
													[Binop:haxe._Int64.__Int64]
														[Local this(111396):haxe._Int64.__Int64:haxe._Int64.__Int64]
														=
														[Local x(111395):haxe._Int64.__Int64:haxe._Int64.__Int64]
													[Cast:haxe.Int64] [Local this(111396):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[If:Void]
											[Cast:Bool]
												[Binop:Bool]
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local current(111193):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															high:haxe.Int32
													<
													[Const:Int] 0
											[Then:Unknown<31>] [Block:Unknown<31>]
												[Throw:Unknown<31>]
													[Throw:Unknown<31>]
														[Call:Any]
															[Field:(value : Any) -> Any]
																[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
																[FStatic:(value : Any) -> Any]
																	haxe.Exception
																	thrown:(value : Any) -> Any
															[Const:String] "NumberFormatError: Overflow"
						[Binop:haxe.Int64]
							[Local multiplier(111199):haxe.Int64:haxe.Int64]
							=
							[Block:haxe.Int64]
								[Var mask(111404):Int] [Const:Int] 65535
								[Var al(111405):haxe.Int32]
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											&
											[Local mask(111404):Int:Int]
								[Var ah(111406):haxe.Int32]
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											>>>
											[Const:Int] 16
								[Var bl(111407):haxe.Int32]
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local base(111187):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											&
											[Local mask(111404):Int:Int]
								[Var bh(111408):haxe.Int32]
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local base(111187):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											>>>
											[Const:Int] 16
								[Var p00(111409):haxe.Int32]
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Local al(111405):haxe.Int32:haxe.Int32]
											*
											[Local bl(111407):haxe.Int32:haxe.Int32]
								[Var p10(111410):haxe.Int32]
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Local ah(111406):haxe.Int32:haxe.Int32]
											*
											[Local bl(111407):haxe.Int32:haxe.Int32]
								[Var p01(111411):haxe.Int32]
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Local al(111405):haxe.Int32:haxe.Int32]
											*
											[Local bh(111408):haxe.Int32:haxe.Int32]
								[Var p11(111412):haxe.Int32]
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Local ah(111406):haxe.Int32:haxe.Int32]
											*
											[Local bh(111408):haxe.Int32:haxe.Int32]
								[Var low(111413):haxe.Int32] [Local p00(111409):haxe.Int32:haxe.Int32]
								[Var high(111414):haxe.Int32]
									[Cast:haxe.Int32]
										[Parenthesis:Int]
											[Binop:Int]
												[Cast:Int]
													[Cast:haxe.Int32]
														[Binop:Int]
															[Cast:Int] [Local p11(111412):haxe.Int32:haxe.Int32]
															+
															[Parenthesis:Int]
																[Cast:Int]
																	[Binop:haxe.Int32]
																		[Local p01(111411):haxe.Int32:haxe.Int32]
																		>>>
																		[Const:Int] 16
												+
												[Cast:Int]
													[Binop:haxe.Int32]
														[Local p10(111410):haxe.Int32:haxe.Int32]
														>>>
														[Const:Int] 16
								[Binop:haxe.Int32]
									[Local p01(111411):haxe.Int32:haxe.Int32]
									=
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Local p01(111411):haxe.Int32:haxe.Int32]
											<<
											[Const:Int] 16
								[Binop:haxe.Int32]
									[Local low(111413):haxe.Int32:haxe.Int32]
									=
									[Cast:haxe.Int32]
										[Parenthesis:Int]
											[Binop:Int]
												[Cast:Int] [Local low(111413):haxe.Int32:haxe.Int32]
												+
												[Cast:Int] [Local p01(111411):haxe.Int32:haxe.Int32]
								[If:Void]
									[Binop:Bool]
										[Call:Int]
											[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
												[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
												[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
													haxe._Int32.Int32_Impl_
													ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
											[Local low(111413):haxe.Int32:haxe.Int32]
											[Local p01(111411):haxe.Int32:haxe.Int32]
										<
										[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32]
										[Cast:haxe.Int32]
											[Block:Int]
												[Var ret(111415):Int]
													[Unop:Int]
														++
														Postfix
														[Local high(111414):haxe.Int32:haxe.Int32]
												[Binop:Int]
													[Local high(111414):haxe.Int32:haxe.Int32]
													=
													[Parenthesis:Int] [Cast:Int] [Local high(111414):haxe.Int32:haxe.Int32]
												[Local ret(111415):Int:Int]
								[Binop:haxe.Int32]
									[Local p10(111410):haxe.Int32:haxe.Int32]
									=
									[Cast:haxe.Int32]
										[Binop:haxe.Int32]
											[Local p10(111410):haxe.Int32:haxe.Int32]
											<<
											[Const:Int] 16
								[Binop:haxe.Int32]
									[Local low(111413):haxe.Int32:haxe.Int32]
									=
									[Cast:haxe.Int32]
										[Parenthesis:Int]
											[Binop:Int]
												[Cast:Int] [Local low(111413):haxe.Int32:haxe.Int32]
												+
												[Cast:Int] [Local p10(111410):haxe.Int32:haxe.Int32]
								[If:Void]
									[Binop:Bool]
										[Call:Int]
											[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
												[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
												[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
													haxe._Int32.Int32_Impl_
													ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
											[Local low(111413):haxe.Int32:haxe.Int32]
											[Local p10(111410):haxe.Int32:haxe.Int32]
										<
										[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32]
										[Cast:haxe.Int32]
											[Block:Int]
												[Var ret(111416):Int]
													[Unop:Int]
														++
														Postfix
														[Local high(111414):haxe.Int32:haxe.Int32]
												[Binop:Int]
													[Local high(111414):haxe.Int32:haxe.Int32]
													=
													[Parenthesis:Int] [Cast:Int] [Local high(111414):haxe.Int32:haxe.Int32]
												[Local ret(111416):Int:Int]
								[Binop:haxe.Int32]
									[Local high(111414):haxe.Int32:haxe.Int32]
									=
									[Cast:haxe.Int32]
										[Parenthesis:Int]
											[Binop:Int]
												[Cast:Int] [Local high(111414):haxe.Int32:haxe.Int32]
												+
												[Cast:Int]
													[Cast:haxe.Int32]
														[Binop:Int]
															[Cast:Int]
																[Binop:haxe.Int32]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			low:haxe.Int32
																	*
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local base(111187):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			high:haxe.Int32
															+
															[Cast:Int]
																[Binop:haxe.Int32]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local multiplier(111199):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			high:haxe.Int32
																	*
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local base(111187):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			low:haxe.Int32
								[Block:haxe.Int64]
									[Var x(111417):haxe._Int64.__Int64]
										[New:haxe._Int64.___Int64]
											haxe._Int64.___Int64
											[Local high(111414):haxe.Int32:haxe.Int32]
											[Local low(111413):haxe.Int32:haxe.Int32]
									[Var this(111418):haxe._Int64.__Int64]
									[Binop:haxe._Int64.__Int64]
										[Local this(111418):haxe._Int64.__Int64:haxe._Int64.__Int64]
										=
										[Local x(111417):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Cast:haxe.Int64] [Local this(111418):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Return:Dynamic] [Local current(111193):haxe.Int64:haxe.Int64]

	public static function fromFloat[Function:(f : Float) -> haxe.Int64]
		[Arg:Float] [Local f(111421):Float]
		[Block:Dynamic]
			[If:Void]
				[Binop:Bool]
					[Call:Bool]
						[Field:(f : Float) -> Bool]
							[TypeExpr Math:Class<Math>]
							[FStatic:(f : Float) -> Bool]
								Math
								isNaN:(f : Float) -> Bool
						[Local f(111421):Float:Float]
					||
					[Unop:Bool]
						!
						Prefix
						[Call:Bool]
							[Field:(f : Float) -> Bool]
								[TypeExpr Math:Class<Math>]
								[FStatic:(f : Float) -> Bool]
									Math
									isFinite:(f : Float) -> Bool
							[Local f(111421):Float:Float]
				[Then:Unknown<33>] [Block:Unknown<33>]
					[Throw:Unknown<33>]
						[Throw:Unknown<33>]
							[Call:Any]
								[Field:(value : Any) -> Any]
									[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
									[FStatic:(value : Any) -> Any]
										haxe.Exception
										thrown:(value : Any) -> Any
								[Const:String] "Number is NaN or Infinite"
			[Var noFractions(111422):Float]
				[Binop:Float]
					[Local f(111421):Float:Float]
					-
					[Parenthesis:Float]
						[Binop:Float]
							[Local f(111421):Float:Float]
							%
							[Const:Int] 1
			[If:Void]
				[Binop:Bool]
					[Local noFractions(111422):Float:Float]
					>
					[Const:Float] 9007199254740991
				[Then:Unknown<34>] [Block:Unknown<34>]
					[Throw:Unknown<34>]
						[Throw:Unknown<34>]
							[Call:Any]
								[Field:(value : Any) -> Any]
									[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
									[FStatic:(value : Any) -> Any]
										haxe.Exception
										thrown:(value : Any) -> Any
								[Const:String] "Conversion overflow"
			[If:Void]
				[Binop:Bool]
					[Local noFractions(111422):Float:Float]
					<
					[Const:Float] -9007199254740991
				[Then:Unknown<35>] [Block:Unknown<35>]
					[Throw:Unknown<35>]
						[Throw:Unknown<35>]
							[Call:Any]
								[Field:(value : Any) -> Any]
									[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
									[FStatic:(value : Any) -> Any]
										haxe.Exception
										thrown:(value : Any) -> Any
								[Const:String] "Conversion underflow"
			[Var result(111428):haxe.Int64]
				[Block:haxe.Int64]
					[Var x(111426):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Binop:Int]
								[Const:Int] 0
								>>
								[Const:Int] 31
							[Const:Int] 0
					[Var this(111427):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111427):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111426):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111427):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Var neg(111429):Bool]
				[Binop:Bool]
					[Local noFractions(111422):Float:Float]
					<
					[Const:Int] 0
			[Var rest(111430):Float]
				[If:Float]
					[Local neg(111429):Bool:Bool]
					[Then:Float] [Block:Float]
						[Unop:Float]
							-
							Prefix
							[Local noFractions(111422):Float:Float]
					[Else:Float] [Block:Float] [Local noFractions(111422):Float:Float]
			[Var i(111431):Int] [Const:Int] 0
			[While:Void]
				[Binop:Bool]
					[Local rest(111430):Float:Float]
					>=
					[Const:Int] 1
				[Block:Int]
					[Var curr(111432):Float]
						[Binop:Float]
							[Local rest(111430):Float:Float]
							%
							[Const:Int] 2
					[Binop:Float]
						[Local rest(111430):Float:Float]
						=
						[Binop:Float]
							[Local rest(111430):Float:Float]
							/
							[Const:Int] 2
					[If:Void]
						[Binop:Bool]
							[Local curr(111432):Float:Float]
							>=
							[Const:Int] 1
						[Then:haxe.Int64] [Block:haxe.Int64]
							[Binop:haxe.Int64]
								[Local result(111428):haxe.Int64:haxe.Int64]
								=
								[Block:haxe.Int64]
									[Var b(111456):haxe.Int64]
										[Block:haxe.Int64]
											[Var a(111440):haxe.Int64]
												[Block:haxe.Int64]
													[Var x(111436):haxe._Int64.__Int64]
														[New:haxe._Int64.___Int64]
															haxe._Int64.___Int64
															[Const:Int] 0
															[Const:Int] 1
													[Var this(111437):haxe._Int64.__Int64]
													[Binop:haxe._Int64.__Int64]
														[Local this(111437):haxe._Int64.__Int64:haxe._Int64.__Int64]
														=
														[Local x(111436):haxe._Int64.__Int64:haxe._Int64.__Int64]
													[Cast:haxe.Int64] [Local this(111437):haxe._Int64.__Int64:haxe._Int64.__Int64]
											[Var b(111441):Int] [Local i(111431):Int:Int]
											[Binop:Int]
												[Local b(111441):Int:Int]
												&=
												[Const:Int] 63
											[If:haxe.Int64]
												[Parenthesis:Bool]
													[Binop:Bool]
														[Local b(111441):Int:Int]
														==
														[Const:Int] 0
												[Then:haxe.Int64] [Block:haxe.Int64]
													[Var high(111442):haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local a(111440):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
													[Var low(111443):haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local a(111440):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
													[Var x(111444):haxe._Int64.__Int64]
														[New:haxe._Int64.___Int64]
															haxe._Int64.___Int64
															[Local high(111442):haxe.Int32:haxe.Int32]
															[Local low(111443):haxe.Int32:haxe.Int32]
													[Var this(111445):haxe._Int64.__Int64]
													[Binop:haxe._Int64.__Int64]
														[Local this(111445):haxe._Int64.__Int64:haxe._Int64.__Int64]
														=
														[Local x(111444):haxe._Int64.__Int64:haxe._Int64.__Int64]
													[Cast:haxe.Int64] [Local this(111445):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Else:haxe.Int64] [If:haxe.Int64]
													[Parenthesis:Bool]
														[Binop:Bool]
															[Local b(111441):Int:Int]
															<
															[Const:Int] 32
													[Then:haxe.Int64] [Block:haxe.Int64]
														[Var high(111446):haxe.Int32]
															[Binop:haxe.Int32]
																[Binop:haxe.Int32]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local a(111440):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			high:haxe.Int32
																	<<
																	[Local b(111441):Int:Int]
																|
																[Binop:haxe.Int32]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local a(111440):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			low:haxe.Int32
																	>>>
																	[Binop:Int]
																		[Const:Int] 32
																		-
																		[Local b(111441):Int:Int]
														[Var low(111447):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local a(111440):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																<<
																[Local b(111441):Int:Int]
														[Var x(111448):haxe._Int64.__Int64]
															[New:haxe._Int64.___Int64]
																haxe._Int64.___Int64
																[Local high(111446):haxe.Int32:haxe.Int32]
																[Local low(111447):haxe.Int32:haxe.Int32]
														[Var this(111449):haxe._Int64.__Int64]
														[Binop:haxe._Int64.__Int64]
															[Local this(111449):haxe._Int64.__Int64:haxe._Int64.__Int64]
															=
															[Local x(111448):haxe._Int64.__Int64:haxe._Int64.__Int64]
														[Cast:haxe.Int64] [Local this(111449):haxe._Int64.__Int64:haxe._Int64.__Int64]
													[Else:haxe.Int64] [Block:haxe.Int64]
														[Var high(111450):haxe.Int32]
															[Binop:haxe.Int32]
																[Field:haxe.Int32]
																	[Cast:haxe._Int64.__Int64] [Local a(111440):haxe.Int64:haxe.Int64]
																	[FInstance:haxe.Int32]
																		haxe._Int64.___Int64
																		low:haxe.Int32
																<<
																[Binop:Int]
																	[Local b(111441):Int:Int]
																	-
																	[Const:Int] 32
														[Var x(111451):haxe._Int64.__Int64]
															[New:haxe._Int64.___Int64]
																haxe._Int64.___Int64
																[Local high(111450):haxe.Int32:haxe.Int32]
																[Const:Int] 0
														[Var this(111452):haxe._Int64.__Int64]
														[Binop:haxe._Int64.__Int64]
															[Local this(111452):haxe._Int64.__Int64:haxe._Int64.__Int64]
															=
															[Local x(111451):haxe._Int64.__Int64:haxe._Int64.__Int64]
														[Cast:haxe.Int64] [Local this(111452):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Var high(111457):haxe.Int32]
										[Cast:haxe.Int32]
											[Parenthesis:Int]
												[Binop:Int]
													[Cast:Int]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local result(111428):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
													+
													[Cast:Int]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local b(111456):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
									[Var low(111458):haxe.Int32]
										[Cast:haxe.Int32]
											[Parenthesis:Int]
												[Binop:Int]
													[Cast:Int]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local result(111428):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
													+
													[Cast:Int]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local b(111456):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
									[If:Void]
										[Binop:Bool]
											[Call:Int]
												[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
													[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
													[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
														haxe._Int32.Int32_Impl_
														ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
												[Local low(111458):haxe.Int32:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local result(111428):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														low:haxe.Int32
											<
											[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32]
											[Cast:haxe.Int32]
												[Block:Int]
													[Var ret(111459):Int]
														[Unop:Int]
															++
															Postfix
															[Local high(111457):haxe.Int32:haxe.Int32]
													[Binop:Int]
														[Local high(111457):haxe.Int32:haxe.Int32]
														=
														[Parenthesis:Int] [Cast:Int] [Local high(111457):haxe.Int32:haxe.Int32]
													[Local ret(111459):Int:Int]
									[Block:haxe.Int64]
										[Var x(111460):haxe._Int64.__Int64]
											[New:haxe._Int64.___Int64]
												haxe._Int64.___Int64
												[Local high(111457):haxe.Int32:haxe.Int32]
												[Local low(111458):haxe.Int32:haxe.Int32]
										[Var this(111461):haxe._Int64.__Int64]
										[Binop:haxe._Int64.__Int64]
											[Local this(111461):haxe._Int64.__Int64:haxe._Int64.__Int64]
											=
											[Local x(111460):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Cast:haxe.Int64] [Local this(111461):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Unop:Int]
						++
						Postfix
						[Local i(111431):Int:Int]
			[If:Void]
				[Local neg(111429):Bool:Bool]
				[Then:haxe.Int64] [Block:haxe.Int64]
					[Binop:haxe.Int64]
						[Local result(111428):haxe.Int64:haxe.Int64]
						=
						[Block:haxe.Int64]
							[Var high(111465):haxe.Int32]
								[Unop:haxe.Int32]
									~
									Prefix
									[Field:Int]
										[Cast:haxe._Int64.__Int64] [Local result(111428):haxe.Int64:haxe.Int64]
										[FInstance:Int]
											haxe._Int64.___Int64
											high:haxe.Int32
							[Var low(111466):haxe.Int32]
								[Cast:haxe.Int32]
									[Parenthesis:Int]
										[Binop:Int]
											[Unop:Int]
												~
												Prefix
												[Cast:Int]
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local result(111428):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															low:haxe.Int32
											+
											[Const:Int] 1
							[If:Void]
								[Cast:Bool]
									[Binop:Bool]
										[Local low(111466):haxe.Int32:haxe.Int32]
										==
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32]
									[Cast:haxe.Int32]
										[Block:Int]
											[Var ret(111467):Int]
												[Unop:Int]
													++
													Postfix
													[Local high(111465):haxe.Int32:haxe.Int32]
											[Binop:Int]
												[Local high(111465):haxe.Int32:haxe.Int32]
												=
												[Parenthesis:Int] [Cast:Int] [Local high(111465):haxe.Int32:haxe.Int32]
											[Local ret(111467):Int:Int]
							[Block:haxe.Int64]
								[Var x(111468):haxe._Int64.__Int64]
									[New:haxe._Int64.___Int64]
										haxe._Int64.___Int64
										[Local high(111465):haxe.Int32:haxe.Int32]
										[Local low(111466):haxe.Int32:haxe.Int32]
								[Var this(111469):haxe._Int64.__Int64]
								[Binop:haxe._Int64.__Int64]
									[Local this(111469):haxe._Int64.__Int64:haxe._Int64.__Int64]
									=
									[Local x(111468):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Cast:haxe.Int64] [Local this(111469):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Return:Dynamic] [Local result(111428):haxe.Int64:haxe.Int64]
}