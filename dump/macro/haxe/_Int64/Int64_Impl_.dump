private class haxe._Int64.Int64_Impl_ {

	@:impl @:noCompletion
	static inline function _new[Function:(x : haxe._Int64.__Int64) -> haxe.Int64]
		[Arg:haxe._Int64.__Int64] [Local x(110457):haxe._Int64.__Int64]
		[Block:Dynamic]
			[Var this(110458):haxe._Int64.__Int64]
			[Binop:haxe._Int64.__Int64]
				[Local this(110458):haxe._Int64.__Int64:haxe._Int64.__Int64]
				=
				[Local x(110457):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Return:Dynamic] [Cast:haxe.Int64] [Local this(110458):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:impl
	public static inline function copy[Function:(this : haxe._Int64.__Int64) -> haxe.Int64]
		[Arg:haxe._Int64.__Int64] [Local this(110608):haxe._Int64.__Int64]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var high(110617):haxe.Int32]
					[Field:haxe.Int32]
						[Local this(110608):haxe._Int64.__Int64:haxe._Int64.__Int64]
						[FInstance:haxe.Int32]
							haxe._Int64.___Int64
							high:haxe.Int32
				[Var low(110618):haxe.Int32]
					[Field:haxe.Int32]
						[Local this(110608):haxe._Int64.__Int64:haxe._Int64.__Int64]
						[FInstance:haxe.Int32]
							haxe._Int64.___Int64
							low:haxe.Int32
				[Var x(110619):haxe._Int64.__Int64]
					[New:haxe._Int64.___Int64]
						haxe._Int64.___Int64
						[Local high(110617):haxe.Int32:haxe.Int32]
						[Local low(110618):haxe.Int32:haxe.Int32]
				[Var this(110620):haxe._Int64.__Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(110620):haxe._Int64.__Int64:haxe._Int64.__Int64]
					=
					[Local x(110619):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Cast:haxe.Int64] [Local this(110620):haxe._Int64.__Int64:haxe._Int64.__Int64]

	public static inline function make[Function:(high : haxe.Int32, low : haxe.Int32) -> haxe.Int64]
		[Arg:haxe.Int32] [Local high(110455):haxe.Int32]
		[Arg:haxe.Int32] [Local low(110456):haxe.Int32]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var x(110463):haxe._Int64.__Int64]
					[New:haxe._Int64.___Int64]
						haxe._Int64.___Int64
						[Local high(110455):haxe.Int32:haxe.Int32]
						[Local low(110456):haxe.Int32:haxe.Int32]
				[Var this(110464):haxe._Int64.__Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(110464):haxe._Int64.__Int64:haxe._Int64.__Int64]
					=
					[Local x(110463):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Cast:haxe.Int64] [Local this(110464):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:from
	public static inline function ofInt[Function:(x : Int) -> haxe.Int64]
		[Arg:Int] [Local x(110454):Int]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var x(110469):haxe._Int64.__Int64]
					[New:haxe._Int64.___Int64]
						haxe._Int64.___Int64
						[Binop:Int]
							[Local x(110454):Int:Int]
							>>
							[Const:Int] 31
						[Local x(110454):Int:Int]
				[Var this(110470):haxe._Int64.__Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(110470):haxe._Int64.__Int64:haxe._Int64.__Int64]
					=
					[Local x(110469):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Cast:haxe.Int64] [Local this(110470):haxe._Int64.__Int64:haxe._Int64.__Int64]

	public static inline function toInt[Function:(x : haxe.Int64) -> Int]
		[Arg:haxe.Int64] [Local x(110621):haxe.Int64]
		[Block:Dynamic]
			[If:Void]
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local x(110621):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						!=
						[Cast:haxe.Int32]
							[Binop:haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local x(110621):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
								>>
								[Const:Int] 31
				[Then:Unknown<28>] [Block:Unknown<28>]
					[Throw:Unknown<28>]
						[Throw:Unknown<28>]
							[Call:Any]
								[Field:(value : Any) -> Any]
									[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
									[FStatic:(value : Any) -> Any]
										haxe.Exception
										thrown:(value : Any) -> Any
								[Const:String] "Overflow"
			[Return:Dynamic]
				[Field:haxe.Int32]
					[Cast:haxe._Int64.__Int64] [Local x(110621):haxe.Int64:haxe.Int64]
					[FInstance:haxe.Int32]
						haxe._Int64.___Int64
						low:haxe.Int32

	@:deprecated("haxe.Int64.is() is deprecated. Use haxe.Int64.isInt64() instead")
	public static inline function is[Function:(val : Dynamic) -> Bool]
		[Arg:Dynamic] [Local val(110631):Dynamic]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:Bool]
					[Field:(v : Dynamic, t : Dynamic) -> Bool]
						[TypeExpr Std:Class<Std>]
						[FStatic:(v : Dynamic, t : Dynamic) -> Bool]
							Std
							isOfType:(v : Dynamic, t : Dynamic) -> Bool
					[Local val(110631):Dynamic:Dynamic]
					[TypeExpr haxe._Int64.___Int64:Class<haxe._Int64.___Int64>]

	public static inline function isInt64[Function:(val : Dynamic) -> Bool]
		[Arg:Dynamic] [Local val(110632):Dynamic]
		[Return:Dynamic]
			[Call:Bool]
				[Field:(v : Dynamic, t : Dynamic) -> Bool]
					[TypeExpr Std:Class<Std>]
					[FStatic:(v : Dynamic, t : Dynamic) -> Bool]
						Std
						isOfType:(v : Dynamic, t : Dynamic) -> Bool
				[Local val(110632):Dynamic:Dynamic]
				[TypeExpr haxe._Int64.___Int64:Class<haxe._Int64.___Int64>]

	@:deprecated("Use high instead")
	public static inline function getHigh[Function:(x : haxe.Int64) -> haxe.Int32]
		[Arg:haxe.Int64] [Local x(110636):haxe.Int64]
		[Return:Dynamic]
			[Field:haxe.Int32]
				[Cast:haxe._Int64.__Int64] [Local x(110636):haxe.Int64:haxe.Int64]
				[FInstance:haxe.Int32]
					haxe._Int64.___Int64
					high:haxe.Int32

	@:deprecated("Use low instead")
	public static inline function getLow[Function:(x : haxe.Int64) -> haxe.Int32]
		[Arg:haxe.Int64] [Local x(110640):haxe.Int64]
		[Return:Dynamic]
			[Field:haxe.Int32]
				[Cast:haxe._Int64.__Int64] [Local x(110640):haxe.Int64:haxe.Int64]
				[FInstance:haxe.Int32]
					haxe._Int64.___Int64
					low:haxe.Int32

	public static inline function isNeg[Function:(x : haxe.Int64) -> Bool]
		[Arg:haxe.Int64] [Local x(110644):haxe.Int64]
		[Return:Dynamic]
			[Cast:Bool]
				[Binop:Bool]
					[Field:haxe.Int32]
						[Cast:haxe._Int64.__Int64] [Local x(110644):haxe.Int64:haxe.Int64]
						[FInstance:haxe.Int32]
							haxe._Int64.___Int64
							high:haxe.Int32
					<
					[Const:Int] 0

	public static inline function isZero[Function:(x : haxe.Int64) -> Bool]
		[Arg:haxe.Int64] [Local x(110648):haxe.Int64]
		[Return:Dynamic]
			[Block:Bool]
				[Var b(110671):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(110666):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Const:Int] 0
									[Const:Int] 0
							[Var this(110667):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(110667):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(110666):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(110667):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local x(110648):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							==
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(110671):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
					&&
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local x(110648):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							==
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(110671):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32

	public static inline function compare[Function:(a : haxe.Int64, b : haxe.Int64) -> Int]
		[Arg:haxe.Int64] [Local a(110672):haxe.Int64]
		[Arg:haxe.Int64] [Local b(110673):haxe.Int64]
		[Block:Dynamic]
			[Var v(110690):haxe.Int32]
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(110672):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
							-
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(110673):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
			[Binop:haxe.Int32]
				[Local v(110690):haxe.Int32:haxe.Int32]
				=
				[If:haxe.Int32]
					[Cast:Bool]
						[Binop:Bool]
							[Local v(110690):haxe.Int32:haxe.Int32]
							!=
							[Const:Int] 0
					[Then:haxe.Int32] [Block:haxe.Int32] [Local v(110690):haxe.Int32:haxe.Int32]
					[Else:Int] [Block:Int]
						[Call:Int]
							[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
								[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
								[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
									haxe._Int32.Int32_Impl_
									ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(110672):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(110673):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
			[Return:Dynamic]
				[If:Int]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(110672):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							<
							[Const:Int] 0
					[Then:Int] [Block:Int]
						[Parenthesis:Int]
							[If:Int]
								[Cast:Bool]
									[Binop:Bool]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(110673):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
										<
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(110690):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int] [Const:Int] -1
					[Else:Int] [Block:Int]
						[Parenthesis:Int]
							[If:Int]
								[Cast:Bool]
									[Binop:Bool]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(110673):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
										>=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(110690):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int] [Const:Int] 1

	public static inline function ucompare[Function:(a : haxe.Int64, b : haxe.Int64) -> Int]
		[Arg:haxe.Int64] [Local a(110716):haxe.Int64]
		[Arg:haxe.Int64] [Local b(110717):haxe.Int64]
		[Block:Dynamic]
			[Var v(110724):Int]
				[Call:Int]
					[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
						[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
						[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
							haxe._Int32.Int32_Impl_
							ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
					[Field:haxe.Int32]
						[Cast:haxe._Int64.__Int64] [Local a(110716):haxe.Int64:haxe.Int64]
						[FInstance:haxe.Int32]
							haxe._Int64.___Int64
							high:haxe.Int32
					[Field:haxe.Int32]
						[Cast:haxe._Int64.__Int64] [Local b(110717):haxe.Int64:haxe.Int64]
						[FInstance:haxe.Int32]
							haxe._Int64.___Int64
							high:haxe.Int32
			[Return:Dynamic]
				[If:Int]
					[Binop:Bool]
						[Local v(110724):Int:Int]
						!=
						[Const:Int] 0
					[Then:Int] [Block:Int] [Local v(110724):Int:Int]
					[Else:Int] [Block:Int]
						[Call:Int]
							[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
								[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
								[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
									haxe._Int32.Int32_Impl_
									ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(110716):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(110717):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32

	public static inline function toStr[Function:(x : haxe.Int64) -> String]
		[Arg:haxe.Int64] [Local x(110731):haxe.Int64]
		[Return:Dynamic]
			[Call:String]
				[Field:(this : haxe._Int64.__Int64) -> String]
					[TypeExpr haxe._Int64.Int64_Impl_:Abstract<haxe.Int64>]
					[FStatic:(this : haxe._Int64.__Int64) -> String]
						haxe._Int64.Int64_Impl_
						toString:(this : haxe._Int64.__Int64) -> String
				[Local x(110731):haxe.Int64:haxe.Int64]

	@:impl
	static function toString[Function:(this : haxe._Int64.__Int64) -> String]
		[Arg:haxe._Int64.__Int64] [Local this(110732):haxe._Int64.__Int64]
		[Block:Dynamic]
			[Var i(110733):haxe.Int64] [Cast:haxe.Int64] [Local this(110732):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[If:Void]
				[Block:Bool]
					[Var b(110742):haxe.Int64]
						[Meta:haxe.Int64]
							:implicitCast
							[Block:haxe.Int64]
								[Var x(110737):haxe._Int64.__Int64]
									[New:haxe._Int64.___Int64]
										haxe._Int64.___Int64
										[Const:Int] 0
										[Const:Int] 0
								[Var this(110738):haxe._Int64.__Int64]
								[Binop:haxe._Int64.__Int64]
									[Local this(110738):haxe._Int64.__Int64:haxe._Int64.__Int64]
									=
									[Local x(110737):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Cast:haxe.Int64] [Local this(110738):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Binop:Bool]
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local i(110733):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								==
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(110742):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
						&&
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local i(110733):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
								==
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(110742):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
				[Then:Dynamic] [Block:Dynamic] [Return:Dynamic] [Const:String] "0"
			[Var str(110743):String] [Const:String] ""
			[Var neg(110744):Bool] [Const:Bool] false
			[If:Void]
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local i(110733):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						<
						[Const:Int] 0
				[Then:Bool] [Block:Bool]
					[Binop:Bool]
						[Local neg(110744):Bool:Bool]
						=
						[Const:Bool] true
			[Var ten(110753):haxe.Int64]
				[Meta:haxe.Int64]
					:implicitCast
					[Block:haxe.Int64]
						[Var x(110751):haxe._Int64.__Int64]
							[New:haxe._Int64.___Int64]
								haxe._Int64.___Int64
								[Binop:Int]
									[Const:Int] 10
									>>
									[Const:Int] 31
								[Const:Int] 10
						[Var this(110752):haxe._Int64.__Int64]
						[Binop:haxe._Int64.__Int64]
							[Local this(110752):haxe._Int64.__Int64:haxe._Int64.__Int64]
							=
							[Local x(110751):haxe._Int64.__Int64:haxe._Int64.__Int64]
						[Cast:haxe.Int64] [Local this(110752):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[While:Void]
				[Block:Bool]
					[Var b(110776):haxe.Int64]
						[Meta:haxe.Int64]
							:implicitCast
							[Block:haxe.Int64]
								[Var x(110771):haxe._Int64.__Int64]
									[New:haxe._Int64.___Int64]
										haxe._Int64.___Int64
										[Const:Int] 0
										[Const:Int] 0
								[Var this(110772):haxe._Int64.__Int64]
								[Binop:haxe._Int64.__Int64]
									[Local this(110772):haxe._Int64.__Int64:haxe._Int64.__Int64]
									=
									[Local x(110771):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Cast:haxe.Int64] [Local this(110772):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Binop:Bool]
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local i(110733):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								!=
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(110776):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
						||
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local i(110733):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
								!=
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(110776):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
				[Block:Void]
					[Var r(111143):{ quotient : haxe.Int64, modulus : haxe.Int64 }]
						[Call:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
							[Field:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
								[TypeExpr haxe._Int64.Int64_Impl_:Abstract<haxe.Int64>]
								[FStatic:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
									haxe._Int64.Int64_Impl_
									divMod:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }
							[Local i(110733):haxe.Int64:haxe.Int64]
							[Local ten(110753):haxe.Int64:haxe.Int64]
					[If:Void]
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64]
										[Field:haxe.Int64]
											[Local r(111143):{ quotient : haxe.Int64, modulus : haxe.Int64 }:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
											[FAnon:haxe.Int64] modulus:haxe.Int64
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								<
								[Const:Int] 0
						[Then:haxe.Int64] [Block:haxe.Int64]
							[Binop:String]
								[Local str(110743):String:String]
								=
								[Binop:String]
									[Block:haxe.Int32]
										[Var this(111157):haxe._Int64.__Int64]
											[Block:haxe.Int64]
												[Var x(111149):haxe.Int64]
													[Field:haxe.Int64]
														[Local r(111143):{ quotient : haxe.Int64, modulus : haxe.Int64 }:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
														[FAnon:haxe.Int64] modulus:haxe.Int64
												[Var high(111150):haxe.Int32]
													[Unop:haxe.Int32]
														~
														Prefix
														[Field:Int]
															[Cast:haxe._Int64.__Int64] [Local x(111149):haxe.Int64:haxe.Int64]
															[FInstance:Int]
																haxe._Int64.___Int64
																high:haxe.Int32
												[Var low(111151):haxe.Int32]
													[Cast:haxe.Int32]
														[Binop:Int]
															[Unop:Int]
																~
																Prefix
																[Cast:Int]
																	[Field:haxe.Int32]
																		[Cast:haxe._Int64.__Int64] [Local x(111149):haxe.Int64:haxe.Int64]
																		[FInstance:haxe.Int32]
																			haxe._Int64.___Int64
																			low:haxe.Int32
															+
															[Const:Int] 1
												[If:Void]
													[Parenthesis:Bool]
														[Binop:Bool]
															[Local low(111151):haxe.Int32:haxe.Int32]
															==
															[Const:Int] 0
													[Then:haxe.Int32] [Cast:haxe.Int32]
														[Block:Int]
															[Var ret(111152):Int]
																[Unop:Int]
																	++
																	Postfix
																	[Local high(111150):haxe.Int32:haxe.Int32]
															[Binop:Int]
																[Local high(111150):haxe.Int32:haxe.Int32]
																=
																[Cast:Int] [Local high(111150):haxe.Int32:haxe.Int32]
															[Local ret(111152):Int:Int]
												[Block:haxe.Int64]
													[Var x(111153):haxe._Int64.__Int64]
														[New:haxe._Int64.___Int64]
															haxe._Int64.___Int64
															[Local high(111150):haxe.Int32:haxe.Int32]
															[Local low(111151):haxe.Int32:haxe.Int32]
													[Var this(111154):haxe._Int64.__Int64]
													[Binop:haxe._Int64.__Int64]
														[Local this(111154):haxe._Int64.__Int64:haxe._Int64.__Int64]
														=
														[Local x(111153):haxe._Int64.__Int64:haxe._Int64.__Int64]
													[Cast:haxe.Int64] [Local this(111154):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local this(111157):haxe._Int64.__Int64:haxe._Int64.__Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
									+
									[Local str(110743):String:String]
							[Binop:haxe.Int64]
								[Local i(110733):haxe.Int64:haxe.Int64]
								=
								[Block:haxe.Int64]
									[Var x(111171):haxe.Int64]
										[Field:haxe.Int64]
											[Local r(111143):{ quotient : haxe.Int64, modulus : haxe.Int64 }:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
											[FAnon:haxe.Int64] quotient:haxe.Int64
									[Var high(111172):haxe.Int32]
										[Unop:haxe.Int32]
											~
											Prefix
											[Field:Int]
												[Cast:haxe._Int64.__Int64] [Local x(111171):haxe.Int64:haxe.Int64]
												[FInstance:Int]
													haxe._Int64.___Int64
													high:haxe.Int32
									[Var low(111173):haxe.Int32]
										[Cast:haxe.Int32]
											[Parenthesis:Int]
												[Binop:Int]
													[Unop:Int]
														~
														Prefix
														[Cast:Int]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local x(111171):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
													+
													[Const:Int] 1
									[If:Void]
										[Cast:Bool]
											[Binop:Bool]
												[Local low(111173):haxe.Int32:haxe.Int32]
												==
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32]
											[Cast:haxe.Int32]
												[Block:Int]
													[Var ret(111174):Int]
														[Unop:Int]
															++
															Postfix
															[Local high(111172):haxe.Int32:haxe.Int32]
													[Binop:Int]
														[Local high(111172):haxe.Int32:haxe.Int32]
														=
														[Parenthesis:Int] [Cast:Int] [Local high(111172):haxe.Int32:haxe.Int32]
													[Local ret(111174):Int:Int]
									[Block:haxe.Int64]
										[Var x(111175):haxe._Int64.__Int64]
											[New:haxe._Int64.___Int64]
												haxe._Int64.___Int64
												[Local high(111172):haxe.Int32:haxe.Int32]
												[Local low(111173):haxe.Int32:haxe.Int32]
										[Var this(111176):haxe._Int64.__Int64]
										[Binop:haxe._Int64.__Int64]
											[Local this(111176):haxe._Int64.__Int64:haxe._Int64.__Int64]
											=
											[Local x(111175):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Cast:haxe.Int64] [Local this(111176):haxe._Int64.__Int64:haxe._Int64.__Int64]
						[Else:haxe.Int64] [Block:haxe.Int64]
							[Binop:String]
								[Local str(110743):String:String]
								=
								[Binop:String]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64]
											[Field:haxe.Int64]
												[Local r(111143):{ quotient : haxe.Int64, modulus : haxe.Int64 }:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
												[FAnon:haxe.Int64] modulus:haxe.Int64
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
									+
									[Local str(110743):String:String]
							[Binop:haxe.Int64]
								[Local i(110733):haxe.Int64:haxe.Int64]
								=
								[Field:haxe.Int64]
									[Local r(111143):{ quotient : haxe.Int64, modulus : haxe.Int64 }:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
									[FAnon:haxe.Int64] quotient:haxe.Int64
			[If:Void]
				[Local neg(110744):Bool:Bool]
				[Then:String] [Block:String]
					[Binop:String]
						[Local str(110743):String:String]
						=
						[Binop:String]
							[Const:String] "-"
							+
							[Local str(110743):String:String]
			[Return:Dynamic] [Local str(110743):String:String]

	public static inline function parseString[Function:(sParam : String) -> haxe.Int64]
		[Arg:String] [Local sParam(111180):String]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:haxe.Int64]
					[Field:(sParam : String) -> haxe.Int64]
						[TypeExpr haxe.Int64Helper:Class<haxe.Int64Helper>]
						[FStatic:(sParam : String) -> haxe.Int64]
							haxe.Int64Helper
							parseString:(sParam : String) -> haxe.Int64
					[Local sParam(111180):String:String]

	public static inline function fromFloat[Function:(f : Float) -> haxe.Int64]
		[Arg:Float] [Local f(111470):Float]
		[Block:Dynamic]
			[Return:Dynamic]
				[Call:haxe.Int64]
					[Field:(f : Float) -> haxe.Int64]
						[TypeExpr haxe.Int64Helper:Class<haxe.Int64Helper>]
						[FStatic:(f : Float) -> haxe.Int64]
							haxe.Int64Helper
							fromFloat:(f : Float) -> haxe.Int64
					[Local f(111470):Float:Float]

	public static function divMod[Function:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
		[Arg:haxe.Int64] [Local dividend(110777):haxe.Int64]
		[Arg:haxe.Int64] [Local divisor(110778):haxe.Int64]
		[Block:Dynamic]
			[If:Void]
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						==
						[Const:Int] 0
				[Then:Void] [Block:Void]
					[Meta:Void]
						:ast(switch (divisor.low) {
	case 0:
		throw "divide by zero";	
	case 1:
		return { quotient : dividend.copy(), modulus : 0 };	
})
						[Block:Void]
							[Var `(110798):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
							[Switch:Void]
								[Local `(110798):haxe.Int32:haxe.Int32]
								[Case:Unknown<29>]
									[Const:Int] 0
									[Block:Unknown<29>]
										[Block:Unknown<29>]
											[Throw:Unknown<29>]
												[Throw:Unknown<29>]
													[Call:Any]
														[Field:(value : Any) -> Any]
															[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
															[FStatic:(value : Any) -> Any]
																haxe.Exception
																thrown:(value : Any) -> Any
														[Const:String] "divide by zero"
								[Case:Dynamic]
									[Const:Int] 1
									[Block:Dynamic]
										[Block:Dynamic]
											[Return:Dynamic]
												[ObjectDecl:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
													quotient: [Block:haxe.Int64]
														[Var high(110799):haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	high:haxe.Int32
														[Var low(110800):haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
														[Var x(110801):haxe._Int64.__Int64]
															[New:haxe._Int64.___Int64]
																haxe._Int64.___Int64
																[Local high(110799):haxe.Int32:haxe.Int32]
																[Local low(110800):haxe.Int32:haxe.Int32]
														[Var this(110802):haxe._Int64.__Int64]
														[Binop:haxe._Int64.__Int64]
															[Local this(110802):haxe._Int64.__Int64:haxe._Int64.__Int64]
															=
															[Local x(110801):haxe._Int64.__Int64:haxe._Int64.__Int64]
														[Cast:haxe.Int64] [Local this(110802):haxe._Int64.__Int64:haxe._Int64.__Int64]
													modulus: [Meta:haxe.Int64]
														:implicitCast
														[Block:haxe.Int64]
															[Var x(110803):haxe._Int64.__Int64]
																[New:haxe._Int64.___Int64]
																	haxe._Int64.___Int64
																	[Binop:Int]
																		[Const:Int] 0
																		>>
																		[Const:Int] 31
																	[Const:Int] 0
															[Var this(110804):haxe._Int64.__Int64]
															[Binop:haxe._Int64.__Int64]
																[Local this(110804):haxe._Int64.__Int64:haxe._Int64.__Int64]
																=
																[Local x(110803):haxe._Int64.__Int64:haxe._Int64.__Int64]
															[Cast:haxe.Int64] [Local this(110804):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Var divSign(110811):Bool]
				[Binop:Bool]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							<
							[Const:Int] 0
					!=
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							<
							[Const:Int] 0
			[Var modulus(110861):haxe.Int64]
				[If:haxe.Int64]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							<
							[Const:Int] 0
					[Then:haxe.Int64] [Block:haxe.Int64]
						[Block:haxe.Int64]
							[Var high(110849):haxe.Int32]
								[Unop:haxe.Int32]
									~
									Prefix
									[Field:Int]
										[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
										[FInstance:Int]
											haxe._Int64.___Int64
											high:haxe.Int32
							[Var low(110850):haxe.Int32]
								[Cast:haxe.Int32]
									[Parenthesis:Int]
										[Binop:Int]
											[Unop:Int]
												~
												Prefix
												[Cast:Int]
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															low:haxe.Int32
											+
											[Const:Int] 1
							[If:Void]
								[Cast:Bool]
									[Binop:Bool]
										[Local low(110850):haxe.Int32:haxe.Int32]
										==
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32]
									[Cast:haxe.Int32]
										[Block:Int]
											[Var ret(110851):Int]
												[Unop:Int]
													++
													Postfix
													[Local high(110849):haxe.Int32:haxe.Int32]
											[Binop:Int]
												[Local high(110849):haxe.Int32:haxe.Int32]
												=
												[Parenthesis:Int] [Cast:Int] [Local high(110849):haxe.Int32:haxe.Int32]
											[Local ret(110851):Int:Int]
							[Block:haxe.Int64]
								[Var x(110852):haxe._Int64.__Int64]
									[New:haxe._Int64.___Int64]
										haxe._Int64.___Int64
										[Local high(110849):haxe.Int32:haxe.Int32]
										[Local low(110850):haxe.Int32:haxe.Int32]
								[Var this(110853):haxe._Int64.__Int64]
								[Binop:haxe._Int64.__Int64]
									[Local this(110853):haxe._Int64.__Int64:haxe._Int64.__Int64]
									=
									[Local x(110852):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Cast:haxe.Int64] [Local this(110853):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Else:haxe.Int64] [Block:haxe.Int64]
						[Block:haxe.Int64]
							[Var high(110857):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
							[Var low(110858):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
							[Var x(110859):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Local high(110857):haxe.Int32:haxe.Int32]
									[Local low(110858):haxe.Int32:haxe.Int32]
							[Var this(110860):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(110860):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(110859):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(110860):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Binop:haxe.Int64]
				[Local divisor(110778):haxe.Int64:haxe.Int64]
				=
				[If:haxe.Int64]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							<
							[Const:Int] 0
					[Then:haxe.Int64] [Block:haxe.Int64]
						[Block:haxe.Int64]
							[Var high(110868):haxe.Int32]
								[Unop:haxe.Int32]
									~
									Prefix
									[Field:Int]
										[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
										[FInstance:Int]
											haxe._Int64.___Int64
											high:haxe.Int32
							[Var low(110869):haxe.Int32]
								[Cast:haxe.Int32]
									[Parenthesis:Int]
										[Binop:Int]
											[Unop:Int]
												~
												Prefix
												[Cast:Int]
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															low:haxe.Int32
											+
											[Const:Int] 1
							[If:Void]
								[Cast:Bool]
									[Binop:Bool]
										[Local low(110869):haxe.Int32:haxe.Int32]
										==
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32]
									[Cast:haxe.Int32]
										[Block:Int]
											[Var ret(110870):Int]
												[Unop:Int]
													++
													Postfix
													[Local high(110868):haxe.Int32:haxe.Int32]
											[Binop:Int]
												[Local high(110868):haxe.Int32:haxe.Int32]
												=
												[Parenthesis:Int] [Cast:Int] [Local high(110868):haxe.Int32:haxe.Int32]
											[Local ret(110870):Int:Int]
							[Block:haxe.Int64]
								[Var x(110871):haxe._Int64.__Int64]
									[New:haxe._Int64.___Int64]
										haxe._Int64.___Int64
										[Local high(110868):haxe.Int32:haxe.Int32]
										[Local low(110869):haxe.Int32:haxe.Int32]
								[Var this(110872):haxe._Int64.__Int64]
								[Binop:haxe._Int64.__Int64]
									[Local this(110872):haxe._Int64.__Int64:haxe._Int64.__Int64]
									=
									[Local x(110871):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Cast:haxe.Int64] [Local this(110872):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Else:haxe.Int64] [Block:haxe.Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
			[Var quotient(110878):haxe.Int64]
				[Meta:haxe.Int64]
					:implicitCast
					[Block:haxe.Int64]
						[Var x(110876):haxe._Int64.__Int64]
							[New:haxe._Int64.___Int64]
								haxe._Int64.___Int64
								[Binop:Int]
									[Const:Int] 0
									>>
									[Const:Int] 31
								[Const:Int] 0
						[Var this(110877):haxe._Int64.__Int64]
						[Binop:haxe._Int64.__Int64]
							[Local this(110877):haxe._Int64.__Int64:haxe._Int64.__Int64]
							=
							[Local x(110876):haxe._Int64.__Int64:haxe._Int64.__Int64]
						[Cast:haxe.Int64] [Local this(110877):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Var mask(110884):haxe.Int64]
				[Meta:haxe.Int64]
					:implicitCast
					[Block:haxe.Int64]
						[Var x(110882):haxe._Int64.__Int64]
							[New:haxe._Int64.___Int64]
								haxe._Int64.___Int64
								[Binop:Int]
									[Const:Int] 1
									>>
									[Const:Int] 31
								[Const:Int] 1
						[Var this(110883):haxe._Int64.__Int64]
						[Binop:haxe._Int64.__Int64]
							[Local this(110883):haxe._Int64.__Int64:haxe._Int64.__Int64]
							=
							[Local x(110882):haxe._Int64.__Int64:haxe._Int64.__Int64]
						[Cast:haxe.Int64] [Local this(110883):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[While:Void]
				[Unop:Bool]
					!
					Prefix
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							<
							[Const:Int] 0
				[Block:Void]
					[Var cmp(110893):Int]
						[Block:Int]
							[Var v(110892):Int]
								[Call:Int]
									[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
										[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
										[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
											haxe._Int32.Int32_Impl_
											ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
							[If:Int]
								[Binop:Bool]
									[Local v(110892):Int:Int]
									!=
									[Const:Int] 0
								[Then:Int] [Block:Int] [Local v(110892):Int:Int]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
					[Binop:haxe.Int64]
						[Local divisor(110778):haxe.Int64:haxe.Int64]
						=
						[Block:haxe.Int64]
							[Var b(110932):Int] [Const:Int] 1
							[Binop:Int]
								[Local b(110932):Int:Int]
								&=
								[Const:Int] 63
							[If:haxe.Int64]
								[Binop:Bool]
									[Local b(110932):Int:Int]
									==
									[Const:Int] 0
								[Then:haxe.Int64] [Block:haxe.Int64]
									[Block:haxe.Int64]
										[Var high(110933):haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										[Var low(110934):haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
										[Var x(110935):haxe._Int64.__Int64]
											[New:haxe._Int64.___Int64]
												haxe._Int64.___Int64
												[Local high(110933):haxe.Int32:haxe.Int32]
												[Local low(110934):haxe.Int32:haxe.Int32]
										[Var this(110936):haxe._Int64.__Int64]
										[Binop:haxe._Int64.__Int64]
											[Local this(110936):haxe._Int64.__Int64:haxe._Int64.__Int64]
											=
											[Local x(110935):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Cast:haxe.Int64] [Local this(110936):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Else:haxe.Int64] [Block:haxe.Int64]
									[If:haxe.Int64]
										[Binop:Bool]
											[Local b(110932):Int:Int]
											<
											[Const:Int] 32
										[Then:haxe.Int64] [Block:haxe.Int64]
											[Block:haxe.Int64]
												[Var high(110937):haxe.Int32]
													[Binop:haxe.Int32]
														[Binop:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	high:haxe.Int32
															<<
															[Local b(110932):Int:Int]
														|
														[Binop:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
															>>>
															[Binop:Int]
																[Const:Int] 32
																-
																[Local b(110932):Int:Int]
												[Var low(110938):haxe.Int32]
													[Binop:haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
														<<
														[Local b(110932):Int:Int]
												[Var x(110939):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Local high(110937):haxe.Int32:haxe.Int32]
														[Local low(110938):haxe.Int32:haxe.Int32]
												[Var this(110940):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(110940):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(110939):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(110940):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Else:haxe.Int64] [Block:haxe.Int64]
											[Block:haxe.Int64]
												[Var high(110941):haxe.Int32]
													[Binop:haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
														<<
														[Binop:Int]
															[Local b(110932):Int:Int]
															-
															[Const:Int] 32
												[Var x(110942):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Local high(110941):haxe.Int32:haxe.Int32]
														[Const:Int] 0
												[Var this(110943):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(110943):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(110942):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(110943):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Binop:haxe.Int64]
						[Local mask(110884):haxe.Int64:haxe.Int64]
						=
						[Block:haxe.Int64]
							[Var b(110948):Int] [Const:Int] 1
							[Binop:Int]
								[Local b(110948):Int:Int]
								&=
								[Const:Int] 63
							[If:haxe.Int64]
								[Binop:Bool]
									[Local b(110948):Int:Int]
									==
									[Const:Int] 0
								[Then:haxe.Int64] [Block:haxe.Int64]
									[Block:haxe.Int64]
										[Var high(110949):haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										[Var low(110950):haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
										[Var x(110951):haxe._Int64.__Int64]
											[New:haxe._Int64.___Int64]
												haxe._Int64.___Int64
												[Local high(110949):haxe.Int32:haxe.Int32]
												[Local low(110950):haxe.Int32:haxe.Int32]
										[Var this(110952):haxe._Int64.__Int64]
										[Binop:haxe._Int64.__Int64]
											[Local this(110952):haxe._Int64.__Int64:haxe._Int64.__Int64]
											=
											[Local x(110951):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Cast:haxe.Int64] [Local this(110952):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Else:haxe.Int64] [Block:haxe.Int64]
									[If:haxe.Int64]
										[Binop:Bool]
											[Local b(110948):Int:Int]
											<
											[Const:Int] 32
										[Then:haxe.Int64] [Block:haxe.Int64]
											[Block:haxe.Int64]
												[Var high(110953):haxe.Int32]
													[Binop:haxe.Int32]
														[Binop:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	high:haxe.Int32
															<<
															[Local b(110948):Int:Int]
														|
														[Binop:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
															>>>
															[Binop:Int]
																[Const:Int] 32
																-
																[Local b(110948):Int:Int]
												[Var low(110954):haxe.Int32]
													[Binop:haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
														<<
														[Local b(110948):Int:Int]
												[Var x(110955):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Local high(110953):haxe.Int32:haxe.Int32]
														[Local low(110954):haxe.Int32:haxe.Int32]
												[Var this(110956):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(110956):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(110955):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(110956):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Else:haxe.Int64] [Block:haxe.Int64]
											[Block:haxe.Int64]
												[Var high(110957):haxe.Int32]
													[Binop:haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
														<<
														[Binop:Int]
															[Local b(110948):Int:Int]
															-
															[Const:Int] 32
												[Var x(110958):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Local high(110957):haxe.Int32:haxe.Int32]
														[Const:Int] 0
												[Var this(110959):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(110959):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(110958):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(110959):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[If:Void]
						[Binop:Bool]
							[Local cmp(110893):Int:Int]
							>=
							[Const:Int] 0
						[Then:Dynamic] [Block:Dynamic] [Break:Dynamic]
			[While:Void]
				[Block:Bool]
					[Var b(110968):haxe.Int64]
						[Meta:haxe.Int64]
							:implicitCast
							[Block:haxe.Int64]
								[Var x(110963):haxe._Int64.__Int64]
									[New:haxe._Int64.___Int64]
										haxe._Int64.___Int64
										[Const:Int] 0
										[Const:Int] 0
								[Var this(110964):haxe._Int64.__Int64]
								[Binop:haxe._Int64.__Int64]
									[Local this(110964):haxe._Int64.__Int64:haxe._Int64.__Int64]
									=
									[Local x(110963):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Cast:haxe.Int64] [Local this(110964):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Binop:Bool]
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								!=
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(110968):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
						||
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
								!=
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(110968):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
				[Block:haxe.Int64]
					[If:Void]
						[Binop:Bool]
							[Block:Int]
								[Var v(110973):Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
								[If:Int]
									[Binop:Bool]
										[Local v(110973):Int:Int]
										!=
										[Const:Int] 0
									[Then:Int] [Block:Int] [Local v(110973):Int:Int]
									[Else:Int] [Block:Int]
										[Call:Int]
											[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
												[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
												[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
													haxe._Int32.Int32_Impl_
													ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
							>=
							[Const:Int] 0
						[Then:haxe.Int64] [Block:haxe.Int64]
							[Binop:haxe.Int64]
								[Local quotient(110878):haxe.Int64:haxe.Int64]
								=
								[Block:haxe.Int64]
									[Var high(110999):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local quotient(110878):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											|
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
									[Var low(111000):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local quotient(110878):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											|
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
									[Var x(111001):haxe._Int64.__Int64]
										[New:haxe._Int64.___Int64]
											haxe._Int64.___Int64
											[Local high(110999):haxe.Int32:haxe.Int32]
											[Local low(111000):haxe.Int32:haxe.Int32]
									[Var this(111002):haxe._Int64.__Int64]
									[Binop:haxe._Int64.__Int64]
										[Local this(111002):haxe._Int64.__Int64:haxe._Int64.__Int64]
										=
										[Local x(111001):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Cast:haxe.Int64] [Local this(111002):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Binop:haxe.Int64]
								[Local modulus(110861):haxe.Int64:haxe.Int64]
								=
								[Block:haxe.Int64]
									[Var high(111053):haxe.Int32]
										[Cast:haxe.Int32]
											[Parenthesis:Int]
												[Binop:Int]
													[Cast:Int]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
													-
													[Cast:Int]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
									[Var low(111054):haxe.Int32]
										[Cast:haxe.Int32]
											[Parenthesis:Int]
												[Binop:Int]
													[Cast:Int]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
													-
													[Cast:Int]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																low:haxe.Int32
									[If:Void]
										[Binop:Bool]
											[Call:Int]
												[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
													[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
													[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
														haxe._Int32.Int32_Impl_
														ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														low:haxe.Int32
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														low:haxe.Int32
											<
											[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32]
											[Cast:haxe.Int32]
												[Block:Int]
													[Var ret(111055):Int]
														[Unop:Int]
															--
															Postfix
															[Local high(111053):haxe.Int32:haxe.Int32]
													[Binop:Int]
														[Local high(111053):haxe.Int32:haxe.Int32]
														=
														[Parenthesis:Int] [Cast:Int] [Local high(111053):haxe.Int32:haxe.Int32]
													[Local ret(111055):Int:Int]
									[Block:haxe.Int64]
										[Var x(111056):haxe._Int64.__Int64]
											[New:haxe._Int64.___Int64]
												haxe._Int64.___Int64
												[Local high(111053):haxe.Int32:haxe.Int32]
												[Local low(111054):haxe.Int32:haxe.Int32]
										[Var this(111057):haxe._Int64.__Int64]
										[Binop:haxe._Int64.__Int64]
											[Local this(111057):haxe._Int64.__Int64:haxe._Int64.__Int64]
											=
											[Local x(111056):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Cast:haxe.Int64] [Local this(111057):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Binop:haxe.Int64]
						[Local mask(110884):haxe.Int64:haxe.Int64]
						=
						[Block:haxe.Int64]
							[Var b(111096):Int] [Const:Int] 1
							[Binop:Int]
								[Local b(111096):Int:Int]
								&=
								[Const:Int] 63
							[If:haxe.Int64]
								[Binop:Bool]
									[Local b(111096):Int:Int]
									==
									[Const:Int] 0
								[Then:haxe.Int64] [Block:haxe.Int64]
									[Block:haxe.Int64]
										[Var high(111097):haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										[Var low(111098):haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
										[Var x(111099):haxe._Int64.__Int64]
											[New:haxe._Int64.___Int64]
												haxe._Int64.___Int64
												[Local high(111097):haxe.Int32:haxe.Int32]
												[Local low(111098):haxe.Int32:haxe.Int32]
										[Var this(111100):haxe._Int64.__Int64]
										[Binop:haxe._Int64.__Int64]
											[Local this(111100):haxe._Int64.__Int64:haxe._Int64.__Int64]
											=
											[Local x(111099):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Cast:haxe.Int64] [Local this(111100):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Else:haxe.Int64] [Block:haxe.Int64]
									[If:haxe.Int64]
										[Binop:Bool]
											[Local b(111096):Int:Int]
											<
											[Const:Int] 32
										[Then:haxe.Int64] [Block:haxe.Int64]
											[Block:haxe.Int64]
												[Var high(111101):haxe.Int32]
													[Binop:haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
														>>>
														[Local b(111096):Int:Int]
												[Var low(111102):haxe.Int32]
													[Binop:haxe.Int32]
														[Binop:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	high:haxe.Int32
															<<
															[Binop:Int]
																[Const:Int] 32
																-
																[Local b(111096):Int:Int]
														|
														[Binop:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
															>>>
															[Local b(111096):Int:Int]
												[Var x(111103):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Local high(111101):haxe.Int32:haxe.Int32]
														[Local low(111102):haxe.Int32:haxe.Int32]
												[Var this(111104):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(111104):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(111103):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(111104):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Else:haxe.Int64] [Block:haxe.Int64]
											[Block:haxe.Int64]
												[Var low(111105):haxe.Int32]
													[Binop:haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local mask(110884):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
														>>>
														[Binop:Int]
															[Local b(111096):Int:Int]
															-
															[Const:Int] 32
												[Var x(111106):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Const:Int] 0
														[Local low(111105):haxe.Int32:haxe.Int32]
												[Var this(111107):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(111107):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(111106):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(111107):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Binop:haxe.Int64]
						[Local divisor(110778):haxe.Int64:haxe.Int64]
						=
						[Block:haxe.Int64]
							[Var b(111112):Int] [Const:Int] 1
							[Binop:Int]
								[Local b(111112):Int:Int]
								&=
								[Const:Int] 63
							[If:haxe.Int64]
								[Binop:Bool]
									[Local b(111112):Int:Int]
									==
									[Const:Int] 0
								[Then:haxe.Int64] [Block:haxe.Int64]
									[Block:haxe.Int64]
										[Var high(111113):haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										[Var low(111114):haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
										[Var x(111115):haxe._Int64.__Int64]
											[New:haxe._Int64.___Int64]
												haxe._Int64.___Int64
												[Local high(111113):haxe.Int32:haxe.Int32]
												[Local low(111114):haxe.Int32:haxe.Int32]
										[Var this(111116):haxe._Int64.__Int64]
										[Binop:haxe._Int64.__Int64]
											[Local this(111116):haxe._Int64.__Int64:haxe._Int64.__Int64]
											=
											[Local x(111115):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Cast:haxe.Int64] [Local this(111116):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Else:haxe.Int64] [Block:haxe.Int64]
									[If:haxe.Int64]
										[Binop:Bool]
											[Local b(111112):Int:Int]
											<
											[Const:Int] 32
										[Then:haxe.Int64] [Block:haxe.Int64]
											[Block:haxe.Int64]
												[Var high(111117):haxe.Int32]
													[Binop:haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
														>>>
														[Local b(111112):Int:Int]
												[Var low(111118):haxe.Int32]
													[Binop:haxe.Int32]
														[Binop:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	high:haxe.Int32
															<<
															[Binop:Int]
																[Const:Int] 32
																-
																[Local b(111112):Int:Int]
														|
														[Binop:haxe.Int32]
															[Field:haxe.Int32]
																[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
																[FInstance:haxe.Int32]
																	haxe._Int64.___Int64
																	low:haxe.Int32
															>>>
															[Local b(111112):Int:Int]
												[Var x(111119):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Local high(111117):haxe.Int32:haxe.Int32]
														[Local low(111118):haxe.Int32:haxe.Int32]
												[Var this(111120):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(111120):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(111119):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(111120):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[Else:haxe.Int64] [Block:haxe.Int64]
											[Block:haxe.Int64]
												[Var low(111121):haxe.Int32]
													[Binop:haxe.Int32]
														[Field:haxe.Int32]
															[Cast:haxe._Int64.__Int64] [Local divisor(110778):haxe.Int64:haxe.Int64]
															[FInstance:haxe.Int32]
																haxe._Int64.___Int64
																high:haxe.Int32
														>>>
														[Binop:Int]
															[Local b(111112):Int:Int]
															-
															[Const:Int] 32
												[Var x(111122):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Const:Int] 0
														[Local low(111121):haxe.Int32:haxe.Int32]
												[Var this(111123):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(111123):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(111122):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(111123):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[If:Void]
				[Local divSign(110811):Bool:Bool]
				[Then:haxe.Int64] [Block:haxe.Int64]
					[Binop:haxe.Int64]
						[Local quotient(110878):haxe.Int64:haxe.Int64]
						=
						[Block:haxe.Int64]
							[Var high(111127):haxe.Int32]
								[Unop:haxe.Int32]
									~
									Prefix
									[Field:Int]
										[Cast:haxe._Int64.__Int64] [Local quotient(110878):haxe.Int64:haxe.Int64]
										[FInstance:Int]
											haxe._Int64.___Int64
											high:haxe.Int32
							[Var low(111128):haxe.Int32]
								[Cast:haxe.Int32]
									[Parenthesis:Int]
										[Binop:Int]
											[Unop:Int]
												~
												Prefix
												[Cast:Int]
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local quotient(110878):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															low:haxe.Int32
											+
											[Const:Int] 1
							[If:Void]
								[Cast:Bool]
									[Binop:Bool]
										[Local low(111128):haxe.Int32:haxe.Int32]
										==
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32]
									[Cast:haxe.Int32]
										[Block:Int]
											[Var ret(111129):Int]
												[Unop:Int]
													++
													Postfix
													[Local high(111127):haxe.Int32:haxe.Int32]
											[Binop:Int]
												[Local high(111127):haxe.Int32:haxe.Int32]
												=
												[Parenthesis:Int] [Cast:Int] [Local high(111127):haxe.Int32:haxe.Int32]
											[Local ret(111129):Int:Int]
							[Block:haxe.Int64]
								[Var x(111130):haxe._Int64.__Int64]
									[New:haxe._Int64.___Int64]
										haxe._Int64.___Int64
										[Local high(111127):haxe.Int32:haxe.Int32]
										[Local low(111128):haxe.Int32:haxe.Int32]
								[Var this(111131):haxe._Int64.__Int64]
								[Binop:haxe._Int64.__Int64]
									[Local this(111131):haxe._Int64.__Int64:haxe._Int64.__Int64]
									=
									[Local x(111130):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Cast:haxe.Int64] [Local this(111131):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[If:Void]
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local dividend(110777):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						<
						[Const:Int] 0
				[Then:haxe.Int64] [Block:haxe.Int64]
					[Binop:haxe.Int64]
						[Local modulus(110861):haxe.Int64:haxe.Int64]
						=
						[Block:haxe.Int64]
							[Var high(111138):haxe.Int32]
								[Unop:haxe.Int32]
									~
									Prefix
									[Field:Int]
										[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
										[FInstance:Int]
											haxe._Int64.___Int64
											high:haxe.Int32
							[Var low(111139):haxe.Int32]
								[Cast:haxe.Int32]
									[Parenthesis:Int]
										[Binop:Int]
											[Unop:Int]
												~
												Prefix
												[Cast:Int]
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local modulus(110861):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															low:haxe.Int32
											+
											[Const:Int] 1
							[If:Void]
								[Cast:Bool]
									[Binop:Bool]
										[Local low(111139):haxe.Int32:haxe.Int32]
										==
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32]
									[Cast:haxe.Int32]
										[Block:Int]
											[Var ret(111140):Int]
												[Unop:Int]
													++
													Postfix
													[Local high(111138):haxe.Int32:haxe.Int32]
											[Binop:Int]
												[Local high(111138):haxe.Int32:haxe.Int32]
												=
												[Parenthesis:Int] [Cast:Int] [Local high(111138):haxe.Int32:haxe.Int32]
											[Local ret(111140):Int:Int]
							[Block:haxe.Int64]
								[Var x(111141):haxe._Int64.__Int64]
									[New:haxe._Int64.___Int64]
										haxe._Int64.___Int64
										[Local high(111138):haxe.Int32:haxe.Int32]
										[Local low(111139):haxe.Int32:haxe.Int32]
								[Var this(111142):haxe._Int64.__Int64]
								[Binop:haxe._Int64.__Int64]
									[Local this(111142):haxe._Int64.__Int64:haxe._Int64.__Int64]
									=
									[Local x(111141):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[Cast:haxe.Int64] [Local this(111142):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Return:Dynamic]
				[ObjectDecl:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
					quotient: [Local quotient(110878):haxe.Int64:haxe.Int64]
					modulus: [Local modulus(110861):haxe.Int64:haxe.Int64]

	@:op(-A)
	public static inline function neg[Function:(x : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local x(110815):haxe.Int64]
		[Block:Dynamic]
			[Var high(110819):haxe.Int32]
				[Unop:haxe.Int32]
					~
					Prefix
					[Field:Int]
						[Cast:haxe._Int64.__Int64] [Local x(110815):haxe.Int64:haxe.Int64]
						[FInstance:Int]
							haxe._Int64.___Int64
							high:haxe.Int32
			[Var low(110830):haxe.Int32]
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Unop:Int]
								~
								Prefix
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local x(110815):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
							+
							[Const:Int] 1
			[If:Void]
				[Cast:Bool]
					[Binop:Bool]
						[Local low(110830):haxe.Int32:haxe.Int32]
						==
						[Const:Int] 0
				[Then:haxe.Int32] [Block:haxe.Int32]
					[Cast:haxe.Int32]
						[Block:Int]
							[Var ret(110839):Int]
								[Unop:Int]
									++
									Postfix
									[Local high(110819):haxe.Int32:haxe.Int32]
							[Binop:Int]
								[Local high(110819):haxe.Int32:haxe.Int32]
								=
								[Parenthesis:Int] [Cast:Int] [Local high(110819):haxe.Int32:haxe.Int32]
							[Local ret(110839):Int:Int]
			[Return:Dynamic]
				[Block:haxe.Int64]
					[Var x(110844):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(110819):haxe.Int32:haxe.Int32]
							[Local low(110830):haxe.Int32:haxe.Int32]
					[Var this(110845):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(110845):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(110844):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(110845):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:impl @:op(++A)
	static inline function preIncrement[Function:(this : haxe._Int64.__Int64) -> haxe.Int64]
		[Arg:haxe._Int64.__Int64] [Local this(111471):haxe._Int64.__Int64]
		[Block:Dynamic]
			[Binop:haxe._Int64.__Int64]
				[Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]
				=
				[Block:haxe.Int64]
					[Var high(111475):haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local this(111471):haxe._Int64.__Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
					[Var low(111476):haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local this(111471):haxe._Int64.__Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
					[Var x(111477):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111475):haxe.Int32:haxe.Int32]
							[Local low(111476):haxe.Int32:haxe.Int32]
					[Var this(111478):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111478):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111477):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111478):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Cast:haxe.Int32]
				[Block:Int]
					[Var ret(111482):Int]
						[Unop:Int]
							++
							Postfix
							[Field:haxe.Int32]
								[Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
					[Binop:Int]
						[Field:haxe.Int32]
							[Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						=
						[Parenthesis:Int]
							[Cast:Int]
								[Field:haxe.Int32]
									[Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
					[Local ret(111482):Int:Int]
			[If:Void]
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						==
						[Const:Int] 0
				[Then:haxe.Int32] [Block:haxe.Int32]
					[Cast:haxe.Int32]
						[Block:Int]
							[Var ret(111486):Int]
								[Unop:Int]
									++
									Postfix
									[Field:haxe.Int32]
										[Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
							[Binop:Int]
								[Field:haxe.Int32]
									[Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								=
								[Parenthesis:Int]
									[Cast:Int]
										[Field:haxe.Int32]
											[Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
							[Local ret(111486):Int:Int]
			[Return:Dynamic] [Cast:haxe.Int64] [Local this(111471):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:impl @:op(A++)
	static inline function postIncrement[Function:(this : haxe._Int64.__Int64) -> haxe.Int64]
		[Arg:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64]
		[Block:Dynamic]
			[Var ret(111488):haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Block:haxe.Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(111487):haxe._Int64.__Int64:haxe.Int64]
					=
					[Block:haxe.Int64]
						[Var high(111492):haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
						[Var low(111493):haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
						[Var x(111494):haxe._Int64.__Int64]
							[New:haxe._Int64.___Int64]
								haxe._Int64.___Int64
								[Local high(111492):haxe.Int32:haxe.Int32]
								[Local low(111493):haxe.Int32:haxe.Int32]
						[Var this(111495):haxe._Int64.__Int64]
						[Binop:haxe._Int64.__Int64]
							[Local this(111495):haxe._Int64.__Int64:haxe._Int64.__Int64]
							=
							[Local x(111494):haxe._Int64.__Int64:haxe._Int64.__Int64]
						[Cast:haxe.Int64] [Local this(111495):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Cast:haxe.Int32]
					[Block:Int]
						[Var ret(111496):Int]
							[Unop:Int]
								++
								Postfix
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
						[Binop:Int]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							=
							[Parenthesis:Int]
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
						[Local ret(111496):Int:Int]
				[If:Void]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							==
							[Const:Int] 0
					[Then:haxe.Int32] [Block:haxe.Int32]
						[Cast:haxe.Int32]
							[Block:Int]
								[Var ret(111497):Int]
									[Unop:Int]
										++
										Postfix
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
								[Binop:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									=
									[Parenthesis:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
								[Local ret(111497):Int:Int]
				[Cast:haxe.Int64] [Cast:haxe._Int64.__Int64] [Local this(111487):haxe._Int64.__Int64:haxe.Int64]
			[Return:Dynamic] [Local ret(111488):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:impl @:op(--A)
	static inline function preDecrement[Function:(this : haxe._Int64.__Int64) -> haxe.Int64]
		[Arg:haxe._Int64.__Int64] [Local this(111498):haxe._Int64.__Int64]
		[Block:Dynamic]
			[Binop:haxe._Int64.__Int64]
				[Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]
				=
				[Block:haxe.Int64]
					[Var high(111502):haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local this(111498):haxe._Int64.__Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
					[Var low(111503):haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local this(111498):haxe._Int64.__Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
					[Var x(111504):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111502):haxe.Int32:haxe.Int32]
							[Local low(111503):haxe.Int32:haxe.Int32]
					[Var this(111505):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111505):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111504):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111505):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[If:Void]
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						==
						[Const:Int] 0
				[Then:haxe.Int32] [Block:haxe.Int32]
					[Cast:haxe.Int32]
						[Block:Int]
							[Var ret(111509):Int]
								[Unop:Int]
									--
									Postfix
									[Field:haxe.Int32]
										[Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
							[Binop:Int]
								[Field:haxe.Int32]
									[Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								=
								[Parenthesis:Int]
									[Cast:Int]
										[Field:haxe.Int32]
											[Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
							[Local ret(111509):Int:Int]
			[Cast:haxe.Int32]
				[Block:Int]
					[Var ret(111513):Int]
						[Unop:Int]
							--
							Postfix
							[Field:haxe.Int32]
								[Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
					[Binop:Int]
						[Field:haxe.Int32]
							[Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						=
						[Parenthesis:Int]
							[Cast:Int]
								[Field:haxe.Int32]
									[Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
					[Local ret(111513):Int:Int]
			[Return:Dynamic] [Cast:haxe.Int64] [Local this(111498):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:impl @:op(A--)
	static inline function postDecrement[Function:(this : haxe._Int64.__Int64) -> haxe.Int64]
		[Arg:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64]
		[Block:Dynamic]
			[Var ret(111515):haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe._Int64.__Int64]
			[Block:haxe.Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(111514):haxe._Int64.__Int64:haxe.Int64]
					=
					[Block:haxe.Int64]
						[Var high(111519):haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
						[Var low(111520):haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
						[Var x(111521):haxe._Int64.__Int64]
							[New:haxe._Int64.___Int64]
								haxe._Int64.___Int64
								[Local high(111519):haxe.Int32:haxe.Int32]
								[Local low(111520):haxe.Int32:haxe.Int32]
						[Var this(111522):haxe._Int64.__Int64]
						[Binop:haxe._Int64.__Int64]
							[Local this(111522):haxe._Int64.__Int64:haxe._Int64.__Int64]
							=
							[Local x(111521):haxe._Int64.__Int64:haxe._Int64.__Int64]
						[Cast:haxe.Int64] [Local this(111522):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[If:Void]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							==
							[Const:Int] 0
					[Then:haxe.Int32] [Block:haxe.Int32]
						[Cast:haxe.Int32]
							[Block:Int]
								[Var ret(111523):Int]
									[Unop:Int]
										--
										Postfix
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
								[Binop:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									=
									[Parenthesis:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
								[Local ret(111523):Int:Int]
				[Cast:haxe.Int32]
					[Block:Int]
						[Var ret(111524):Int]
							[Unop:Int]
								--
								Postfix
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
						[Binop:Int]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							=
							[Parenthesis:Int]
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
						[Local ret(111524):Int:Int]
				[Cast:haxe.Int64] [Cast:haxe._Int64.__Int64] [Local this(111514):haxe._Int64.__Int64:haxe.Int64]
			[Return:Dynamic] [Local ret(111515):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A + B)
	public static inline function add[Function:(a : haxe.Int64, b : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111332):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111333):haxe.Int64]
		[Block:Dynamic]
			[Var high(111344):haxe.Int32]
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111332):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
							+
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(111333):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
			[Var low(111355):haxe.Int32]
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111332):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
							+
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(111333):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
			[If:Void]
				[Binop:Bool]
					[Call:Int]
						[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
							[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
							[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
								haxe._Int32.Int32_Impl_
								ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
						[Local low(111355):haxe.Int32:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(111332):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
					<
					[Const:Int] 0
				[Then:haxe.Int32] [Block:haxe.Int32]
					[Cast:haxe.Int32]
						[Block:Int]
							[Var ret(111362):Int]
								[Unop:Int]
									++
									Postfix
									[Local high(111344):haxe.Int32:haxe.Int32]
							[Binop:Int]
								[Local high(111344):haxe.Int32:haxe.Int32]
								=
								[Parenthesis:Int] [Cast:Int] [Local high(111344):haxe.Int32:haxe.Int32]
							[Local ret(111362):Int:Int]
			[Return:Dynamic]
				[Block:haxe.Int64]
					[Var x(111367):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111344):haxe.Int32:haxe.Int32]
							[Local low(111355):haxe.Int32:haxe.Int32]
					[Var this(111368):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111368):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111367):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111368):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A + B) @:commutative
	static inline function addInt[Function:(a : haxe.Int64, b : Int) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111525):haxe.Int64]
		[Arg:Int] [Local b(111526):Int]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var b(111535):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111530):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111526):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111526):Int:Int]
							[Var this(111531):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111531):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111530):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111531):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Var high(111536):haxe.Int32]
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111525):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
								+
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111535):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
				[Var low(111537):haxe.Int32]
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111525):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
								+
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111535):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
				[If:Void]
					[Binop:Bool]
						[Call:Int]
							[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
								[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
								[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
									haxe._Int32.Int32_Impl_
									ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
							[Local low(111537):haxe.Int32:haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111525):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
						<
						[Const:Int] 0
					[Then:haxe.Int32] [Block:haxe.Int32]
						[Cast:haxe.Int32]
							[Block:Int]
								[Var ret(111538):Int]
									[Unop:Int]
										++
										Postfix
										[Local high(111536):haxe.Int32:haxe.Int32]
								[Binop:Int]
									[Local high(111536):haxe.Int32:haxe.Int32]
									=
									[Parenthesis:Int] [Cast:Int] [Local high(111536):haxe.Int32:haxe.Int32]
								[Local ret(111538):Int:Int]
				[Block:haxe.Int64]
					[Var x(111539):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111536):haxe.Int32:haxe.Int32]
							[Local low(111537):haxe.Int32:haxe.Int32]
					[Var this(111540):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111540):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111539):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111540):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A - B)
	public static inline function sub[Function:(a : haxe.Int64, b : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111004):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111005):haxe.Int64]
		[Block:Dynamic]
			[Var high(111016):haxe.Int32]
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111004):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
							-
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(111005):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
			[Var low(111027):haxe.Int32]
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111004):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
							-
							[Cast:Int]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local b(111005):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
			[If:Void]
				[Binop:Bool]
					[Call:Int]
						[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
							[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
							[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
								haxe._Int32.Int32_Impl_
								ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(111004):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(111005):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
					<
					[Const:Int] 0
				[Then:haxe.Int32] [Block:haxe.Int32]
					[Cast:haxe.Int32]
						[Block:Int]
							[Var ret(111042):Int]
								[Unop:Int]
									--
									Postfix
									[Local high(111016):haxe.Int32:haxe.Int32]
							[Binop:Int]
								[Local high(111016):haxe.Int32:haxe.Int32]
								=
								[Parenthesis:Int] [Cast:Int] [Local high(111016):haxe.Int32:haxe.Int32]
							[Local ret(111042):Int:Int]
			[Return:Dynamic]
				[Block:haxe.Int64]
					[Var x(111047):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111016):haxe.Int32:haxe.Int32]
							[Local low(111027):haxe.Int32:haxe.Int32]
					[Var this(111048):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111048):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111047):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111048):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A - B)
	static inline function subInt[Function:(a : haxe.Int64, b : Int) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111541):haxe.Int64]
		[Arg:Int] [Local b(111542):Int]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var b(111551):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111546):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111542):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111542):Int:Int]
							[Var this(111547):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111547):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111546):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111547):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Var high(111552):haxe.Int32]
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111541):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
								-
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111551):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
				[Var low(111553):haxe.Int32]
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111541):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
								-
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111551):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
				[If:Void]
					[Binop:Bool]
						[Call:Int]
							[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
								[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
								[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
									haxe._Int32.Int32_Impl_
									ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111541):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(111551):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
						<
						[Const:Int] 0
					[Then:haxe.Int32] [Block:haxe.Int32]
						[Cast:haxe.Int32]
							[Block:Int]
								[Var ret(111554):Int]
									[Unop:Int]
										--
										Postfix
										[Local high(111552):haxe.Int32:haxe.Int32]
								[Binop:Int]
									[Local high(111552):haxe.Int32:haxe.Int32]
									=
									[Parenthesis:Int] [Cast:Int] [Local high(111552):haxe.Int32:haxe.Int32]
								[Local ret(111554):Int:Int]
				[Block:haxe.Int64]
					[Var x(111555):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111552):haxe.Int32:haxe.Int32]
							[Local low(111553):haxe.Int32:haxe.Int32]
					[Var this(111556):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111556):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111555):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111556):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A - B)
	static inline function intSub[Function:(a : Int, b : haxe.Int64) -> haxe.Int64]
		[Arg:Int] [Local a(111557):Int]
		[Arg:haxe.Int64] [Local b(111558):haxe.Int64]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var a(111566):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111562):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local a(111557):Int:Int]
										>>
										[Const:Int] 31
									[Local a(111557):Int:Int]
							[Var this(111563):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111563):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111562):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111563):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Var high(111568):haxe.Int32]
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111566):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
								-
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111558):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
				[Var low(111569):haxe.Int32]
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111566):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
								-
								[Cast:Int]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111558):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
				[If:Void]
					[Binop:Bool]
						[Call:Int]
							[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
								[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
								[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
									haxe._Int32.Int32_Impl_
									ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111566):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(111558):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
						<
						[Const:Int] 0
					[Then:haxe.Int32] [Block:haxe.Int32]
						[Cast:haxe.Int32]
							[Block:Int]
								[Var ret(111570):Int]
									[Unop:Int]
										--
										Postfix
										[Local high(111568):haxe.Int32:haxe.Int32]
								[Binop:Int]
									[Local high(111568):haxe.Int32:haxe.Int32]
									=
									[Parenthesis:Int] [Cast:Int] [Local high(111568):haxe.Int32:haxe.Int32]
								[Local ret(111570):Int:Int]
				[Block:haxe.Int64]
					[Var x(111571):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111568):haxe.Int32:haxe.Int32]
							[Local low(111569):haxe.Int32:haxe.Int32]
					[Var this(111572):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111572):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111571):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111572):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A * B)
	public static inline function mul[Function:(a : haxe.Int64, b : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111221):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111222):haxe.Int64]
		[Block:Dynamic]
			[Var mask(111223):Int] [Const:Int] 65535
			[Var al(111227):haxe.Int32]
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(111221):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						&
						[Local mask(111223):Int:Int]
			[Var ah(111231):haxe.Int32]
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(111221):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						>>>
						[Const:Int] 16
			[Var bl(111235):haxe.Int32]
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(111222):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						&
						[Local mask(111223):Int:Int]
			[Var bh(111239):haxe.Int32]
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(111222):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						>>>
						[Const:Int] 16
			[Var p00(111240):haxe.Int32]
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Local al(111227):haxe.Int32:haxe.Int32]
						*
						[Local bl(111235):haxe.Int32:haxe.Int32]
			[Var p10(111241):haxe.Int32]
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Local ah(111231):haxe.Int32:haxe.Int32]
						*
						[Local bl(111235):haxe.Int32:haxe.Int32]
			[Var p01(111242):haxe.Int32]
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Local al(111227):haxe.Int32:haxe.Int32]
						*
						[Local bh(111239):haxe.Int32:haxe.Int32]
			[Var p11(111243):haxe.Int32]
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Local ah(111231):haxe.Int32:haxe.Int32]
						*
						[Local bh(111239):haxe.Int32:haxe.Int32]
			[Var low(111244):haxe.Int32] [Local p00(111240):haxe.Int32:haxe.Int32]
			[Var high(111253):haxe.Int32]
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int]
								[Cast:haxe.Int32]
									[Binop:Int]
										[Cast:Int] [Local p11(111243):haxe.Int32:haxe.Int32]
										+
										[Parenthesis:Int]
											[Cast:Int]
												[Binop:haxe.Int32]
													[Local p01(111242):haxe.Int32:haxe.Int32]
													>>>
													[Const:Int] 16
							+
							[Cast:Int]
								[Binop:haxe.Int32]
									[Local p10(111241):haxe.Int32:haxe.Int32]
									>>>
									[Const:Int] 16
			[Binop:haxe.Int32]
				[Local p01(111242):haxe.Int32:haxe.Int32]
				=
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Local p01(111242):haxe.Int32:haxe.Int32]
						<<
						[Const:Int] 16
			[Binop:haxe.Int32]
				[Local low(111244):haxe.Int32:haxe.Int32]
				=
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int] [Local low(111244):haxe.Int32:haxe.Int32]
							+
							[Cast:Int] [Local p01(111242):haxe.Int32:haxe.Int32]
			[If:Void]
				[Binop:Bool]
					[Call:Int]
						[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
							[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
							[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
								haxe._Int32.Int32_Impl_
								ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
						[Local low(111244):haxe.Int32:haxe.Int32]
						[Local p01(111242):haxe.Int32:haxe.Int32]
					<
					[Const:Int] 0
				[Then:haxe.Int32] [Block:haxe.Int32]
					[Cast:haxe.Int32]
						[Block:Int]
							[Var ret(111263):Int]
								[Unop:Int]
									++
									Postfix
									[Local high(111253):haxe.Int32:haxe.Int32]
							[Binop:Int]
								[Local high(111253):haxe.Int32:haxe.Int32]
								=
								[Parenthesis:Int] [Cast:Int] [Local high(111253):haxe.Int32:haxe.Int32]
							[Local ret(111263):Int:Int]
			[Binop:haxe.Int32]
				[Local p10(111241):haxe.Int32:haxe.Int32]
				=
				[Cast:haxe.Int32]
					[Binop:haxe.Int32]
						[Local p10(111241):haxe.Int32:haxe.Int32]
						<<
						[Const:Int] 16
			[Binop:haxe.Int32]
				[Local low(111244):haxe.Int32:haxe.Int32]
				=
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int] [Local low(111244):haxe.Int32:haxe.Int32]
							+
							[Cast:Int] [Local p10(111241):haxe.Int32:haxe.Int32]
			[If:Void]
				[Binop:Bool]
					[Call:Int]
						[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
							[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
							[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
								haxe._Int32.Int32_Impl_
								ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
						[Local low(111244):haxe.Int32:haxe.Int32]
						[Local p10(111241):haxe.Int32:haxe.Int32]
					<
					[Const:Int] 0
				[Then:haxe.Int32] [Block:haxe.Int32]
					[Cast:haxe.Int32]
						[Block:Int]
							[Var ret(111273):Int]
								[Unop:Int]
									++
									Postfix
									[Local high(111253):haxe.Int32:haxe.Int32]
							[Binop:Int]
								[Local high(111253):haxe.Int32:haxe.Int32]
								=
								[Parenthesis:Int] [Cast:Int] [Local high(111253):haxe.Int32:haxe.Int32]
							[Local ret(111273):Int:Int]
			[Binop:haxe.Int32]
				[Local high(111253):haxe.Int32:haxe.Int32]
				=
				[Cast:haxe.Int32]
					[Parenthesis:Int]
						[Binop:Int]
							[Cast:Int] [Local high(111253):haxe.Int32:haxe.Int32]
							+
							[Cast:Int]
								[Cast:haxe.Int32]
									[Binop:Int]
										[Cast:Int]
											[Binop:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local a(111221):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														low:haxe.Int32
												*
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111222):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
										+
										[Cast:Int]
											[Binop:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local a(111221):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												*
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111222):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														low:haxe.Int32
			[Return:Dynamic]
				[Block:haxe.Int64]
					[Var x(111299):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111253):haxe.Int32:haxe.Int32]
							[Local low(111244):haxe.Int32:haxe.Int32]
					[Var this(111300):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111300):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111299):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111300):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A * B) @:commutative
	static inline function mulInt[Function:(a : haxe.Int64, b : Int) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111573):haxe.Int64]
		[Arg:Int] [Local b(111574):Int]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var b(111583):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111578):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111574):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111574):Int:Int]
							[Var this(111579):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111579):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111578):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111579):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Var mask(111584):Int] [Const:Int] 65535
				[Var al(111585):haxe.Int32]
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111573):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							&
							[Local mask(111584):Int:Int]
				[Var ah(111586):haxe.Int32]
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111573):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							>>>
							[Const:Int] 16
				[Var bl(111587):haxe.Int32]
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(111583):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							&
							[Local mask(111584):Int:Int]
				[Var bh(111588):haxe.Int32]
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(111583):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							>>>
							[Const:Int] 16
				[Var p00(111589):haxe.Int32]
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Local al(111585):haxe.Int32:haxe.Int32]
							*
							[Local bl(111587):haxe.Int32:haxe.Int32]
				[Var p10(111590):haxe.Int32]
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Local ah(111586):haxe.Int32:haxe.Int32]
							*
							[Local bl(111587):haxe.Int32:haxe.Int32]
				[Var p01(111591):haxe.Int32]
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Local al(111585):haxe.Int32:haxe.Int32]
							*
							[Local bh(111588):haxe.Int32:haxe.Int32]
				[Var p11(111592):haxe.Int32]
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Local ah(111586):haxe.Int32:haxe.Int32]
							*
							[Local bh(111588):haxe.Int32:haxe.Int32]
				[Var low(111593):haxe.Int32] [Local p00(111589):haxe.Int32:haxe.Int32]
				[Var high(111594):haxe.Int32]
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int]
									[Cast:haxe.Int32]
										[Binop:Int]
											[Cast:Int] [Local p11(111592):haxe.Int32:haxe.Int32]
											+
											[Parenthesis:Int]
												[Cast:Int]
													[Binop:haxe.Int32]
														[Local p01(111591):haxe.Int32:haxe.Int32]
														>>>
														[Const:Int] 16
								+
								[Cast:Int]
									[Binop:haxe.Int32]
										[Local p10(111590):haxe.Int32:haxe.Int32]
										>>>
										[Const:Int] 16
				[Binop:haxe.Int32]
					[Local p01(111591):haxe.Int32:haxe.Int32]
					=
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Local p01(111591):haxe.Int32:haxe.Int32]
							<<
							[Const:Int] 16
				[Binop:haxe.Int32]
					[Local low(111593):haxe.Int32:haxe.Int32]
					=
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int] [Local low(111593):haxe.Int32:haxe.Int32]
								+
								[Cast:Int] [Local p01(111591):haxe.Int32:haxe.Int32]
				[If:Void]
					[Binop:Bool]
						[Call:Int]
							[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
								[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
								[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
									haxe._Int32.Int32_Impl_
									ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
							[Local low(111593):haxe.Int32:haxe.Int32]
							[Local p01(111591):haxe.Int32:haxe.Int32]
						<
						[Const:Int] 0
					[Then:haxe.Int32] [Block:haxe.Int32]
						[Cast:haxe.Int32]
							[Block:Int]
								[Var ret(111595):Int]
									[Unop:Int]
										++
										Postfix
										[Local high(111594):haxe.Int32:haxe.Int32]
								[Binop:Int]
									[Local high(111594):haxe.Int32:haxe.Int32]
									=
									[Parenthesis:Int] [Cast:Int] [Local high(111594):haxe.Int32:haxe.Int32]
								[Local ret(111595):Int:Int]
				[Binop:haxe.Int32]
					[Local p10(111590):haxe.Int32:haxe.Int32]
					=
					[Cast:haxe.Int32]
						[Binop:haxe.Int32]
							[Local p10(111590):haxe.Int32:haxe.Int32]
							<<
							[Const:Int] 16
				[Binop:haxe.Int32]
					[Local low(111593):haxe.Int32:haxe.Int32]
					=
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int] [Local low(111593):haxe.Int32:haxe.Int32]
								+
								[Cast:Int] [Local p10(111590):haxe.Int32:haxe.Int32]
				[If:Void]
					[Binop:Bool]
						[Call:Int]
							[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
								[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
								[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
									haxe._Int32.Int32_Impl_
									ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
							[Local low(111593):haxe.Int32:haxe.Int32]
							[Local p10(111590):haxe.Int32:haxe.Int32]
						<
						[Const:Int] 0
					[Then:haxe.Int32] [Block:haxe.Int32]
						[Cast:haxe.Int32]
							[Block:Int]
								[Var ret(111596):Int]
									[Unop:Int]
										++
										Postfix
										[Local high(111594):haxe.Int32:haxe.Int32]
								[Binop:Int]
									[Local high(111594):haxe.Int32:haxe.Int32]
									=
									[Parenthesis:Int] [Cast:Int] [Local high(111594):haxe.Int32:haxe.Int32]
								[Local ret(111596):Int:Int]
				[Binop:haxe.Int32]
					[Local high(111594):haxe.Int32:haxe.Int32]
					=
					[Cast:haxe.Int32]
						[Parenthesis:Int]
							[Binop:Int]
								[Cast:Int] [Local high(111594):haxe.Int32:haxe.Int32]
								+
								[Cast:Int]
									[Cast:haxe.Int32]
										[Binop:Int]
											[Cast:Int]
												[Binop:haxe.Int32]
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local a(111573):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															low:haxe.Int32
													*
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local b(111583):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															high:haxe.Int32
											+
											[Cast:Int]
												[Binop:haxe.Int32]
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local a(111573):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															high:haxe.Int32
													*
													[Field:haxe.Int32]
														[Cast:haxe._Int64.__Int64] [Local b(111583):haxe.Int64:haxe.Int64]
														[FInstance:haxe.Int32]
															haxe._Int64.___Int64
															low:haxe.Int32
				[Block:haxe.Int64]
					[Var x(111597):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Local high(111594):haxe.Int32:haxe.Int32]
							[Local low(111593):haxe.Int32:haxe.Int32]
					[Var this(111598):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111598):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111597):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111598):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A / B)
	public static inline function div[Function:(a : haxe.Int64, b : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111599):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111600):haxe.Int64]
		[Return:Dynamic]
			[Field:haxe.Int64]
				[Call:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
					[Field:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
						[TypeExpr haxe._Int64.Int64_Impl_:Abstract<haxe.Int64>]
						[FStatic:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
							haxe._Int64.Int64_Impl_
							divMod:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }
					[Local a(111599):haxe.Int64:haxe.Int64]
					[Local b(111600):haxe.Int64:haxe.Int64]
				[FAnon:haxe.Int64] quotient:haxe.Int64

	@:op(A / B)
	static inline function divInt[Function:(a : haxe.Int64, b : Int) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111601):haxe.Int64]
		[Arg:Int] [Local b(111602):Int]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var b(111611):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111606):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111602):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111602):Int:Int]
							[Var this(111607):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111607):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111606):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111607):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Field:haxe.Int64]
					[Call:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
						[Field:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
							[TypeExpr haxe._Int64.Int64_Impl_:Abstract<haxe.Int64>]
							[FStatic:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
								haxe._Int64.Int64_Impl_
								divMod:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }
						[Local a(111601):haxe.Int64:haxe.Int64]
						[Local b(111611):haxe.Int64:haxe.Int64]
					[FAnon:haxe.Int64] quotient:haxe.Int64

	@:op(A / B)
	static inline function intDiv[Function:(a : Int, b : haxe.Int64) -> haxe.Int64]
		[Arg:Int] [Local a(111612):Int]
		[Arg:haxe.Int64] [Local b(111613):haxe.Int64]
		[Return:Dynamic]
			[Meta:haxe.Int64]
				:implicitCast
				[Block:haxe.Int64]
					[Var x(111628):Int]
						[Block:Int]
							[Var x(111625):haxe.Int64]
								[Block:haxe.Int64]
									[Var a(111621):haxe.Int64]
										[Meta:haxe.Int64]
											:implicitCast
											[Block:haxe.Int64]
												[Var x(111617):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Binop:Int]
															[Local a(111612):Int:Int]
															>>
															[Const:Int] 31
														[Local a(111612):Int:Int]
												[Var this(111618):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(111618):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(111617):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(111618):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Field:haxe.Int64]
										[Call:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
											[Field:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
												[TypeExpr haxe._Int64.Int64_Impl_:Abstract<haxe.Int64>]
												[FStatic:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
													haxe._Int64.Int64_Impl_
													divMod:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }
											[Local a(111621):haxe.Int64:haxe.Int64]
											[Local b(111613):haxe.Int64:haxe.Int64]
										[FAnon:haxe.Int64] quotient:haxe.Int64
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local x(111625):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
										!=
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local x(111625):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											>>
											[Const:Int] 31
								[Then:Unknown<28>] [Throw:Unknown<28>]
									[Throw:Unknown<28>]
										[Call:Any]
											[Field:(value : Any) -> Any]
												[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
												[FStatic:(value : Any) -> Any]
													haxe.Exception
													thrown:(value : Any) -> Any
											[Const:String] "Overflow"
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local x(111625):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
					[Var x(111629):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Binop:Int]
								[Local x(111628):Int:Int]
								>>
								[Const:Int] 31
							[Local x(111628):Int:Int]
					[Var this(111630):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111630):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111629):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111630):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A % B)
	public static inline function mod[Function:(a : haxe.Int64, b : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111631):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111632):haxe.Int64]
		[Return:Dynamic]
			[Field:haxe.Int64]
				[Call:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
					[Field:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
						[TypeExpr haxe._Int64.Int64_Impl_:Abstract<haxe.Int64>]
						[FStatic:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
							haxe._Int64.Int64_Impl_
							divMod:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }
					[Local a(111631):haxe.Int64:haxe.Int64]
					[Local b(111632):haxe.Int64:haxe.Int64]
				[FAnon:haxe.Int64] modulus:haxe.Int64

	@:op(A % B)
	static inline function modInt[Function:(a : haxe.Int64, b : Int) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111633):haxe.Int64]
		[Arg:Int] [Local b(111634):Int]
		[Return:Dynamic]
			[Meta:haxe.Int64]
				:implicitCast
				[Block:haxe.Int64]
					[Var x(111649):Int]
						[Block:Int]
							[Var x(111646):haxe.Int64]
								[Block:haxe.Int64]
									[Var b(111643):haxe.Int64]
										[Meta:haxe.Int64]
											:implicitCast
											[Block:haxe.Int64]
												[Var x(111638):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Binop:Int]
															[Local b(111634):Int:Int]
															>>
															[Const:Int] 31
														[Local b(111634):Int:Int]
												[Var this(111639):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(111639):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(111638):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(111639):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Field:haxe.Int64]
										[Call:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
											[Field:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
												[TypeExpr haxe._Int64.Int64_Impl_:Abstract<haxe.Int64>]
												[FStatic:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
													haxe._Int64.Int64_Impl_
													divMod:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }
											[Local a(111633):haxe.Int64:haxe.Int64]
											[Local b(111643):haxe.Int64:haxe.Int64]
										[FAnon:haxe.Int64] modulus:haxe.Int64
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local x(111646):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
										!=
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local x(111646):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											>>
											[Const:Int] 31
								[Then:Unknown<28>] [Throw:Unknown<28>]
									[Throw:Unknown<28>]
										[Call:Any]
											[Field:(value : Any) -> Any]
												[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
												[FStatic:(value : Any) -> Any]
													haxe.Exception
													thrown:(value : Any) -> Any
											[Const:String] "Overflow"
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local x(111646):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
					[Var x(111650):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Binop:Int]
								[Local x(111649):Int:Int]
								>>
								[Const:Int] 31
							[Local x(111649):Int:Int]
					[Var this(111651):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111651):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111650):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111651):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A % B)
	static inline function intMod[Function:(a : Int, b : haxe.Int64) -> haxe.Int64]
		[Arg:Int] [Local a(111652):Int]
		[Arg:haxe.Int64] [Local b(111653):haxe.Int64]
		[Return:Dynamic]
			[Meta:haxe.Int64]
				:implicitCast
				[Block:haxe.Int64]
					[Var x(111668):Int]
						[Block:Int]
							[Var x(111665):haxe.Int64]
								[Block:haxe.Int64]
									[Var a(111661):haxe.Int64]
										[Meta:haxe.Int64]
											:implicitCast
											[Block:haxe.Int64]
												[Var x(111657):haxe._Int64.__Int64]
													[New:haxe._Int64.___Int64]
														haxe._Int64.___Int64
														[Binop:Int]
															[Local a(111652):Int:Int]
															>>
															[Const:Int] 31
														[Local a(111652):Int:Int]
												[Var this(111658):haxe._Int64.__Int64]
												[Binop:haxe._Int64.__Int64]
													[Local this(111658):haxe._Int64.__Int64:haxe._Int64.__Int64]
													=
													[Local x(111657):haxe._Int64.__Int64:haxe._Int64.__Int64]
												[Cast:haxe.Int64] [Local this(111658):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Field:haxe.Int64]
										[Call:{ quotient : haxe.Int64, modulus : haxe.Int64 }]
											[Field:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
												[TypeExpr haxe._Int64.Int64_Impl_:Abstract<haxe.Int64>]
												[FStatic:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }]
													haxe._Int64.Int64_Impl_
													divMod:(dividend : haxe.Int64, divisor : haxe.Int64) -> { quotient : haxe.Int64, modulus : haxe.Int64 }
											[Local a(111661):haxe.Int64:haxe.Int64]
											[Local b(111653):haxe.Int64:haxe.Int64]
										[FAnon:haxe.Int64] modulus:haxe.Int64
							[If:Void]
								[Parenthesis:Bool]
									[Binop:Bool]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local x(111665):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
										!=
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local x(111665):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											>>
											[Const:Int] 31
								[Then:Unknown<28>] [Throw:Unknown<28>]
									[Throw:Unknown<28>]
										[Call:Any]
											[Field:(value : Any) -> Any]
												[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
												[FStatic:(value : Any) -> Any]
													haxe.Exception
													thrown:(value : Any) -> Any
											[Const:String] "Overflow"
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local x(111665):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
					[Var x(111669):haxe._Int64.__Int64]
						[New:haxe._Int64.___Int64]
							haxe._Int64.___Int64
							[Binop:Int]
								[Local x(111668):Int:Int]
								>>
								[Const:Int] 31
							[Local x(111668):Int:Int]
					[Var this(111670):haxe._Int64.__Int64]
					[Binop:haxe._Int64.__Int64]
						[Local this(111670):haxe._Int64.__Int64:haxe._Int64.__Int64]
						=
						[Local x(111669):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Cast:haxe.Int64] [Local this(111670):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A == B)
	public static inline function eq[Function:(a : haxe.Int64, b : haxe.Int64) -> Bool]
		[Arg:haxe.Int64] [Local a(110649):haxe.Int64]
		[Arg:haxe.Int64] [Local b(110650):haxe.Int64]
		[Return:Dynamic]
			[Binop:Bool]
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(110649):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						==
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(110650):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
				&&
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(110649):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						==
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(110650):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32

	@:op(A == B) @:commutative
	static inline function eqInt[Function:(a : haxe.Int64, b : Int) -> Bool]
		[Arg:haxe.Int64] [Local a(111671):haxe.Int64]
		[Arg:Int] [Local b(111672):Int]
		[Return:Dynamic]
			[Block:Bool]
				[Var b(111681):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111676):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111672):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111672):Int:Int]
							[Var this(111677):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111677):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111676):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111677):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111671):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							==
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(111681):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
					&&
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111671):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							==
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(111681):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32

	@:op(A != B)
	public static inline function neq[Function:(a : haxe.Int64, b : haxe.Int64) -> Bool]
		[Arg:haxe.Int64] [Local a(110754):haxe.Int64]
		[Arg:haxe.Int64] [Local b(110755):haxe.Int64]
		[Return:Dynamic]
			[Binop:Bool]
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(110754):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						!=
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(110755):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
				||
				[Cast:Bool]
					[Binop:Bool]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(110754):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						!=
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(110755):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32

	@:op(A != B) @:commutative
	static inline function neqInt[Function:(a : haxe.Int64, b : Int) -> Bool]
		[Arg:haxe.Int64] [Local a(111682):haxe.Int64]
		[Arg:Int] [Local b(111683):Int]
		[Return:Dynamic]
			[Block:Bool]
				[Var b(111692):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111687):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111683):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111683):Int:Int]
							[Var this(111688):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111688):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111687):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111688):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111682):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
							!=
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(111692):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									high:haxe.Int32
					||
					[Cast:Bool]
						[Binop:Bool]
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local a(111682):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32
							!=
							[Field:haxe.Int32]
								[Cast:haxe._Int64.__Int64] [Local b(111692):haxe.Int64:haxe.Int64]
								[FInstance:haxe.Int32]
									haxe._Int64.___Int64
									low:haxe.Int32

	@:op(A < B)
	static inline function lt[Function:(a : haxe.Int64, b : haxe.Int64) -> Bool]
		[Arg:haxe.Int64] [Local a(111693):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111694):haxe.Int64]
		[Return:Dynamic]
			[Binop:Bool]
				[Block:Int]
					[Var v(111699):haxe.Int32]
						[Cast:haxe.Int32]
							[Parenthesis:Int]
								[Binop:Int]
									[Cast:Int]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111693):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
									-
									[Cast:Int]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111694):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
					[Binop:haxe.Int32]
						[Local v(111699):haxe.Int32:haxe.Int32]
						=
						[If:haxe.Int32]
							[Cast:Bool]
								[Binop:Bool]
									[Local v(111699):haxe.Int32:haxe.Int32]
									!=
									[Const:Int] 0
							[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111699):haxe.Int32:haxe.Int32]
							[Else:Int] [Block:Int]
								[Call:Int]
									[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
										[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
										[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
											haxe._Int32.Int32_Impl_
											ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111693):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111694):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
					[If:Int]
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111693):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								<
								[Const:Int] 0
						[Then:Int] [Block:Int]
							[Parenthesis:Int]
								[If:Int]
									[Cast:Bool]
										[Binop:Bool]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111694):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											<
											[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111699):haxe.Int32:haxe.Int32]
									[Else:Int] [Block:Int] [Const:Int] -1
						[Else:Int] [Block:Int]
							[Parenthesis:Int]
								[If:Int]
									[Cast:Bool]
										[Binop:Bool]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111694):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>=
											[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111699):haxe.Int32:haxe.Int32]
									[Else:Int] [Block:Int] [Const:Int] 1
				<
				[Const:Int] 0

	@:op(A < B)
	static inline function ltInt[Function:(a : haxe.Int64, b : Int) -> Bool]
		[Arg:haxe.Int64] [Local a(111700):haxe.Int64]
		[Arg:Int] [Local b(111701):Int]
		[Return:Dynamic]
			[Block:Bool]
				[Var b(111710):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111705):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111701):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111701):Int:Int]
							[Var this(111706):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111706):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111705):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111706):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Block:Int]
						[Var v(111711):haxe.Int32]
							[Cast:haxe.Int32]
								[Parenthesis:Int]
									[Binop:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111700):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										-
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111710):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
						[Binop:haxe.Int32]
							[Local v(111711):haxe.Int32:haxe.Int32]
							=
							[If:haxe.Int32]
								[Cast:Bool]
									[Binop:Bool]
										[Local v(111711):haxe.Int32:haxe.Int32]
										!=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111711):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111700):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111710):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
						[If:Int]
							[Cast:Bool]
								[Binop:Bool]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111700):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									<
									[Const:Int] 0
							[Then:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111710):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111711):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] -1
							[Else:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111710):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												>=
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111711):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] 1
					<
					[Const:Int] 0

	@:op(A < B)
	static inline function intLt[Function:(a : Int, b : haxe.Int64) -> Bool]
		[Arg:Int] [Local a(111712):Int]
		[Arg:haxe.Int64] [Local b(111713):haxe.Int64]
		[Return:Dynamic]
			[Block:Bool]
				[Var a(111721):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111717):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local a(111712):Int:Int]
										>>
										[Const:Int] 31
									[Local a(111712):Int:Int]
							[Var this(111718):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111718):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111717):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111718):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Block:Int]
						[Var v(111723):haxe.Int32]
							[Cast:haxe.Int32]
								[Parenthesis:Int]
									[Binop:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111721):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										-
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111713):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
						[Binop:haxe.Int32]
							[Local v(111723):haxe.Int32:haxe.Int32]
							=
							[If:haxe.Int32]
								[Cast:Bool]
									[Binop:Bool]
										[Local v(111723):haxe.Int32:haxe.Int32]
										!=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111723):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111721):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111713):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
						[If:Int]
							[Cast:Bool]
								[Binop:Bool]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111721):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									<
									[Const:Int] 0
							[Then:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111713):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111723):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] -1
							[Else:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111713):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												>=
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111723):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] 1
					<
					[Const:Int] 0

	@:op(A <= B)
	static inline function lte[Function:(a : haxe.Int64, b : haxe.Int64) -> Bool]
		[Arg:haxe.Int64] [Local a(111724):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111725):haxe.Int64]
		[Return:Dynamic]
			[Binop:Bool]
				[Block:Int]
					[Var v(111730):haxe.Int32]
						[Cast:haxe.Int32]
							[Parenthesis:Int]
								[Binop:Int]
									[Cast:Int]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111724):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
									-
									[Cast:Int]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111725):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
					[Binop:haxe.Int32]
						[Local v(111730):haxe.Int32:haxe.Int32]
						=
						[If:haxe.Int32]
							[Cast:Bool]
								[Binop:Bool]
									[Local v(111730):haxe.Int32:haxe.Int32]
									!=
									[Const:Int] 0
							[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111730):haxe.Int32:haxe.Int32]
							[Else:Int] [Block:Int]
								[Call:Int]
									[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
										[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
										[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
											haxe._Int32.Int32_Impl_
											ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111724):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111725):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
					[If:Int]
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111724):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								<
								[Const:Int] 0
						[Then:Int] [Block:Int]
							[Parenthesis:Int]
								[If:Int]
									[Cast:Bool]
										[Binop:Bool]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111725):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											<
											[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111730):haxe.Int32:haxe.Int32]
									[Else:Int] [Block:Int] [Const:Int] -1
						[Else:Int] [Block:Int]
							[Parenthesis:Int]
								[If:Int]
									[Cast:Bool]
										[Binop:Bool]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111725):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>=
											[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111730):haxe.Int32:haxe.Int32]
									[Else:Int] [Block:Int] [Const:Int] 1
				<=
				[Const:Int] 0

	@:op(A <= B)
	static inline function lteInt[Function:(a : haxe.Int64, b : Int) -> Bool]
		[Arg:haxe.Int64] [Local a(111731):haxe.Int64]
		[Arg:Int] [Local b(111732):Int]
		[Return:Dynamic]
			[Block:Bool]
				[Var b(111741):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111736):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111732):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111732):Int:Int]
							[Var this(111737):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111737):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111736):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111737):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Block:Int]
						[Var v(111742):haxe.Int32]
							[Cast:haxe.Int32]
								[Parenthesis:Int]
									[Binop:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111731):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										-
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111741):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
						[Binop:haxe.Int32]
							[Local v(111742):haxe.Int32:haxe.Int32]
							=
							[If:haxe.Int32]
								[Cast:Bool]
									[Binop:Bool]
										[Local v(111742):haxe.Int32:haxe.Int32]
										!=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111742):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111731):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111741):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
						[If:Int]
							[Cast:Bool]
								[Binop:Bool]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111731):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									<
									[Const:Int] 0
							[Then:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111741):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111742):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] -1
							[Else:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111741):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												>=
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111742):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] 1
					<=
					[Const:Int] 0

	@:op(A <= B)
	static inline function intLte[Function:(a : Int, b : haxe.Int64) -> Bool]
		[Arg:Int] [Local a(111743):Int]
		[Arg:haxe.Int64] [Local b(111744):haxe.Int64]
		[Return:Dynamic]
			[Block:Bool]
				[Var a(111752):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111748):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local a(111743):Int:Int]
										>>
										[Const:Int] 31
									[Local a(111743):Int:Int]
							[Var this(111749):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111749):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111748):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111749):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Block:Int]
						[Var v(111754):haxe.Int32]
							[Cast:haxe.Int32]
								[Parenthesis:Int]
									[Binop:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111752):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										-
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111744):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
						[Binop:haxe.Int32]
							[Local v(111754):haxe.Int32:haxe.Int32]
							=
							[If:haxe.Int32]
								[Cast:Bool]
									[Binop:Bool]
										[Local v(111754):haxe.Int32:haxe.Int32]
										!=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111754):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111752):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111744):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
						[If:Int]
							[Cast:Bool]
								[Binop:Bool]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111752):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									<
									[Const:Int] 0
							[Then:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111744):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111754):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] -1
							[Else:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111744):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												>=
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111754):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] 1
					<=
					[Const:Int] 0

	@:op(A > B)
	static inline function gt[Function:(a : haxe.Int64, b : haxe.Int64) -> Bool]
		[Arg:haxe.Int64] [Local a(111755):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111756):haxe.Int64]
		[Return:Dynamic]
			[Binop:Bool]
				[Block:Int]
					[Var v(111761):haxe.Int32]
						[Cast:haxe.Int32]
							[Parenthesis:Int]
								[Binop:Int]
									[Cast:Int]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111755):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
									-
									[Cast:Int]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111756):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
					[Binop:haxe.Int32]
						[Local v(111761):haxe.Int32:haxe.Int32]
						=
						[If:haxe.Int32]
							[Cast:Bool]
								[Binop:Bool]
									[Local v(111761):haxe.Int32:haxe.Int32]
									!=
									[Const:Int] 0
							[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111761):haxe.Int32:haxe.Int32]
							[Else:Int] [Block:Int]
								[Call:Int]
									[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
										[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
										[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
											haxe._Int32.Int32_Impl_
											ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111755):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111756):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
					[If:Int]
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111755):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								<
								[Const:Int] 0
						[Then:Int] [Block:Int]
							[Parenthesis:Int]
								[If:Int]
									[Cast:Bool]
										[Binop:Bool]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111756):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											<
											[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111761):haxe.Int32:haxe.Int32]
									[Else:Int] [Block:Int] [Const:Int] -1
						[Else:Int] [Block:Int]
							[Parenthesis:Int]
								[If:Int]
									[Cast:Bool]
										[Binop:Bool]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111756):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>=
											[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111761):haxe.Int32:haxe.Int32]
									[Else:Int] [Block:Int] [Const:Int] 1
				>
				[Const:Int] 0

	@:op(A > B)
	static inline function gtInt[Function:(a : haxe.Int64, b : Int) -> Bool]
		[Arg:haxe.Int64] [Local a(111762):haxe.Int64]
		[Arg:Int] [Local b(111763):Int]
		[Return:Dynamic]
			[Block:Bool]
				[Var b(111772):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111767):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111763):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111763):Int:Int]
							[Var this(111768):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111768):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111767):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111768):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Block:Int]
						[Var v(111773):haxe.Int32]
							[Cast:haxe.Int32]
								[Parenthesis:Int]
									[Binop:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111762):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										-
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111772):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
						[Binop:haxe.Int32]
							[Local v(111773):haxe.Int32:haxe.Int32]
							=
							[If:haxe.Int32]
								[Cast:Bool]
									[Binop:Bool]
										[Local v(111773):haxe.Int32:haxe.Int32]
										!=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111773):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111762):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111772):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
						[If:Int]
							[Cast:Bool]
								[Binop:Bool]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111762):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									<
									[Const:Int] 0
							[Then:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111772):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111773):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] -1
							[Else:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111772):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												>=
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111773):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] 1
					>
					[Const:Int] 0

	@:op(A > B)
	static inline function intGt[Function:(a : Int, b : haxe.Int64) -> Bool]
		[Arg:Int] [Local a(111774):Int]
		[Arg:haxe.Int64] [Local b(111775):haxe.Int64]
		[Return:Dynamic]
			[Block:Bool]
				[Var a(111783):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111779):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local a(111774):Int:Int]
										>>
										[Const:Int] 31
									[Local a(111774):Int:Int]
							[Var this(111780):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111780):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111779):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111780):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Block:Int]
						[Var v(111785):haxe.Int32]
							[Cast:haxe.Int32]
								[Parenthesis:Int]
									[Binop:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111783):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										-
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111775):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
						[Binop:haxe.Int32]
							[Local v(111785):haxe.Int32:haxe.Int32]
							=
							[If:haxe.Int32]
								[Cast:Bool]
									[Binop:Bool]
										[Local v(111785):haxe.Int32:haxe.Int32]
										!=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111785):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111783):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111775):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
						[If:Int]
							[Cast:Bool]
								[Binop:Bool]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111783):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									<
									[Const:Int] 0
							[Then:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111775):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111785):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] -1
							[Else:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111775):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												>=
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111785):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] 1
					>
					[Const:Int] 0

	@:op(A >= B)
	static inline function gte[Function:(a : haxe.Int64, b : haxe.Int64) -> Bool]
		[Arg:haxe.Int64] [Local a(111786):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111787):haxe.Int64]
		[Return:Dynamic]
			[Binop:Bool]
				[Block:Int]
					[Var v(111792):haxe.Int32]
						[Cast:haxe.Int32]
							[Parenthesis:Int]
								[Binop:Int]
									[Cast:Int]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111786):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
									-
									[Cast:Int]
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111787):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												high:haxe.Int32
					[Binop:haxe.Int32]
						[Local v(111792):haxe.Int32:haxe.Int32]
						=
						[If:haxe.Int32]
							[Cast:Bool]
								[Binop:Bool]
									[Local v(111792):haxe.Int32:haxe.Int32]
									!=
									[Const:Int] 0
							[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111792):haxe.Int32:haxe.Int32]
							[Else:Int] [Block:Int]
								[Call:Int]
									[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
										[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
										[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
											haxe._Int32.Int32_Impl_
											ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111786):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local b(111787):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											low:haxe.Int32
					[If:Int]
						[Cast:Bool]
							[Binop:Bool]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111786):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
								<
								[Const:Int] 0
						[Then:Int] [Block:Int]
							[Parenthesis:Int]
								[If:Int]
									[Cast:Bool]
										[Binop:Bool]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111787):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											<
											[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111792):haxe.Int32:haxe.Int32]
									[Else:Int] [Block:Int] [Const:Int] -1
						[Else:Int] [Block:Int]
							[Parenthesis:Int]
								[If:Int]
									[Cast:Bool]
										[Binop:Bool]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111787):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>=
											[Const:Int] 0
									[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111792):haxe.Int32:haxe.Int32]
									[Else:Int] [Block:Int] [Const:Int] 1
				>=
				[Const:Int] 0

	@:op(A >= B)
	static inline function gteInt[Function:(a : haxe.Int64, b : Int) -> Bool]
		[Arg:haxe.Int64] [Local a(111793):haxe.Int64]
		[Arg:Int] [Local b(111794):Int]
		[Return:Dynamic]
			[Block:Bool]
				[Var b(111803):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111798):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local b(111794):Int:Int]
										>>
										[Const:Int] 31
									[Local b(111794):Int:Int]
							[Var this(111799):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111799):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111798):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111799):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Block:Int]
						[Var v(111804):haxe.Int32]
							[Cast:haxe.Int32]
								[Parenthesis:Int]
									[Binop:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111793):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										-
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111803):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
						[Binop:haxe.Int32]
							[Local v(111804):haxe.Int32:haxe.Int32]
							=
							[If:haxe.Int32]
								[Cast:Bool]
									[Binop:Bool]
										[Local v(111804):haxe.Int32:haxe.Int32]
										!=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111804):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111793):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111803):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
						[If:Int]
							[Cast:Bool]
								[Binop:Bool]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111793):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									<
									[Const:Int] 0
							[Then:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111803):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111804):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] -1
							[Else:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111803):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												>=
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111804):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] 1
					>=
					[Const:Int] 0

	@:op(A >= B)
	static inline function intGte[Function:(a : Int, b : haxe.Int64) -> Bool]
		[Arg:Int] [Local a(111805):Int]
		[Arg:haxe.Int64] [Local b(111806):haxe.Int64]
		[Return:Dynamic]
			[Block:Bool]
				[Var a(111814):haxe.Int64]
					[Meta:haxe.Int64]
						:implicitCast
						[Block:haxe.Int64]
							[Var x(111810):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Binop:Int]
										[Local a(111805):Int:Int]
										>>
										[Const:Int] 31
									[Local a(111805):Int:Int]
							[Var this(111811):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111811):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111810):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111811):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Binop:Bool]
					[Block:Int]
						[Var v(111816):haxe.Int32]
							[Cast:haxe.Int32]
								[Parenthesis:Int]
									[Binop:Int]
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111814):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
										-
										[Cast:Int]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local b(111806):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
						[Binop:haxe.Int32]
							[Local v(111816):haxe.Int32:haxe.Int32]
							=
							[If:haxe.Int32]
								[Cast:Bool]
									[Binop:Bool]
										[Local v(111816):haxe.Int32:haxe.Int32]
										!=
										[Const:Int] 0
								[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111816):haxe.Int32:haxe.Int32]
								[Else:Int] [Block:Int]
									[Call:Int]
										[Field:(a : haxe.Int32, b : haxe.Int32) -> Int]
											[TypeExpr haxe._Int32.Int32_Impl_:Abstract<haxe.Int32>]
											[FStatic:(a : haxe.Int32, b : haxe.Int32) -> Int]
												haxe._Int32.Int32_Impl_
												ucompare:(a : haxe.Int32, b : haxe.Int32) -> Int
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local a(111814):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
										[Field:haxe.Int32]
											[Cast:haxe._Int64.__Int64] [Local b(111806):haxe.Int64:haxe.Int64]
											[FInstance:haxe.Int32]
												haxe._Int64.___Int64
												low:haxe.Int32
						[If:Int]
							[Cast:Bool]
								[Binop:Bool]
									[Field:haxe.Int32]
										[Cast:haxe._Int64.__Int64] [Local a(111814):haxe.Int64:haxe.Int64]
										[FInstance:haxe.Int32]
											haxe._Int64.___Int64
											high:haxe.Int32
									<
									[Const:Int] 0
							[Then:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111806):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111816):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] -1
							[Else:Int] [Block:Int]
								[Parenthesis:Int]
									[If:Int]
										[Cast:Bool]
											[Binop:Bool]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local b(111806):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												>=
												[Const:Int] 0
										[Then:haxe.Int32] [Block:haxe.Int32] [Local v(111816):haxe.Int32:haxe.Int32]
										[Else:Int] [Block:Int] [Const:Int] 1
					>=
					[Const:Int] 0

	@:op(~A)
	static inline function complement[Function:(a : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111817):haxe.Int64]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var high(111826):haxe.Int32]
					[Unop:haxe.Int32]
						~
						Prefix
						[Field:Int]
							[Cast:haxe._Int64.__Int64] [Local a(111817):haxe.Int64:haxe.Int64]
							[FInstance:Int]
								haxe._Int64.___Int64
								high:haxe.Int32
				[Var low(111827):haxe.Int32]
					[Unop:haxe.Int32]
						~
						Prefix
						[Field:Int]
							[Cast:haxe._Int64.__Int64] [Local a(111817):haxe.Int64:haxe.Int64]
							[FInstance:Int]
								haxe._Int64.___Int64
								low:haxe.Int32
				[Var x(111828):haxe._Int64.__Int64]
					[New:haxe._Int64.___Int64]
						haxe._Int64.___Int64
						[Local high(111826):haxe.Int32:haxe.Int32]
						[Local low(111827):haxe.Int32:haxe.Int32]
				[Var this(111829):haxe._Int64.__Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(111829):haxe._Int64.__Int64:haxe._Int64.__Int64]
					=
					[Local x(111828):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Cast:haxe.Int64] [Local this(111829):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A & B)
	public static inline function and[Function:(a : haxe.Int64, b : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111830):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111831):haxe.Int64]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var high(111846):haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(111830):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						&
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(111831):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
				[Var low(111847):haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(111830):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						&
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(111831):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
				[Var x(111848):haxe._Int64.__Int64]
					[New:haxe._Int64.___Int64]
						haxe._Int64.___Int64
						[Local high(111846):haxe.Int32:haxe.Int32]
						[Local low(111847):haxe.Int32:haxe.Int32]
				[Var this(111849):haxe._Int64.__Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(111849):haxe._Int64.__Int64:haxe._Int64.__Int64]
					=
					[Local x(111848):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Cast:haxe.Int64] [Local this(111849):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A | B)
	public static inline function or[Function:(a : haxe.Int64, b : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(110975):haxe.Int64]
		[Arg:haxe.Int64] [Local b(110976):haxe.Int64]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var high(110991):haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(110975):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						|
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(110976):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
				[Var low(110992):haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(110975):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						|
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(110976):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
				[Var x(110993):haxe._Int64.__Int64]
					[New:haxe._Int64.___Int64]
						haxe._Int64.___Int64
						[Local high(110991):haxe.Int32:haxe.Int32]
						[Local low(110992):haxe.Int32:haxe.Int32]
				[Var this(110994):haxe._Int64.__Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(110994):haxe._Int64.__Int64:haxe._Int64.__Int64]
					=
					[Local x(110993):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Cast:haxe.Int64] [Local this(110994):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A ^ B)
	public static inline function xor[Function:(a : haxe.Int64, b : haxe.Int64) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111850):haxe.Int64]
		[Arg:haxe.Int64] [Local b(111851):haxe.Int64]
		[Return:Dynamic]
			[Block:haxe.Int64]
				[Var high(111866):haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(111850):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
						^
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(111851):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								high:haxe.Int32
				[Var low(111867):haxe.Int32]
					[Binop:haxe.Int32]
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local a(111850):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
						^
						[Field:haxe.Int32]
							[Cast:haxe._Int64.__Int64] [Local b(111851):haxe.Int64:haxe.Int64]
							[FInstance:haxe.Int32]
								haxe._Int64.___Int64
								low:haxe.Int32
				[Var x(111868):haxe._Int64.__Int64]
					[New:haxe._Int64.___Int64]
						haxe._Int64.___Int64
						[Local high(111866):haxe.Int32:haxe.Int32]
						[Local low(111867):haxe.Int32:haxe.Int32]
				[Var this(111869):haxe._Int64.__Int64]
				[Binop:haxe._Int64.__Int64]
					[Local this(111869):haxe._Int64.__Int64:haxe._Int64.__Int64]
					=
					[Local x(111868):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[Cast:haxe.Int64] [Local this(111869):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A << B)
	public static inline function shl[Function:(a : haxe.Int64, b : Int) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(110895):haxe.Int64]
		[Arg:Int] [Local b(110896):Int]
		[Block:Dynamic]
			[Binop:Int]
				[Local b(110896):Int:Int]
				&=
				[Const:Int] 63
			[Return:Dynamic]
				[If:haxe.Int64]
					[Binop:Bool]
						[Local b(110896):Int:Int]
						==
						[Const:Int] 0
					[Then:haxe.Int64] [Block:haxe.Int64]
						[Block:haxe.Int64]
							[Var high(110901):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(110895):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
							[Var low(110902):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(110895):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
							[Var x(110903):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Local high(110901):haxe.Int32:haxe.Int32]
									[Local low(110902):haxe.Int32:haxe.Int32]
							[Var this(110904):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(110904):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(110903):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(110904):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Else:haxe.Int64] [Block:haxe.Int64]
						[If:haxe.Int64]
							[Binop:Bool]
								[Local b(110896):Int:Int]
								<
								[Const:Int] 32
							[Then:haxe.Int64] [Block:haxe.Int64]
								[Block:haxe.Int64]
									[Var high(110916):haxe.Int32]
										[Binop:haxe.Int32]
											[Binop:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local a(110895):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<<
												[Local b(110896):Int:Int]
											|
											[Binop:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local a(110895):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														low:haxe.Int32
												>>>
												[Binop:Int]
													[Const:Int] 32
													-
													[Local b(110896):Int:Int]
									[Var low(110917):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(110895):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											<<
											[Local b(110896):Int:Int]
									[Var x(110918):haxe._Int64.__Int64]
										[New:haxe._Int64.___Int64]
											haxe._Int64.___Int64
											[Local high(110916):haxe.Int32:haxe.Int32]
											[Local low(110917):haxe.Int32:haxe.Int32]
									[Var this(110919):haxe._Int64.__Int64]
									[Binop:haxe._Int64.__Int64]
										[Local this(110919):haxe._Int64.__Int64:haxe._Int64.__Int64]
										=
										[Local x(110918):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Cast:haxe.Int64] [Local this(110919):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Else:haxe.Int64] [Block:haxe.Int64]
								[Block:haxe.Int64]
									[Var high(110925):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(110895):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													low:haxe.Int32
											<<
											[Binop:Int]
												[Local b(110896):Int:Int]
												-
												[Const:Int] 32
									[Var x(110927):haxe._Int64.__Int64]
										[New:haxe._Int64.___Int64]
											haxe._Int64.___Int64
											[Local high(110925):haxe.Int32:haxe.Int32]
											[Const:Int] 0
									[Var this(110928):haxe._Int64.__Int64]
									[Binop:haxe._Int64.__Int64]
										[Local this(110928):haxe._Int64.__Int64:haxe._Int64.__Int64]
										=
										[Local x(110927):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Cast:haxe.Int64] [Local this(110928):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A >> B)
	public static inline function shr[Function:(a : haxe.Int64, b : Int) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111870):haxe.Int64]
		[Arg:Int] [Local b(111871):Int]
		[Block:Dynamic]
			[Binop:Int]
				[Local b(111871):Int:Int]
				&=
				[Const:Int] 63
			[Return:Dynamic]
				[If:haxe.Int64]
					[Binop:Bool]
						[Local b(111871):Int:Int]
						==
						[Const:Int] 0
					[Then:haxe.Int64] [Block:haxe.Int64]
						[Block:haxe.Int64]
							[Var high(111876):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111870):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
							[Var low(111877):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111870):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
							[Var x(111878):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Local high(111876):haxe.Int32:haxe.Int32]
									[Local low(111877):haxe.Int32:haxe.Int32]
							[Var this(111879):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111879):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111878):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111879):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Else:haxe.Int64] [Block:haxe.Int64]
						[If:haxe.Int64]
							[Binop:Bool]
								[Local b(111871):Int:Int]
								<
								[Const:Int] 32
							[Then:haxe.Int64] [Block:haxe.Int64]
								[Block:haxe.Int64]
									[Var high(111891):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111870):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>>
											[Local b(111871):Int:Int]
									[Var low(111892):haxe.Int32]
										[Binop:haxe.Int32]
											[Binop:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local a(111870):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<<
												[Binop:Int]
													[Const:Int] 32
													-
													[Local b(111871):Int:Int]
											|
											[Binop:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local a(111870):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														low:haxe.Int32
												>>>
												[Local b(111871):Int:Int]
									[Var x(111893):haxe._Int64.__Int64]
										[New:haxe._Int64.___Int64]
											haxe._Int64.___Int64
											[Local high(111891):haxe.Int32:haxe.Int32]
											[Local low(111892):haxe.Int32:haxe.Int32]
									[Var this(111894):haxe._Int64.__Int64]
									[Binop:haxe._Int64.__Int64]
										[Local this(111894):haxe._Int64.__Int64:haxe._Int64.__Int64]
										=
										[Local x(111893):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Cast:haxe.Int64] [Local this(111894):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Else:haxe.Int64] [Block:haxe.Int64]
								[Block:haxe.Int64]
									[Var high(111903):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111870):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>>
											[Const:Int] 31
									[Var low(111904):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111870):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>>
											[Binop:Int]
												[Local b(111871):Int:Int]
												-
												[Const:Int] 32
									[Var x(111905):haxe._Int64.__Int64]
										[New:haxe._Int64.___Int64]
											haxe._Int64.___Int64
											[Local high(111903):haxe.Int32:haxe.Int32]
											[Local low(111904):haxe.Int32:haxe.Int32]
									[Var this(111906):haxe._Int64.__Int64]
									[Binop:haxe._Int64.__Int64]
										[Local this(111906):haxe._Int64.__Int64:haxe._Int64.__Int64]
										=
										[Local x(111905):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Cast:haxe.Int64] [Local this(111906):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:op(A >>> B)
	public static inline function ushr[Function:(a : haxe.Int64, b : Int) -> haxe.Int64]
		[Arg:haxe.Int64] [Local a(111059):haxe.Int64]
		[Arg:Int] [Local b(111060):Int]
		[Block:Dynamic]
			[Binop:Int]
				[Local b(111060):Int:Int]
				&=
				[Const:Int] 63
			[Return:Dynamic]
				[If:haxe.Int64]
					[Binop:Bool]
						[Local b(111060):Int:Int]
						==
						[Const:Int] 0
					[Then:haxe.Int64] [Block:haxe.Int64]
						[Block:haxe.Int64]
							[Var high(111065):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111059):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										high:haxe.Int32
							[Var low(111066):haxe.Int32]
								[Field:haxe.Int32]
									[Cast:haxe._Int64.__Int64] [Local a(111059):haxe.Int64:haxe.Int64]
									[FInstance:haxe.Int32]
										haxe._Int64.___Int64
										low:haxe.Int32
							[Var x(111067):haxe._Int64.__Int64]
								[New:haxe._Int64.___Int64]
									haxe._Int64.___Int64
									[Local high(111065):haxe.Int32:haxe.Int32]
									[Local low(111066):haxe.Int32:haxe.Int32]
							[Var this(111068):haxe._Int64.__Int64]
							[Binop:haxe._Int64.__Int64]
								[Local this(111068):haxe._Int64.__Int64:haxe._Int64.__Int64]
								=
								[Local x(111067):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Cast:haxe.Int64] [Local this(111068):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[Else:haxe.Int64] [Block:haxe.Int64]
						[If:haxe.Int64]
							[Binop:Bool]
								[Local b(111060):Int:Int]
								<
								[Const:Int] 32
							[Then:haxe.Int64] [Block:haxe.Int64]
								[Block:haxe.Int64]
									[Var high(111080):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111059):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>>>
											[Local b(111060):Int:Int]
									[Var low(111081):haxe.Int32]
										[Binop:haxe.Int32]
											[Binop:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local a(111059):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														high:haxe.Int32
												<<
												[Binop:Int]
													[Const:Int] 32
													-
													[Local b(111060):Int:Int]
											|
											[Binop:haxe.Int32]
												[Field:haxe.Int32]
													[Cast:haxe._Int64.__Int64] [Local a(111059):haxe.Int64:haxe.Int64]
													[FInstance:haxe.Int32]
														haxe._Int64.___Int64
														low:haxe.Int32
												>>>
												[Local b(111060):Int:Int]
									[Var x(111082):haxe._Int64.__Int64]
										[New:haxe._Int64.___Int64]
											haxe._Int64.___Int64
											[Local high(111080):haxe.Int32:haxe.Int32]
											[Local low(111081):haxe.Int32:haxe.Int32]
									[Var this(111083):haxe._Int64.__Int64]
									[Binop:haxe._Int64.__Int64]
										[Local this(111083):haxe._Int64.__Int64:haxe._Int64.__Int64]
										=
										[Local x(111082):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Cast:haxe.Int64] [Local this(111083):haxe._Int64.__Int64:haxe._Int64.__Int64]
							[Else:haxe.Int64] [Block:haxe.Int64]
								[Block:haxe.Int64]
									[Var low(111090):haxe.Int32]
										[Binop:haxe.Int32]
											[Field:haxe.Int32]
												[Cast:haxe._Int64.__Int64] [Local a(111059):haxe.Int64:haxe.Int64]
												[FInstance:haxe.Int32]
													haxe._Int64.___Int64
													high:haxe.Int32
											>>>
											[Binop:Int]
												[Local b(111060):Int:Int]
												-
												[Const:Int] 32
									[Var x(111091):haxe._Int64.__Int64]
										[New:haxe._Int64.___Int64]
											haxe._Int64.___Int64
											[Const:Int] 0
											[Local low(111090):haxe.Int32:haxe.Int32]
									[Var this(111092):haxe._Int64.__Int64]
									[Binop:haxe._Int64.__Int64]
										[Local this(111092):haxe._Int64.__Int64:haxe._Int64.__Int64]
										=
										[Local x(111091):haxe._Int64.__Int64:haxe._Int64.__Int64]
									[Cast:haxe.Int64] [Local this(111092):haxe._Int64.__Int64:haxe._Int64.__Int64]

	@:impl
	public static var high(get,never):haxe.Int32;

	@:impl
	static inline function get_high[Function:(this : haxe._Int64.__Int64) -> haxe.Int32]
		[Arg:haxe._Int64.__Int64] [Local this(109972):haxe._Int64.__Int64]
		[Return:Dynamic]
			[Field:haxe.Int32]
				[Local this(109972):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[FInstance:haxe.Int32]
					haxe._Int64.___Int64
					high:haxe.Int32

	@:impl
	static inline function set_high[Function:(this : haxe._Int64.__Int64, x : haxe.Int32) -> haxe.Int32]
		[Arg:haxe._Int64.__Int64] [Local this(110493):haxe._Int64.__Int64]
		[Arg:haxe.Int32] [Local x(110494):haxe.Int32]
		[Return:Dynamic]
			[Binop:haxe.Int32]
				[Field:haxe.Int32]
					[Local this(110493):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[FInstance:haxe.Int32]
						haxe._Int64.___Int64
						high:haxe.Int32
				=
				[Local x(110494):haxe.Int32:haxe.Int32]

	@:impl
	public static var low(get,never):haxe.Int32;

	@:impl
	static inline function get_low[Function:(this : haxe._Int64.__Int64) -> haxe.Int32]
		[Arg:haxe._Int64.__Int64] [Local this(109971):haxe._Int64.__Int64]
		[Return:Dynamic]
			[Field:haxe.Int32]
				[Local this(109971):haxe._Int64.__Int64:haxe._Int64.__Int64]
				[FInstance:haxe.Int32]
					haxe._Int64.___Int64
					low:haxe.Int32

	@:impl
	static inline function set_low[Function:(this : haxe._Int64.__Int64, x : haxe.Int32) -> haxe.Int32]
		[Arg:haxe._Int64.__Int64] [Local this(110487):haxe._Int64.__Int64]
		[Arg:haxe.Int32] [Local x(110488):haxe.Int32]
		[Return:Dynamic]
			[Binop:haxe.Int32]
				[Field:haxe.Int32]
					[Local this(110487):haxe._Int64.__Int64:haxe._Int64.__Int64]
					[FInstance:haxe.Int32]
						haxe._Int64.___Int64
						low:haxe.Int32
				=
				[Local x(110488):haxe.Int32:haxe.Int32]
}